---
source: src/parser/mod.rs
assertion_line: 101
expression: syntax_tree_debug

---
Root@0..16908
  DeclStmt@0..33
    Local@0..5 "local"
    DeclTarget@5..7
      Ident@5..7 "pp"
    Assign@7..8 "="
    FuncCall@8..33
      Ident@8..15
        Ident@8..15 "require"
      FuncArgs@15..33
        LParen@15..16 "("
        LiteralExpr@16..32
          String@16..32 "'metalua.pprint'"
        RParen@32..33 ")"
  DeclStmt@33..85
    Local@33..38 "local"
    DeclTarget@38..42
      Ident@38..42 "luaK"
    Assign@42..43 "="
    FuncCall@43..85
      Ident@43..50
        Ident@43..50 "require"
      FuncArgs@50..85
        LParen@50..51 "("
        LiteralExpr@51..84
          String@51..84 "'metalua.compiler.byt ..."
        RParen@84..85 ")"
  DeclStmt@85..140
    Local@85..90 "local"
    DeclTarget@90..94
      Ident@90..94 "luaP"
    Assign@94..95 "="
    FuncCall@95..140
      Ident@95..102
        Ident@95..102 "require"
      FuncArgs@102..140
        LParen@102..103 "("
        LiteralExpr@103..139
          String@103..139 "'metalua.compiler.byt ..."
        RParen@139..140 ")"
  DeclStmt@140..165
    Local@140..145 "local"
    DeclTarget@145..151
      Ident@145..151 "debugf"
    Assign@151..152 "="
    FuncExpr@152..165
      Function@152..160 "function"
      FuncArgs@160..162
        LParen@160..161 "("
        RParen@161..162 ")"
      StmtList@162..162
      End@162..165 "end"
  DeclStmt@165..177
    Local@165..170 "local"
    DeclTarget@170..174
      Ident@170..174 "stat"
    Assign@174..175 "="
    TableExpr@175..177
      LCurly@175..176 "{"
      RCurly@176..177 "}"
  DeclStmt@177..189
    Local@177..182 "local"
    DeclTarget@182..186
      Ident@182..186 "expr"
    Assign@186..187 "="
    TableExpr@187..189
      LCurly@187..188 "{"
      RCurly@188..189 "}"
  DeclStmt@189..198
    Local@189..194 "local"
    DeclTarget@194..195
      Ident@194..195 "M"
    Assign@195..196 "="
    TableExpr@196..198
      LCurly@196..197 "{"
      RCurly@197..198 "}"
  AssignStmt@198..218
    BinOp@198..207
      Ident@198..199
        Ident@198..199 "M"
      Dot@199..200 "."
      Ident@200..207
        Ident@200..207 "MAX_INT"
    Assign@207..208 "="
    LiteralExpr@208..218
      Int@208..218 "2147483645"
  AssignStmt@218..231
    BinOp@218..227
      Ident@218..219
        Ident@218..219 "M"
      Dot@219..220 "."
      Ident@220..227
        Ident@220..227 "MAXVARS"
    Assign@227..228 "="
    LiteralExpr@228..231
      Int@228..231 "200"
  AssignStmt@231..247
    BinOp@231..244
      Ident@231..232
        Ident@231..232 "M"
      Dot@232..233 "."
      Ident@233..244
        Ident@233..244 "MAXUPVALUES"
    Assign@244..245 "="
    LiteralExpr@245..247
      Int@245..247 "32"
  AssignStmt@247..262
    BinOp@247..258
      Ident@247..248
        Ident@247..248 "M"
      Dot@248..249 "."
      Ident@249..258
        Ident@249..258 "MAXPARAMS"
    Assign@258..259 "="
    LiteralExpr@259..262
      Int@259..262 "100"
  AssignStmt@262..286
    BinOp@262..282
      Ident@262..263
        Ident@262..263 "M"
      Dot@263..264 "."
      Ident@264..282
        Ident@264..282 "LUA_MAXPARSERLEVEL"
    Assign@282..283 "="
    LiteralExpr@283..286
      Int@283..286 "200"
  AssignStmt@286..303
    BinOp@286..301
      Ident@286..287
        Ident@286..287 "M"
      Dot@287..288 "."
      Ident@288..301
        Ident@288..301 "VARARG_HASARG"
    Assign@301..302 "="
    LiteralExpr@302..303
      Int@302..303 "1"
  AssignStmt@303..322
    BinOp@303..320
      Ident@303..304
        Ident@303..304 "M"
      Dot@304..305 "."
      Ident@305..320
        Ident@305..320 "VARARG_ISVARARG"
    Assign@320..321 "="
    LiteralExpr@321..322
      Int@321..322 "2"
  AssignStmt@322..341
    BinOp@322..339
      Ident@322..323
        Ident@322..323 "M"
      Dot@323..324 "."
      Ident@324..339
        Ident@324..339 "VARARG_NEEDSARG"
    Assign@339..340 "="
    LiteralExpr@340..341
      Int@340..341 "4"
  DeclStmt@341..400
    Local@341..346 "local"
    FuncStmt@346..400
      Function@346..354 "function"
      Ident@354..364
        Ident@354..364 "hasmultret"
      FuncArgs@364..367
        LParen@364..365 "("
        Ident@365..366 "k"
        RParen@366..367 ")"
      StmtList@367..397
        ReturnStmt@367..397
          Return@367..373 "return"
          BinOp@373..397
            BinOp@373..383
              Ident@373..374
                Ident@373..374 "k"
              Eq@374..376 "=="
              LiteralExpr@376..383
                String@376..383 "\"VCALL\""
            Or@383..385 "or"
            BinOp@385..397
              Ident@385..386
                Ident@385..386 "k"
              Eq@386..388 "=="
              LiteralExpr@388..397
                String@388..397 "\"VVARARG\""
      End@397..400 "end"
  DeclStmt@400..474
    Local@400..405 "local"
    FuncStmt@405..474
      Function@405..413 "function"
      Ident@413..424
        Ident@413..424 "ensure_list"
      FuncArgs@424..429
        LParen@424..425 "("
        Ident@425..428 "ast"
        RParen@428..429 ")"
      StmtList@429..471
        ReturnStmt@429..471
          Return@429..435 "return"
          BinOp@435..471
            BinOp@435..466
              BinOp@435..458
                BinOp@435..442
                  Ident@435..438
                    Ident@435..438 "ast"
                  Dot@438..439 "."
                  Ident@439..442
                    Ident@439..442 "tag"
                And@442..445 "and"
                BinOp@445..458
                  BinOp@445..452
                    Ident@445..448
                      Ident@445..448 "ast"
                    Dot@448..449 "."
                    Ident@449..452
                      Ident@449..452 "tag"
                  NotEq@452..454 "~="
                  LiteralExpr@454..458
                    String@454..458 "\"Do\""
              And@458..461 "and"
              TableExpr@461..466
                LCurly@461..462 "{"
                TableArrayElem@462..465
                  Ident@462..465
                    Ident@462..465 "ast"
                RCurly@465..466 "}"
            Or@466..468 "or"
            Ident@468..471
              Ident@468..471 "ast"
      End@471..474 "end"
  DeclStmt@474..537
    Local@474..479 "local"
    FuncStmt@479..537
      Function@479..487 "function"
      Ident@487..496
        Ident@487..496 "getlocvar"
      FuncArgs@496..502
        LParen@496..497 "("
        Ident@497..499 "fs"
        Comma@499..500 ","
        Ident@500..501 "i"
        RParen@501..502 ")"
      StmtList@502..534
        ReturnStmt@502..534
          Return@502..508 "return"
          Index@508..534
            BinOp@508..520
              Ident@508..510
                Ident@508..510 "fs"
              Dot@510..511 "."
              BinOp@511..520
                Ident@511..512
                  Ident@511..512 "f"
                Dot@512..513 "."
                Ident@513..520
                  Ident@513..520 "locvars"
            LBracket@520..521 "["
            Index@521..533
              BinOp@521..530
                Ident@521..523
                  Ident@521..523 "fs"
                Dot@523..524 "."
                Ident@524..530
                  Ident@524..530 "actvar"
              LBracket@530..531 "["
              Ident@531..532
                Ident@531..532 "i"
              RBracket@532..533 "]"
            RBracket@533..534 "]"
      End@534..537 "end"
  DeclStmt@537..695
    Local@537..542 "local"
    FuncStmt@542..695
      Function@542..550 "function"
      Ident@550..560
        Ident@550..560 "removevars"
      FuncArgs@560..572
        LParen@560..561 "("
        Ident@561..563 "fs"
        Comma@563..564 ","
        Ident@564..571 "tolevel"
        RParen@571..572 ")"
      StmtList@572..692
        WhileStmt@572..692
          While@572..577 "while"
          BinOp@577..595
            BinOp@577..587
              Ident@577..579
                Ident@577..579 "fs"
              Dot@579..580 "."
              Ident@580..587
                Ident@580..587 "nactvar"
            RAngle@587..588 ">"
            Ident@588..595
              Ident@588..595 "tolevel"
          BlockStmt@595..692
            Do@595..597 "do"
            StmtList@597..689
              AssignStmt@597..620
                BinOp@597..607
                  Ident@597..599
                    Ident@597..599 "fs"
                  Dot@599..600 "."
                  Ident@600..607
                    Ident@600..607 "nactvar"
                Assign@607..608 "="
                BinOp@608..620
                  BinOp@608..618
                    Ident@608..610
                      Ident@608..610 "fs"
                    Dot@610..611 "."
                    Ident@611..618
                      Ident@611..618 "nactvar"
                  Minus@618..619 "-"
                  LiteralExpr@619..620
                    Int@619..620 "1"
              DeclStmt@620..656
                Local@620..625 "local"
                DeclTarget@625..631
                  Ident@625..631 "locvar"
                Assign@631..632 "="
                FuncCall@632..656
                  Ident@632..641
                    Ident@632..641 "getlocvar"
                  FuncArgs@641..656
                    LParen@641..642 "("
                    Ident@642..644
                      Ident@642..644 "fs"
                    Comma@644..645 ","
                    BinOp@645..655
                      Ident@645..647
                        Ident@645..647 "fs"
                      Dot@647..648 "."
                      Ident@648..655
                        Ident@648..655 "nactvar"
                    RParen@655..656 ")"
              IfStmt@656..689
                If@656..658 "if"
                Ident@658..664
                  Ident@658..664 "locvar"
                Then@664..668 "then"
                StmtList@668..686
                  AssignStmt@668..686
                    BinOp@668..680
                      Ident@668..674
                        Ident@668..674 "locvar"
                      Dot@674..675 "."
                      Ident@675..680
                        Ident@675..680 "endpc"
                    Assign@680..681 "="
                    BinOp@681..686
                      Ident@681..683
                        Ident@681..683 "fs"
                      Dot@683..684 "."
                      Ident@684..686
                        Ident@684..686 "pc"
                End@686..689 "end"
            End@689..692 "end"
      End@692..695 "end"
  DeclStmt@695..877
    Local@695..700 "local"
    FuncStmt@700..877
      Function@700..708 "function"
      Ident@708..724
        Ident@708..724 "registerlocalvar"
      FuncArgs@724..736
        LParen@724..725 "("
        Ident@725..727 "fs"
        Comma@727..728 ","
        Ident@728..735 "varname"
        RParen@735..736 ")"
      StmtList@736..874
        DeclStmt@736..747
          Local@736..741 "local"
          DeclTarget@741..742
            Ident@741..742 "f"
          Assign@742..743 "="
          BinOp@743..747
            Ident@743..745
              Ident@743..745 "fs"
            Dot@745..746 "."
            Ident@746..747
              Ident@746..747 "f"
        AssignStmt@747..772
          Index@747..769
            BinOp@747..756
              Ident@747..748
                Ident@747..748 "f"
              Dot@748..749 "."
              Ident@749..756
                Ident@749..756 "locvars"
            LBracket@756..757 "["
            BinOp@757..768
              Ident@757..759
                Ident@757..759 "fs"
              Dot@759..760 "."
              Ident@760..768
                Ident@760..768 "nlocvars"
            RBracket@768..769 "]"
          Assign@769..770 "="
          TableExpr@770..772
            LCurly@770..771 "{"
            RCurly@771..772 "}"
        AssignStmt@772..810
          BinOp@772..802
            Index@772..794
              BinOp@772..781
                Ident@772..773
                  Ident@772..773 "f"
                Dot@773..774 "."
                Ident@774..781
                  Ident@774..781 "locvars"
              LBracket@781..782 "["
              BinOp@782..793
                Ident@782..784
                  Ident@782..784 "fs"
                Dot@784..785 "."
                Ident@785..793
                  Ident@785..793 "nlocvars"
              RBracket@793..794 "]"
            Dot@794..795 "."
            Ident@795..802
              Ident@795..802 "varname"
          Assign@802..803 "="
          Ident@803..810
            Ident@803..810 "varname"
        DeclStmt@810..835
          Local@810..815 "local"
          DeclTarget@815..823
            Ident@815..823 "nlocvars"
          Assign@823..824 "="
          BinOp@824..835
            Ident@824..826
              Ident@824..826 "fs"
            Dot@826..827 "."
            Ident@827..835
              Ident@827..835 "nlocvars"
        AssignStmt@835..860
          BinOp@835..846
            Ident@835..837
              Ident@835..837 "fs"
            Dot@837..838 "."
            Ident@838..846
              Ident@838..846 "nlocvars"
          Assign@846..847 "="
          BinOp@847..860
            BinOp@847..858
              Ident@847..849
                Ident@847..849 "fs"
              Dot@849..850 "."
              Ident@850..858
                Ident@850..858 "nlocvars"
            Plus@858..859 "+"
            LiteralExpr@859..860
              Int@859..860 "1"
        ReturnStmt@860..874
          Return@860..866 "return"
          Ident@866..874
            Ident@866..874 "nlocvars"
      End@874..877 "end"
  DeclStmt@877..1005
    Local@877..882 "local"
    FuncStmt@882..1005
      Function@882..890 "function"
      Ident@890..905
        Ident@890..905 "adjustlocalvars"
      FuncArgs@905..915
        LParen@905..906 "("
        Ident@906..908 "fs"
        Comma@908..909 ","
        Ident@909..914 "nvars"
        RParen@914..915 ")"
      StmtList@915..1002
        AssignStmt@915..942
          BinOp@915..925
            Ident@915..917
              Ident@915..917 "fs"
            Dot@917..918 "."
            Ident@918..925
              Ident@918..925 "nactvar"
          Assign@925..926 "="
          BinOp@926..942
            BinOp@926..936
              Ident@926..928
                Ident@926..928 "fs"
              Dot@928..929 "."
              Ident@929..936
                Ident@929..936 "nactvar"
            Plus@936..937 "+"
            Ident@937..942
              Ident@937..942 "nvars"
        ForNumStmt@942..1002
          For@942..945 "for"
          Ident@945..946 "i"
          Assign@946..947 "="
          Ident@947..952
            Ident@947..952 "nvars"
          Comma@952..953 ","
          LiteralExpr@953..954
            Int@953..954 "1"
          Comma@954..955 ","
          PrefixOp@955..957
            Minus@955..956 "-"
            LiteralExpr@956..957
              Int@956..957 "1"
          BlockStmt@957..1002
            Do@957..959 "do"
            StmtList@959..999
              AssignStmt@959..999
                BinOp@959..993
                  FuncCall@959..985
                    Ident@959..968
                      Ident@959..968 "getlocvar"
                    FuncArgs@968..985
                      LParen@968..969 "("
                      Ident@969..971
                        Ident@969..971 "fs"
                      Comma@971..972 ","
                      BinOp@972..984
                        BinOp@972..982
                          Ident@972..974
                            Ident@972..974 "fs"
                          Dot@974..975 "."
                          Ident@975..982
                            Ident@975..982 "nactvar"
                        Minus@982..983 "-"
                        Ident@983..984
                          Ident@983..984 "i"
                      RParen@984..985 ")"
                  Dot@985..986 "."
                  Ident@986..993
                    Ident@986..993 "startpc"
                Assign@993..994 "="
                BinOp@994..999
                  Ident@994..996
                    Ident@994..996 "fs"
                  Dot@996..997 "."
                  Ident@997..999
                    Ident@997..999 "pc"
            End@999..1002 "end"
      End@1002..1005 "end"
  DeclStmt@1005..1324
    Local@1005..1010 "local"
    FuncStmt@1010..1324
      Function@1010..1018 "function"
      Ident@1018..1032
        Ident@1018..1032 "check_conflict"
      FuncArgs@1032..1041
        LParen@1032..1033 "("
        Ident@1033..1035 "fs"
        Comma@1035..1036 ","
        Ident@1036..1038 "lh"
        Comma@1038..1039 ","
        Ident@1039..1040 "v"
        RParen@1040..1041 ")"
      StmtList@1041..1321
        DeclStmt@1041..1062
          Local@1041..1046 "local"
          DeclTarget@1046..1051
            Ident@1046..1051 "extra"
          Assign@1051..1052 "="
          BinOp@1052..1062
            Ident@1052..1054
              Ident@1052..1054 "fs"
            Dot@1054..1055 "."
            Ident@1055..1062
              Ident@1055..1062 "freereg"
        DeclStmt@1062..1081
          Local@1062..1067 "local"
          DeclTarget@1067..1075
            Ident@1067..1075 "conflict"
          Assign@1075..1076 "="
          LiteralExpr@1076..1081
            False@1076..1081 "false"
        WhileStmt@1081..1236
          While@1081..1086 "while"
          Ident@1086..1088
            Ident@1086..1088 "lh"
          BlockStmt@1088..1236
            Do@1088..1090 "do"
            StmtList@1090..1233
              IfStmt@1090..1223
                If@1090..1092 "if"
                BinOp@1092..1110
                  BinOp@1092..1098
                    Ident@1092..1094
                      Ident@1092..1094 "lh"
                    Dot@1094..1095 "."
                    BinOp@1095..1098
                      Ident@1095..1096
                        Ident@1095..1096 "v"
                      Dot@1096..1097 "."
                      Ident@1097..1098
                        Ident@1097..1098 "k"
                  Eq@1098..1100 "=="
                  LiteralExpr@1100..1110
                    String@1100..1110 "\"VINDEXED\""
                Then@1110..1114 "then"
                StmtList@1114..1220
                  IfStmt@1114..1168
                    If@1114..1116 "if"
                    BinOp@1116..1133
                      BinOp@1116..1125
                        Ident@1116..1118
                          Ident@1116..1118 "lh"
                        Dot@1118..1119 "."
                        BinOp@1119..1125
                          Ident@1119..1120
                            Ident@1119..1120 "v"
                          Dot@1120..1121 "."
                          Ident@1121..1125
                            Ident@1121..1125 "info"
                      Eq@1125..1127 "=="
                      BinOp@1127..1133
                        Ident@1127..1128
                          Ident@1127..1128 "v"
                        Dot@1128..1129 "."
                        Ident@1129..1133
                          Ident@1129..1133 "info"
                    Then@1133..1137 "then"
                    StmtList@1137..1165
                      AssignStmt@1137..1150
                        Ident@1137..1145
                          Ident@1137..1145 "conflict"
                        Assign@1145..1146 "="
                        LiteralExpr@1146..1150
                          True@1146..1150 "true"
                      AssignStmt@1150..1165
                        BinOp@1150..1159
                          BinOp@1150..1154
                            Ident@1150..1152
                              Ident@1150..1152 "lh"
                            Dot@1152..1153 "."
                            Ident@1153..1154
                              Ident@1153..1154 "v"
                          Dot@1154..1155 "."
                          Ident@1155..1159
                            Ident@1155..1159 "info"
                        Assign@1159..1160 "="
                        Ident@1160..1165
                          Ident@1160..1165 "extra"
                    End@1165..1168 "end"
                  IfStmt@1168..1220
                    If@1168..1170 "if"
                    BinOp@1170..1186
                      BinOp@1170..1178
                        Ident@1170..1172
                          Ident@1170..1172 "lh"
                        Dot@1172..1173 "."
                        BinOp@1173..1178
                          Ident@1173..1174
                            Ident@1173..1174 "v"
                          Dot@1174..1175 "."
                          Ident@1175..1178
                            Ident@1175..1178 "aux"
                      Eq@1178..1180 "=="
                      BinOp@1180..1186
                        Ident@1180..1181
                          Ident@1180..1181 "v"
                        Dot@1181..1182 "."
                        Ident@1182..1186
                          Ident@1182..1186 "info"
                    Then@1186..1190 "then"
                    StmtList@1190..1217
                      AssignStmt@1190..1203
                        Ident@1190..1198
                          Ident@1190..1198 "conflict"
                        Assign@1198..1199 "="
                        LiteralExpr@1199..1203
                          True@1199..1203 "true"
                      AssignStmt@1203..1217
                        BinOp@1203..1211
                          BinOp@1203..1207
                            Ident@1203..1205
                              Ident@1203..1205 "lh"
                            Dot@1205..1206 "."
                            Ident@1206..1207
                              Ident@1206..1207 "v"
                          Dot@1207..1208 "."
                          Ident@1208..1211
                            Ident@1208..1211 "aux"
                        Assign@1211..1212 "="
                        Ident@1212..1217
                          Ident@1212..1217 "extra"
                    End@1217..1220 "end"
                End@1220..1223 "end"
              AssignStmt@1223..1233
                Ident@1223..1225
                  Ident@1223..1225 "lh"
                Assign@1225..1226 "="
                BinOp@1226..1233
                  Ident@1226..1228
                    Ident@1226..1228 "lh"
                  Dot@1228..1229 "."
                  Ident@1229..1233
                    Ident@1229..1233 "prev"
            End@1233..1236 "end"
        IfStmt@1236..1321
          If@1236..1238 "if"
          Ident@1238..1246
            Ident@1238..1246 "conflict"
          Then@1246..1250 "then"
          StmtList@1250..1318
            FuncCall@1250..1296
              BinOp@1250..1262
                Ident@1250..1254
                  Ident@1250..1254 "luaK"
                Colon@1254..1255 ":"
                Ident@1255..1262
                  Ident@1255..1262 "codeABC"
              FuncArgs@1262..1296
                LParen@1262..1263 "("
                Ident@1263..1265
                  Ident@1263..1265 "fs"
                Comma@1265..1266 ","
                LiteralExpr@1266..1275
                  String@1266..1275 "\"OP_MOVE\""
                Comma@1275..1276 ","
                BinOp@1276..1286
                  Ident@1276..1278
                    Ident@1276..1278 "fs"
                  Dot@1278..1279 "."
                  Ident@1279..1286
                    Ident@1279..1286 "freereg"
                Comma@1286..1287 ","
                BinOp@1287..1293
                  Ident@1287..1288
                    Ident@1287..1288 "v"
                  Dot@1288..1289 "."
                  Ident@1289..1293
                    Ident@1289..1293 "info"
                Comma@1293..1294 ","
                LiteralExpr@1294..1295
                  Int@1294..1295 "0"
                RParen@1295..1296 ")"
            FuncCall@1296..1318
              BinOp@1296..1312
                Ident@1296..1300
                  Ident@1296..1300 "luaK"
                Colon@1300..1301 ":"
                Ident@1301..1312
                  Ident@1301..1312 "reserveregs"
              FuncArgs@1312..1318
                LParen@1312..1313 "("
                Ident@1313..1315
                  Ident@1313..1315 "fs"
                Comma@1315..1316 ","
                LiteralExpr@1316..1317
                  Int@1316..1317 "1"
                RParen@1317..1318 ")"
          End@1318..1321 "end"
      End@1321..1324 "end"
  DeclStmt@1324..1403
    Local@1324..1329 "local"
    FuncStmt@1329..1403
      Function@1329..1337 "function"
      Ident@1337..1345
        Ident@1337..1345 "init_exp"
      FuncArgs@1345..1352
        LParen@1345..1346 "("
        Ident@1346..1347 "e"
        Comma@1347..1348 ","
        Ident@1348..1349 "k"
        Comma@1349..1350 ","
        Ident@1350..1351 "i"
        RParen@1351..1352 ")"
      StmtList@1352..1400
        AssignStmt@1352..1400
          BinOp@1352..1355
            Ident@1352..1353
              Ident@1352..1353 "e"
            Dot@1353..1354 "."
            Ident@1354..1355
              Ident@1354..1355 "f"
          Comma@1355..1356 ","
          BinOp@1356..1359
            Ident@1356..1357
              Ident@1356..1357 "e"
            Dot@1357..1358 "."
            Ident@1358..1359
              Ident@1358..1359 "t"
          Comma@1359..1360 ","
          BinOp@1360..1363
            Ident@1360..1361
              Ident@1360..1361 "e"
            Dot@1361..1362 "."
            Ident@1362..1363
              Ident@1362..1363 "k"
          Comma@1363..1364 ","
          BinOp@1364..1370
            Ident@1364..1365
              Ident@1364..1365 "e"
            Dot@1365..1366 "."
            Ident@1366..1370
              Ident@1366..1370 "info"
          Assign@1370..1371 "="
          ExprList@1371..1400
            BinOp@1371..1383
              Ident@1371..1375
                Ident@1371..1375 "luaK"
              Dot@1375..1376 "."
              Ident@1376..1383
                Ident@1376..1383 "NO_JUMP"
            Comma@1383..1384 ","
            BinOp@1384..1396
              Ident@1384..1388
                Ident@1384..1388 "luaK"
              Dot@1388..1389 "."
              Ident@1389..1396
                Ident@1389..1396 "NO_JUMP"
            Comma@1396..1397 ","
            Ident@1397..1398
              Ident@1397..1398 "k"
            Comma@1398..1399 ","
            Ident@1399..1400
              Ident@1399..1400 "i"
      End@1400..1403 "end"
  DeclStmt@1403..1476
    Local@1403..1408 "local"
    FuncStmt@1408..1476
      Function@1408..1416 "function"
      Ident@1416..1426
        Ident@1416..1426 "codestring"
      FuncArgs@1426..1436
        LParen@1426..1427 "("
        Ident@1427..1429 "fs"
        Comma@1429..1430 ","
        Ident@1430..1431 "e"
        Comma@1431..1432 ","
        Ident@1432..1435 "str"
        RParen@1435..1436 ")"
      StmtList@1436..1473
        FuncCall@1436..1473
          Ident@1436..1444
            Ident@1436..1444 "init_exp"
          FuncArgs@1444..1473
            LParen@1444..1445 "("
            Ident@1445..1446
              Ident@1445..1446 "e"
            Comma@1446..1447 ","
            LiteralExpr@1447..1451
              String@1447..1451 "\"VK\""
            Comma@1451..1452 ","
            FuncCall@1452..1472
              BinOp@1452..1464
                Ident@1452..1456
                  Ident@1452..1456 "luaK"
                Colon@1456..1457 ":"
                Ident@1457..1464
                  Ident@1457..1464 "stringK"
              FuncArgs@1464..1472
                LParen@1464..1465 "("
                Ident@1465..1467
                  Ident@1465..1467 "fs"
                Comma@1467..1468 ","
                Ident@1468..1471
                  Ident@1468..1471 "str"
                RParen@1471..1472 ")"
            RParen@1472..1473 ")"
      End@1473..1476 "end"
  DeclStmt@1476..1617
    Local@1476..1481 "local"
    FuncStmt@1481..1617
      Function@1481..1489 "function"
      Ident@1489..1498
        Ident@1489..1498 "searchvar"
      FuncArgs@1498..1507
        LParen@1498..1499 "("
        Ident@1499..1501 "fs"
        Comma@1501..1502 ","
        Ident@1502..1506 "name"
        RParen@1506..1507 ")"
      StmtList@1507..1614
        ForNumStmt@1507..1606
          For@1507..1510 "for"
          Ident@1510..1511 "i"
          Assign@1511..1512 "="
          BinOp@1512..1524
            BinOp@1512..1522
              Ident@1512..1514
                Ident@1512..1514 "fs"
              Dot@1514..1515 "."
              Ident@1515..1522
                Ident@1515..1522 "nactvar"
            Minus@1522..1523 "-"
            LiteralExpr@1523..1524
              Int@1523..1524 "1"
          Comma@1524..1525 ","
          LiteralExpr@1525..1526
            Int@1525..1526 "0"
          Comma@1526..1527 ","
          PrefixOp@1527..1529
            Minus@1527..1528 "-"
            LiteralExpr@1528..1529
              Int@1528..1529 "1"
          BlockStmt@1529..1606
            Do@1529..1531 "do"
            StmtList@1531..1603
              DeclStmt@1531..1558
                Local@1531..1536 "local"
                DeclTarget@1536..1542
                  Ident@1536..1542 "locvar"
                Assign@1542..1543 "="
                FuncCall@1543..1558
                  Ident@1543..1552
                    Ident@1543..1552 "getlocvar"
                  FuncArgs@1552..1558
                    LParen@1552..1553 "("
                    Ident@1553..1555
                      Ident@1553..1555 "fs"
                    Comma@1555..1556 ","
                    Ident@1556..1557
                      Ident@1556..1557 "i"
                    RParen@1557..1558 ")"
              IfStmt@1558..1603
                If@1558..1560 "if"
                BinOp@1560..1589
                  Ident@1560..1566
                    Ident@1560..1566 "locvar"
                  And@1566..1569 "and"
                  BinOp@1569..1589
                    Ident@1569..1573
                      Ident@1569..1573 "name"
                    Eq@1573..1575 "=="
                    BinOp@1575..1589
                      Ident@1575..1581
                        Ident@1575..1581 "locvar"
                      Dot@1581..1582 "."
                      Ident@1582..1589
                        Ident@1582..1589 "varname"
                Then@1589..1593 "then"
                StmtList@1593..1600
                  ReturnStmt@1593..1600
                    Return@1593..1599 "return"
                    Ident@1599..1600
                      Ident@1599..1600 "i"
                End@1600..1603 "end"
            End@1603..1606 "end"
        ReturnStmt@1606..1614
          Return@1606..1612 "return"
          PrefixOp@1612..1614
            Minus@1612..1613 "-"
            LiteralExpr@1613..1614
              Int@1613..1614 "1"
      End@1614..1617 "end"
  DeclStmt@1617..1872
    Local@1617..1622 "local"
    FuncStmt@1622..1872
      Function@1622..1630 "function"
      Ident@1630..1638
        Ident@1630..1638 "newproto"
      FuncArgs@1638..1640
        LParen@1638..1639 "("
        RParen@1639..1640 ")"
      StmtList@1640..1869
        DeclStmt@1640..1649
          Local@1640..1645 "local"
          DeclTarget@1645..1646
            Ident@1645..1646 "f"
          Assign@1646..1647 "="
          TableExpr@1647..1649
            LCurly@1647..1648 "{"
            RCurly@1648..1649 "}"
        AssignStmt@1649..1655
          BinOp@1649..1652
            Ident@1649..1650
              Ident@1649..1650 "f"
            Dot@1650..1651 "."
            Ident@1651..1652
              Ident@1651..1652 "k"
          Assign@1652..1653 "="
          TableExpr@1653..1655
            LCurly@1653..1654 "{"
            RCurly@1654..1655 "}"
        AssignStmt@1655..1664
          BinOp@1655..1662
            Ident@1655..1656
              Ident@1655..1656 "f"
            Dot@1656..1657 "."
            Ident@1657..1662
              Ident@1657..1662 "sizek"
          Assign@1662..1663 "="
          LiteralExpr@1663..1664
            Int@1663..1664 "0"
        AssignStmt@1664..1670
          BinOp@1664..1667
            Ident@1664..1665
              Ident@1664..1665 "f"
            Dot@1665..1666 "."
            Ident@1666..1667
              Ident@1666..1667 "p"
          Assign@1667..1668 "="
          TableExpr@1668..1670
            LCurly@1668..1669 "{"
            RCurly@1669..1670 "}"
        AssignStmt@1670..1679
          BinOp@1670..1677
            Ident@1670..1671
              Ident@1670..1671 "f"
            Dot@1671..1672 "."
            Ident@1672..1677
              Ident@1672..1677 "sizep"
          Assign@1677..1678 "="
          LiteralExpr@1678..1679
            Int@1678..1679 "0"
        AssignStmt@1679..1688
          BinOp@1679..1685
            Ident@1679..1680
              Ident@1679..1680 "f"
            Dot@1680..1681 "."
            Ident@1681..1685
              Ident@1681..1685 "code"
          Assign@1685..1686 "="
          TableExpr@1686..1688
            LCurly@1686..1687 "{"
            RCurly@1687..1688 "}"
        AssignStmt@1688..1700
          BinOp@1688..1698
            Ident@1688..1689
              Ident@1688..1689 "f"
            Dot@1689..1690 "."
            Ident@1690..1698
              Ident@1690..1698 "sizecode"
          Assign@1698..1699 "="
          LiteralExpr@1699..1700
            Int@1699..1700 "0"
        AssignStmt@1700..1716
          BinOp@1700..1714
            Ident@1700..1701
              Ident@1700..1701 "f"
            Dot@1701..1702 "."
            Ident@1702..1714
              Ident@1702..1714 "sizelineinfo"
          Assign@1714..1715 "="
          LiteralExpr@1715..1716
            Int@1715..1716 "0"
        AssignStmt@1716..1732
          BinOp@1716..1730
            Ident@1716..1717
              Ident@1716..1717 "f"
            Dot@1717..1718 "."
            Ident@1718..1730
              Ident@1718..1730 "sizeupvalues"
          Assign@1730..1731 "="
          LiteralExpr@1731..1732
            Int@1731..1732 "0"
        AssignStmt@1732..1740
          BinOp@1732..1738
            Ident@1732..1733
              Ident@1732..1733 "f"
            Dot@1733..1734 "."
            Ident@1734..1738
              Ident@1734..1738 "nups"
          Assign@1738..1739 "="
          LiteralExpr@1739..1740
            Int@1739..1740 "0"
        AssignStmt@1740..1753
          BinOp@1740..1750
            Ident@1740..1741
              Ident@1740..1741 "f"
            Dot@1741..1742 "."
            Ident@1742..1750
              Ident@1742..1750 "upvalues"
          Assign@1750..1751 "="
          TableExpr@1751..1753
            LCurly@1751..1752 "{"
            RCurly@1752..1753 "}"
        AssignStmt@1753..1766
          BinOp@1753..1764
            Ident@1753..1754
              Ident@1753..1754 "f"
            Dot@1754..1755 "."
            Ident@1755..1764
              Ident@1755..1764 "numparams"
          Assign@1764..1765 "="
          LiteralExpr@1765..1766
            Int@1765..1766 "0"
        AssignStmt@1766..1779
          BinOp@1766..1777
            Ident@1766..1767
              Ident@1766..1767 "f"
            Dot@1767..1768 "."
            Ident@1768..1777
              Ident@1768..1777 "is_vararg"
          Assign@1777..1778 "="
          LiteralExpr@1778..1779
            Int@1778..1779 "0"
        AssignStmt@1779..1795
          BinOp@1779..1793
            Ident@1779..1780
              Ident@1779..1780 "f"
            Dot@1780..1781 "."
            Ident@1781..1793
              Ident@1781..1793 "maxstacksize"
          Assign@1793..1794 "="
          LiteralExpr@1794..1795
            Int@1794..1795 "0"
        AssignStmt@1795..1808
          BinOp@1795..1805
            Ident@1795..1796
              Ident@1795..1796 "f"
            Dot@1796..1797 "."
            Ident@1797..1805
              Ident@1797..1805 "lineinfo"
          Assign@1805..1806 "="
          TableExpr@1806..1808
            LCurly@1806..1807 "{"
            RCurly@1807..1808 "}"
        AssignStmt@1808..1823
          BinOp@1808..1821
            Ident@1808..1809
              Ident@1808..1809 "f"
            Dot@1809..1810 "."
            Ident@1810..1821
              Ident@1810..1821 "sizelocvars"
          Assign@1821..1822 "="
          LiteralExpr@1822..1823
            Int@1822..1823 "0"
        AssignStmt@1823..1835
          BinOp@1823..1832
            Ident@1823..1824
              Ident@1823..1824 "f"
            Dot@1824..1825 "."
            Ident@1825..1832
              Ident@1825..1832 "locvars"
          Assign@1832..1833 "="
          TableExpr@1833..1835
            LCurly@1833..1834 "{"
            RCurly@1834..1835 "}"
        AssignStmt@1835..1850
          BinOp@1835..1848
            Ident@1835..1836
              Ident@1835..1836 "f"
            Dot@1836..1837 "."
            Ident@1837..1848
              Ident@1837..1848 "lineDefined"
          Assign@1848..1849 "="
          LiteralExpr@1849..1850
            Int@1849..1850 "0"
        AssignStmt@1850..1862
          BinOp@1850..1858
            Ident@1850..1851
              Ident@1850..1851 "f"
            Dot@1851..1852 "."
            Ident@1852..1858
              Ident@1852..1858 "source"
          Assign@1858..1859 "="
          LiteralExpr@1859..1862
            Nil@1859..1862 "nil"
        ReturnStmt@1862..1869
          Return@1862..1868 "return"
          Ident@1868..1869
            Ident@1868..1869 "f"
      End@1869..1872 "end"
  DeclStmt@1872..2276
    Local@1872..1877 "local"
    FuncStmt@1877..2276
      Function@1877..1885 "function"
      Ident@1885..1894
        Ident@1885..1894 "open_func"
      FuncArgs@1894..1902
        LParen@1894..1895 "("
        Ident@1895..1901 "old_fs"
        RParen@1901..1902 ")"
      StmtList@1902..2273
        DeclStmt@1902..1916
          Local@1902..1907 "local"
          DeclTarget@1907..1913
            Ident@1907..1913 "new_fs"
          Assign@1913..1914 "="
          TableExpr@1914..1916
            LCurly@1914..1915 "{"
            RCurly@1915..1916 "}"
        AssignStmt@1916..1934
          BinOp@1916..1931
            Ident@1916..1922
              Ident@1916..1922 "new_fs"
            Dot@1922..1923 "."
            Ident@1923..1931
              Ident@1923..1931 "upvalues"
          Assign@1931..1932 "="
          TableExpr@1932..1934
            LCurly@1932..1933 "{"
            RCurly@1933..1934 "}"
        AssignStmt@1934..1950
          BinOp@1934..1947
            Ident@1934..1940
              Ident@1934..1940 "new_fs"
            Dot@1940..1941 "."
            Ident@1941..1947
              Ident@1941..1947 "actvar"
          Assign@1947..1948 "="
          TableExpr@1948..1950
            LCurly@1948..1949 "{"
            RCurly@1949..1950 "}"
        DeclStmt@1950..1967
          Local@1950..1955 "local"
          DeclTarget@1955..1956
            Ident@1955..1956 "f"
          Assign@1956..1957 "="
          FuncCall@1957..1967
            Ident@1957..1965
              Ident@1957..1965 "newproto"
            FuncArgs@1965..1967
              LParen@1965..1966 "("
              RParen@1966..1967 ")"
        AssignStmt@1967..1977
          BinOp@1967..1975
            Ident@1967..1973
              Ident@1967..1973 "new_fs"
            Dot@1973..1974 "."
            Ident@1974..1975
              Ident@1974..1975 "f"
          Assign@1975..1976 "="
          Ident@1976..1977
            Ident@1976..1977 "f"
        AssignStmt@1977..1995
          BinOp@1977..1988
            Ident@1977..1983
              Ident@1977..1983 "new_fs"
            Dot@1983..1984 "."
            Ident@1984..1988
              Ident@1984..1988 "prev"
          Assign@1988..1989 "="
          Ident@1989..1995
            Ident@1989..1995 "old_fs"
        AssignStmt@1995..2006
          BinOp@1995..2004
            Ident@1995..2001
              Ident@1995..2001 "new_fs"
            Dot@2001..2002 "."
            Ident@2002..2004
              Ident@2002..2004 "pc"
          Assign@2004..2005 "="
          LiteralExpr@2005..2006
            Int@2005..2006 "0"
        AssignStmt@2006..2026
          BinOp@2006..2023
            Ident@2006..2012
              Ident@2006..2012 "new_fs"
            Dot@2012..2013 "."
            Ident@2013..2023
              Ident@2013..2023 "lasttarget"
          Assign@2023..2024 "="
          PrefixOp@2024..2026
            Minus@2024..2025 "-"
            LiteralExpr@2025..2026
              Int@2025..2026 "1"
        AssignStmt@2026..2049
          BinOp@2026..2036
            Ident@2026..2032
              Ident@2026..2032 "new_fs"
            Dot@2032..2033 "."
            Ident@2033..2036
              Ident@2033..2036 "jpc"
          Assign@2036..2037 "="
          BinOp@2037..2049
            Ident@2037..2041
              Ident@2037..2041 "luaK"
            Dot@2041..2042 "."
            Ident@2042..2049
              Ident@2042..2049 "NO_JUMP"
        AssignStmt@2049..2065
          BinOp@2049..2063
            Ident@2049..2055
              Ident@2049..2055 "new_fs"
            Dot@2055..2056 "."
            Ident@2056..2063
              Ident@2056..2063 "freereg"
          Assign@2063..2064 "="
          LiteralExpr@2064..2065
            Int@2064..2065 "0"
        AssignStmt@2065..2076
          BinOp@2065..2074
            Ident@2065..2071
              Ident@2065..2071 "new_fs"
            Dot@2071..2072 "."
            Ident@2072..2074
              Ident@2072..2074 "nk"
          Assign@2074..2075 "="
          LiteralExpr@2075..2076
            Int@2075..2076 "0"
        AssignStmt@2076..2087
          BinOp@2076..2084
            Ident@2076..2082
              Ident@2076..2082 "new_fs"
            Dot@2082..2083 "."
            Ident@2083..2084
              Ident@2083..2084 "h"
          Assign@2084..2085 "="
          TableExpr@2085..2087
            LCurly@2085..2086 "{"
            RCurly@2086..2087 "}"
        AssignStmt@2087..2098
          BinOp@2087..2096
            Ident@2087..2093
              Ident@2087..2093 "new_fs"
            Dot@2093..2094 "."
            Ident@2094..2096
              Ident@2094..2096 "np"
          Assign@2096..2097 "="
          LiteralExpr@2097..2098
            Int@2097..2098 "0"
        AssignStmt@2098..2115
          BinOp@2098..2113
            Ident@2098..2104
              Ident@2098..2104 "new_fs"
            Dot@2104..2105 "."
            Ident@2105..2113
              Ident@2105..2113 "nlocvars"
          Assign@2113..2114 "="
          LiteralExpr@2114..2115
            Int@2114..2115 "0"
        AssignStmt@2115..2131
          BinOp@2115..2129
            Ident@2115..2121
              Ident@2115..2121 "new_fs"
            Dot@2121..2122 "."
            Ident@2122..2129
              Ident@2122..2129 "nactvar"
          Assign@2129..2130 "="
          LiteralExpr@2130..2131
            Int@2130..2131 "0"
        AssignStmt@2131..2144
          BinOp@2131..2140
            Ident@2131..2137
              Ident@2131..2137 "new_fs"
            Dot@2137..2138 "."
            Ident@2138..2140
              Ident@2138..2140 "bl"
          Assign@2140..2141 "="
          LiteralExpr@2141..2144
            Nil@2141..2144 "nil"
        AssignStmt@2144..2189
          BinOp@2144..2160
            Ident@2144..2150
              Ident@2144..2150 "new_fs"
            Dot@2150..2151 "."
            Ident@2151..2160
              Ident@2151..2160 "nestlevel"
          Assign@2160..2161 "="
          BinOp@2161..2189
            BinOp@2161..2186
              Ident@2161..2167
                Ident@2161..2167 "old_fs"
              And@2167..2170 "and"
              BinOp@2170..2186
                Ident@2170..2176
                  Ident@2170..2176 "old_fs"
                Dot@2176..2177 "."
                Ident@2177..2186
                  Ident@2177..2186 "nestlevel"
            Or@2186..2188 "or"
            LiteralExpr@2188..2189
              Int@2188..2189 "0"
        AssignStmt@2189..2205
          BinOp@2189..2203
            Ident@2189..2190
              Ident@2189..2190 "f"
            Dot@2190..2191 "."
            Ident@2191..2203
              Ident@2191..2203 "maxstacksize"
          Assign@2203..2204 "="
          LiteralExpr@2204..2205
            Int@2204..2205 "2"
        AssignStmt@2205..2222
          BinOp@2205..2220
            Ident@2205..2211
              Ident@2205..2211 "new_fs"
            Dot@2211..2212 "."
            Ident@2212..2220
              Ident@2212..2220 "lastline"
          Assign@2220..2221 "="
          LiteralExpr@2221..2222
            Int@2221..2222 "0"
        AssignStmt@2222..2245
          BinOp@2222..2242
            Ident@2222..2228
              Ident@2222..2228 "new_fs"
            Dot@2228..2229 "."
            Ident@2229..2242
              Ident@2229..2242 "forward_gotos"
          Assign@2242..2243 "="
          TableExpr@2243..2245
            LCurly@2243..2244 "{"
            RCurly@2244..2245 "}"
        AssignStmt@2245..2261
          BinOp@2245..2258
            Ident@2245..2251
              Ident@2245..2251 "new_fs"
            Dot@2251..2252 "."
            Ident@2252..2258
              Ident@2252..2258 "labels"
          Assign@2258..2259 "="
          TableExpr@2259..2261
            LCurly@2259..2260 "{"
            RCurly@2260..2261 "}"
        ReturnStmt@2261..2273
          Return@2261..2267 "return"
          Ident@2267..2273
            Ident@2267..2273 "new_fs"
      End@2273..2276 "end"
  DeclStmt@2276..2571
    Local@2276..2281 "local"
    FuncStmt@2281..2571
      Function@2281..2289 "function"
      Ident@2289..2299
        Ident@2289..2299 "close_func"
      FuncArgs@2299..2303
        LParen@2299..2300 "("
        Ident@2300..2302 "fs"
        RParen@2302..2303 ")"
      StmtList@2303..2568
        DeclStmt@2303..2314
          Local@2303..2308 "local"
          DeclTarget@2308..2309
            Ident@2308..2309 "f"
          Assign@2309..2310 "="
          BinOp@2310..2314
            Ident@2310..2312
              Ident@2310..2312 "fs"
            Dot@2312..2313 "."
            Ident@2313..2314
              Ident@2313..2314 "f"
        FuncCall@2314..2330
          Ident@2314..2324
            Ident@2314..2324 "removevars"
          FuncArgs@2324..2330
            LParen@2324..2325 "("
            Ident@2325..2327
              Ident@2325..2327 "fs"
            Comma@2327..2328 ","
            LiteralExpr@2328..2329
              Int@2328..2329 "0"
            RParen@2329..2330 ")"
        FuncCall@2330..2346
          BinOp@2330..2338
            Ident@2330..2334
              Ident@2330..2334 "luaK"
            Colon@2334..2335 ":"
            Ident@2335..2338
              Ident@2335..2338 "ret"
          FuncArgs@2338..2346
            LParen@2338..2339 "("
            Ident@2339..2341
              Ident@2339..2341 "fs"
            Comma@2341..2342 ","
            LiteralExpr@2342..2343
              Int@2342..2343 "0"
            Comma@2343..2344 ","
            LiteralExpr@2344..2345
              Int@2344..2345 "0"
            RParen@2345..2346 ")"
        AssignStmt@2346..2362
          BinOp@2346..2356
            Ident@2346..2347
              Ident@2346..2347 "f"
            Dot@2347..2348 "."
            Ident@2348..2356
              Ident@2348..2356 "sizecode"
          Assign@2356..2357 "="
          BinOp@2357..2362
            Ident@2357..2359
              Ident@2357..2359 "fs"
            Dot@2359..2360 "."
            Ident@2360..2362
              Ident@2360..2362 "pc"
        AssignStmt@2362..2382
          BinOp@2362..2376
            Ident@2362..2363
              Ident@2362..2363 "f"
            Dot@2363..2364 "."
            Ident@2364..2376
              Ident@2364..2376 "sizelineinfo"
          Assign@2376..2377 "="
          BinOp@2377..2382
            Ident@2377..2379
              Ident@2377..2379 "fs"
            Dot@2379..2380 "."
            Ident@2380..2382
              Ident@2380..2382 "pc"
        AssignStmt@2382..2395
          BinOp@2382..2389
            Ident@2382..2383
              Ident@2382..2383 "f"
            Dot@2383..2384 "."
            Ident@2384..2389
              Ident@2384..2389 "sizek"
          Assign@2389..2390 "="
          BinOp@2390..2395
            Ident@2390..2392
              Ident@2390..2392 "fs"
            Dot@2392..2393 "."
            Ident@2393..2395
              Ident@2393..2395 "nk"
        AssignStmt@2395..2408
          BinOp@2395..2402
            Ident@2395..2396
              Ident@2395..2396 "f"
            Dot@2396..2397 "."
            Ident@2397..2402
              Ident@2397..2402 "sizep"
          Assign@2402..2403 "="
          BinOp@2403..2408
            Ident@2403..2405
              Ident@2403..2405 "fs"
            Dot@2405..2406 "."
            Ident@2406..2408
              Ident@2406..2408 "np"
        AssignStmt@2408..2433
          BinOp@2408..2421
            Ident@2408..2409
              Ident@2408..2409 "f"
            Dot@2409..2410 "."
            Ident@2410..2421
              Ident@2410..2421 "sizelocvars"
          Assign@2421..2422 "="
          BinOp@2422..2433
            Ident@2422..2424
              Ident@2422..2424 "fs"
            Dot@2424..2425 "."
            Ident@2425..2433
              Ident@2425..2433 "nlocvars"
        AssignStmt@2433..2454
          BinOp@2433..2447
            Ident@2433..2434
              Ident@2433..2434 "f"
            Dot@2434..2435 "."
            Ident@2435..2447
              Ident@2435..2447 "sizeupvalues"
          Assign@2447..2448 "="
          BinOp@2448..2454
            Ident@2448..2449
              Ident@2448..2449 "f"
            Dot@2449..2450 "."
            Ident@2450..2454
              Ident@2450..2454 "nups"
        FuncCall@2454..2472
          Ident@2454..2460
            Ident@2454..2460 "assert"
          FuncArgs@2460..2472
            LParen@2460..2461 "("
            BinOp@2461..2471
              BinOp@2461..2466
                Ident@2461..2463
                  Ident@2461..2463 "fs"
                Dot@2463..2464 "."
                Ident@2464..2466
                  Ident@2464..2466 "bl"
              Eq@2466..2468 "=="
              LiteralExpr@2468..2471
                Nil@2468..2471 "nil"
            RParen@2471..2472 ")"
        IfStmt@2472..2568
          If@2472..2474 "if"
          FuncCall@2474..2496
            Ident@2474..2478
              Ident@2474..2478 "next"
            FuncArgs@2478..2496
              LParen@2478..2479 "("
              BinOp@2479..2495
                Ident@2479..2481
                  Ident@2479..2481 "fs"
                Dot@2481..2482 "."
                Ident@2482..2495
                  Ident@2482..2495 "forward_gotos"
              RParen@2495..2496 ")"
          Then@2496..2500 "then"
          StmtList@2500..2565
            DeclStmt@2500..2536
              Local@2500..2505 "local"
              DeclTarget@2505..2506
                Ident@2505..2506 "x"
              Assign@2506..2507 "="
              FuncCall@2507..2536
                BinOp@2507..2518
                  Ident@2507..2509
                    Ident@2507..2509 "pp"
                  Dot@2509..2510 "."
                  Ident@2510..2518
                    Ident@2510..2518 "tostring"
                FuncArgs@2518..2536
                  LParen@2518..2519 "("
                  BinOp@2519..2535
                    Ident@2519..2521
                      Ident@2519..2521 "fs"
                    Dot@2521..2522 "."
                    Ident@2522..2535
                      Ident@2522..2535 "forward_gotos"
                  RParen@2535..2536 ")"
            FuncCall@2536..2565
              Ident@2536..2541
                Ident@2536..2541 "error"
              FuncArgs@2541..2565
                LParen@2541..2542 "("
                BinOp@2542..2564
                  LiteralExpr@2542..2561
                    String@2542..2561 "\"Unresolved goto: \""
                  DDot@2561..2563 ".."
                  Ident@2563..2564
                    Ident@2563..2564 "x"
                RParen@2564..2565 ")"
          End@2565..2568 "end"
      End@2568..2571 "end"
  DeclStmt@2571..2847
    Local@2571..2576 "local"
    FuncStmt@2576..2847
      Function@2576..2584 "function"
      Ident@2584..2595
        Ident@2584..2595 "pushclosure"
      FuncArgs@2595..2606
        LParen@2595..2596 "("
        Ident@2596..2598 "fs"
        Comma@2598..2599 ","
        Ident@2599..2603 "func"
        Comma@2603..2604 ","
        Ident@2604..2605 "v"
        RParen@2605..2606 ")"
      StmtList@2606..2844
        DeclStmt@2606..2617
          Local@2606..2611 "local"
          DeclTarget@2611..2612
            Ident@2611..2612 "f"
          Assign@2612..2613 "="
          BinOp@2613..2617
            Ident@2613..2615
              Ident@2613..2615 "fs"
            Dot@2615..2616 "."
            Ident@2616..2617
              Ident@2616..2617 "f"
        AssignStmt@2617..2634
          Index@2617..2627
            BinOp@2617..2620
              Ident@2617..2618
                Ident@2617..2618 "f"
              Dot@2618..2619 "."
              Ident@2619..2620
                Ident@2619..2620 "p"
            LBracket@2620..2621 "["
            BinOp@2621..2626
              Ident@2621..2623
                Ident@2621..2623 "fs"
              Dot@2623..2624 "."
              Ident@2624..2626
                Ident@2624..2626 "np"
            RBracket@2626..2627 "]"
          Assign@2627..2628 "="
          BinOp@2628..2634
            Ident@2628..2632
              Ident@2628..2632 "func"
            Dot@2632..2633 "."
            Ident@2633..2634
              Ident@2633..2634 "f"
        AssignStmt@2634..2647
          BinOp@2634..2639
            Ident@2634..2636
              Ident@2634..2636 "fs"
            Dot@2636..2637 "."
            Ident@2637..2639
              Ident@2637..2639 "np"
          Assign@2639..2640 "="
          BinOp@2640..2647
            BinOp@2640..2645
              Ident@2640..2642
                Ident@2640..2642 "fs"
              Dot@2642..2643 "."
              Ident@2643..2645
                Ident@2643..2645 "np"
            Plus@2645..2646 "+"
            LiteralExpr@2646..2647
              Int@2646..2647 "1"
        FuncCall@2647..2711
          Ident@2647..2655
            Ident@2647..2655 "init_exp"
          FuncArgs@2655..2711
            LParen@2655..2656 "("
            Ident@2656..2657
              Ident@2656..2657 "v"
            Comma@2657..2658 ","
            LiteralExpr@2658..2670
              String@2658..2670 "\"VRELOCABLE\""
            Comma@2670..2671 ","
            FuncCall@2671..2710
              BinOp@2671..2683
                Ident@2671..2675
                  Ident@2671..2675 "luaK"
                Colon@2675..2676 ":"
                Ident@2676..2683
                  Ident@2676..2683 "codeABx"
              FuncArgs@2683..2710
                LParen@2683..2684 "("
                Ident@2684..2686
                  Ident@2684..2686 "fs"
                Comma@2686..2687 ","
                LiteralExpr@2687..2699
                  String@2687..2699 "\"OP_CLOSURE\""
                Comma@2699..2700 ","
                LiteralExpr@2700..2701
                  Int@2700..2701 "0"
                Comma@2701..2702 ","
                BinOp@2702..2709
                  BinOp@2702..2707
                    Ident@2702..2704
                      Ident@2702..2704 "fs"
                    Dot@2704..2705 "."
                    Ident@2705..2707
                      Ident@2705..2707 "np"
                  Minus@2707..2708 "-"
                  LiteralExpr@2708..2709
                    Int@2708..2709 "1"
                RParen@2709..2710 ")"
            RParen@2710..2711 ")"
        ForNumStmt@2711..2844
          For@2711..2714 "for"
          Ident@2714..2715 "i"
          Assign@2715..2716 "="
          LiteralExpr@2716..2717
            Int@2716..2717 "0"
          Comma@2717..2718 ","
          BinOp@2718..2731
            BinOp@2718..2729
              Ident@2718..2722
                Ident@2718..2722 "func"
              Dot@2722..2723 "."
              BinOp@2723..2729
                Ident@2723..2724
                  Ident@2723..2724 "f"
                Dot@2724..2725 "."
                Ident@2725..2729
                  Ident@2725..2729 "nups"
            Minus@2729..2730 "-"
            LiteralExpr@2730..2731
              Int@2730..2731 "1"
          BlockStmt@2731..2844
            Do@2731..2733 "do"
            StmtList@2733..2841
              DeclStmt@2733..2797
                Local@2733..2738 "local"
                DeclTarget@2738..2739
                  Ident@2738..2739 "o"
                Assign@2739..2740 "="
                BinOp@2740..2797
                  BinOp@2740..2782
                    Expr@2740..2770
                      LParen@2740..2741 "("
                      BinOp@2741..2769
                        BinOp@2741..2759
                          Index@2741..2757
                            BinOp@2741..2754
                              Ident@2741..2745
                                Ident@2741..2745 "func"
                              Dot@2745..2746 "."
                              Ident@2746..2754
                                Ident@2746..2754 "upvalues"
                            LBracket@2754..2755 "["
                            Ident@2755..2756
                              Ident@2755..2756 "i"
                            RBracket@2756..2757 "]"
                          Dot@2757..2758 "."
                          Ident@2758..2759
                            Ident@2758..2759 "k"
                        Eq@2759..2761 "=="
                        LiteralExpr@2761..2769
                          String@2761..2769 "\"VLOCAL\""
                      RParen@2769..2770 ")"
                    And@2770..2773 "and"
                    LiteralExpr@2773..2782
                      String@2773..2782 "\"OP_MOVE\""
                  Or@2782..2784 "or"
                  LiteralExpr@2784..2797
                    String@2784..2797 "\"OP_GETUPVAL\""
              FuncCall@2797..2841
                BinOp@2797..2809
                  Ident@2797..2801
                    Ident@2797..2801 "luaK"
                  Colon@2801..2802 ":"
                  Ident@2802..2809
                    Ident@2802..2809 "codeABC"
                FuncArgs@2809..2841
                  LParen@2809..2810 "("
                  Ident@2810..2812
                    Ident@2810..2812 "fs"
                  Comma@2812..2813 ","
                  Ident@2813..2814
                    Ident@2813..2814 "o"
                  Comma@2814..2815 ","
                  LiteralExpr@2815..2816
                    Int@2815..2816 "0"
                  Comma@2816..2817 ","
                  BinOp@2817..2838
                    Index@2817..2833
                      BinOp@2817..2830
                        Ident@2817..2821
                          Ident@2817..2821 "func"
                        Dot@2821..2822 "."
                        Ident@2822..2830
                          Ident@2822..2830 "upvalues"
                      LBracket@2830..2831 "["
                      Ident@2831..2832
                        Ident@2831..2832 "i"
                      RBracket@2832..2833 "]"
                    Dot@2833..2834 "."
                    Ident@2834..2838
                      Ident@2834..2838 "info"
                  Comma@2838..2839 ","
                  LiteralExpr@2839..2840
                    Int@2839..2840 "0"
                  RParen@2840..2841 ")"
            End@2841..2844 "end"
      End@2844..2847 "end"
  DeclStmt@2847..3153
    Local@2847..2852 "local"
    FuncStmt@2852..3153
      Function@2852..2860 "function"
      Ident@2860..2872
        Ident@2860..2872 "indexupvalue"
      FuncArgs@2872..2883
        LParen@2872..2873 "("
        Ident@2873..2875 "fs"
        Comma@2875..2876 ","
        Ident@2876..2880 "name"
        Comma@2880..2881 ","
        Ident@2881..2882 "v"
        RParen@2882..2883 ")"
      StmtList@2883..3150
        DeclStmt@2883..2894
          Local@2883..2888 "local"
          DeclTarget@2888..2889
            Ident@2888..2889 "f"
          Assign@2889..2890 "="
          BinOp@2890..2894
            Ident@2890..2892
              Ident@2890..2892 "fs"
            Dot@2892..2893 "."
            Ident@2893..2894
              Ident@2893..2894 "f"
        ForNumStmt@2894..3011
          For@2894..2897 "for"
          Ident@2897..2898 "i"
          Assign@2898..2899 "="
          LiteralExpr@2899..2900
            Int@2899..2900 "0"
          Comma@2900..2901 ","
          BinOp@2901..2909
            BinOp@2901..2907
              Ident@2901..2902
                Ident@2901..2902 "f"
              Dot@2902..2903 "."
              Ident@2903..2907
                Ident@2903..2907 "nups"
            Minus@2907..2908 "-"
            LiteralExpr@2908..2909
              Int@2908..2909 "1"
          BlockStmt@2909..3011
            Do@2909..2911 "do"
            StmtList@2911..3008
              IfStmt@2911..3008
                If@2911..2913 "if"
                BinOp@2913..2964
                  BinOp@2913..2934
                    BinOp@2913..2929
                      Index@2913..2927
                        BinOp@2913..2924
                          Ident@2913..2915
                            Ident@2913..2915 "fs"
                          Dot@2915..2916 "."
                          Ident@2916..2924
                            Ident@2916..2924 "upvalues"
                        LBracket@2924..2925 "["
                        Ident@2925..2926
                          Ident@2925..2926 "i"
                        RBracket@2926..2927 "]"
                      Dot@2927..2928 "."
                      Ident@2928..2929
                        Ident@2928..2929 "k"
                    Eq@2929..2931 "=="
                    BinOp@2931..2934
                      Ident@2931..2932
                        Ident@2931..2932 "v"
                      Dot@2932..2933 "."
                      Ident@2933..2934
                        Ident@2933..2934 "k"
                  And@2934..2937 "and"
                  BinOp@2937..2964
                    BinOp@2937..2956
                      Index@2937..2951
                        BinOp@2937..2948
                          Ident@2937..2939
                            Ident@2937..2939 "fs"
                          Dot@2939..2940 "."
                          Ident@2940..2948
                            Ident@2940..2948 "upvalues"
                        LBracket@2948..2949 "["
                        Ident@2949..2950
                          Ident@2949..2950 "i"
                        RBracket@2950..2951 "]"
                      Dot@2951..2952 "."
                      Ident@2952..2956
                        Ident@2952..2956 "info"
                    Eq@2956..2958 "=="
                    BinOp@2958..2964
                      Ident@2958..2959
                        Ident@2958..2959 "v"
                      Dot@2959..2960 "."
                      Ident@2960..2964
                        Ident@2960..2964 "info"
                Then@2964..2968 "then"
                StmtList@2968..3005
                  FuncCall@2968..2998
                    Ident@2968..2974
                      Ident@2968..2974 "assert"
                    FuncArgs@2974..2998
                      LParen@2974..2975 "("
                      BinOp@2975..2997
                        Index@2975..2991
                          BinOp@2975..2988
                            Ident@2975..2977
                              Ident@2975..2977 "fs"
                            Dot@2977..2978 "."
                            BinOp@2978..2988
                              Ident@2978..2979
                                Ident@2978..2979 "f"
                              Dot@2979..2980 "."
                              Ident@2980..2988
                                Ident@2980..2988 "upvalues"
                          LBracket@2988..2989 "["
                          Ident@2989..2990
                            Ident@2989..2990 "i"
                          RBracket@2990..2991 "]"
                        Eq@2991..2993 "=="
                        Ident@2993..2997
                          Ident@2993..2997 "name"
                      RParen@2997..2998 ")"
                  ReturnStmt@2998..3005
                    Return@2998..3004 "return"
                    Ident@3004..3005
                      Ident@3004..3005 "i"
                End@3005..3008 "end"
            End@3008..3011 "end"
        AssignStmt@3011..3034
          Index@3011..3029
            BinOp@3011..3021
              Ident@3011..3012
                Ident@3011..3012 "f"
              Dot@3012..3013 "."
              Ident@3013..3021
                Ident@3013..3021 "upvalues"
            LBracket@3021..3022 "["
            BinOp@3022..3028
              Ident@3022..3023
                Ident@3022..3023 "f"
              Dot@3023..3024 "."
              Ident@3024..3028
                Ident@3024..3028 "nups"
            RBracket@3028..3029 "]"
          Assign@3029..3030 "="
          Ident@3030..3034
            Ident@3030..3034 "name"
        FuncCall@3034..3070
          Ident@3034..3040
            Ident@3034..3040 "assert"
          FuncArgs@3040..3070
            LParen@3040..3041 "("
            BinOp@3041..3069
              BinOp@3041..3054
                BinOp@3041..3044
                  Ident@3041..3042
                    Ident@3041..3042 "v"
                  Dot@3042..3043 "."
                  Ident@3043..3044
                    Ident@3043..3044 "k"
                Eq@3044..3046 "=="
                LiteralExpr@3046..3054
                  String@3046..3054 "\"VLOCAL\""
              Or@3054..3056 "or"
              BinOp@3056..3069
                BinOp@3056..3059
                  Ident@3056..3057
                    Ident@3056..3057 "v"
                  Dot@3057..3058 "."
                  Ident@3058..3059
                    Ident@3058..3059 "k"
                Eq@3059..3061 "=="
                LiteralExpr@3061..3069
                  String@3061..3069 "\"VUPVAL\""
            RParen@3069..3070 ")"
        AssignStmt@3070..3109
          Index@3070..3089
            BinOp@3070..3081
              Ident@3070..3072
                Ident@3070..3072 "fs"
              Dot@3072..3073 "."
              Ident@3073..3081
                Ident@3073..3081 "upvalues"
            LBracket@3081..3082 "["
            BinOp@3082..3088
              Ident@3082..3083
                Ident@3082..3083 "f"
              Dot@3083..3084 "."
              Ident@3084..3088
                Ident@3084..3088 "nups"
            RBracket@3088..3089 "]"
          Assign@3089..3090 "="
          TableExpr@3090..3109
            LCurly@3090..3091 "{"
            TableMapElem@3091..3096
              Ident@3091..3092 "k"
              Assign@3092..3093 "="
              BinOp@3093..3096
                Ident@3093..3094
                  Ident@3093..3094 "v"
                Dot@3094..3095 "."
                Ident@3095..3096
                  Ident@3095..3096 "k"
            Semicolon@3096..3097 ";"
            TableMapElem@3097..3108
              Ident@3097..3101 "info"
              Assign@3101..3102 "="
              BinOp@3102..3108
                Ident@3102..3103
                  Ident@3102..3103 "v"
                Dot@3103..3104 "."
                Ident@3104..3108
                  Ident@3104..3108 "info"
            RCurly@3108..3109 "}"
        DeclStmt@3109..3125
          Local@3109..3114 "local"
          DeclTarget@3114..3118
            Ident@3114..3118 "nups"
          Assign@3118..3119 "="
          BinOp@3119..3125
            Ident@3119..3120
              Ident@3119..3120 "f"
            Dot@3120..3121 "."
            Ident@3121..3125
              Ident@3121..3125 "nups"
        AssignStmt@3125..3140
          BinOp@3125..3131
            Ident@3125..3126
              Ident@3125..3126 "f"
            Dot@3126..3127 "."
            Ident@3127..3131
              Ident@3127..3131 "nups"
          Assign@3131..3132 "="
          BinOp@3132..3140
            BinOp@3132..3138
              Ident@3132..3133
                Ident@3132..3133 "f"
              Dot@3133..3134 "."
              Ident@3134..3138
                Ident@3134..3138 "nups"
            Plus@3138..3139 "+"
            LiteralExpr@3139..3140
              Int@3139..3140 "1"
        ReturnStmt@3140..3150
          Return@3140..3146 "return"
          Ident@3146..3150
            Ident@3146..3150 "nups"
      End@3150..3153 "end"
  DeclStmt@3153..3270
    Local@3153..3158 "local"
    FuncStmt@3158..3270
      Function@3158..3166 "function"
      Ident@3166..3175
        Ident@3166..3175 "markupval"
      FuncArgs@3175..3185
        LParen@3175..3176 "("
        Ident@3176..3178 "fs"
        Comma@3178..3179 ","
        Ident@3179..3184 "level"
        RParen@3184..3185 ")"
      StmtList@3185..3267
        DeclStmt@3185..3198
          Local@3185..3190 "local"
          DeclTarget@3190..3192
            Ident@3190..3192 "bl"
          Assign@3192..3193 "="
          BinOp@3193..3198
            Ident@3193..3195
              Ident@3193..3195 "fs"
            Dot@3195..3196 "."
            Ident@3196..3198
              Ident@3196..3198 "bl"
        WhileStmt@3198..3243
          While@3198..3203 "while"
          BinOp@3203..3224
            Ident@3203..3205
              Ident@3203..3205 "bl"
            And@3205..3208 "and"
            BinOp@3208..3224
              BinOp@3208..3218
                Ident@3208..3210
                  Ident@3208..3210 "bl"
                Dot@3210..3211 "."
                Ident@3211..3218
                  Ident@3211..3218 "nactvar"
              RAngle@3218..3219 ">"
              Ident@3219..3224
                Ident@3219..3224 "level"
          BlockStmt@3224..3243
            Do@3224..3226 "do"
            StmtList@3226..3240
              AssignStmt@3226..3240
                Ident@3226..3228
                  Ident@3226..3228 "bl"
                Assign@3228..3229 "="
                BinOp@3229..3240
                  Ident@3229..3231
                    Ident@3229..3231 "bl"
                  Dot@3231..3232 "."
                  Ident@3232..3240
                    Ident@3232..3240 "previous"
            End@3240..3243 "end"
        IfStmt@3243..3267
          If@3243..3245 "if"
          Ident@3245..3247
            Ident@3245..3247 "bl"
          Then@3247..3251 "then"
          StmtList@3251..3264
            AssignStmt@3251..3264
              BinOp@3251..3259
                Ident@3251..3253
                  Ident@3251..3253 "bl"
                Dot@3253..3254 "."
                Ident@3254..3259
                  Ident@3254..3259 "upval"
              Assign@3259..3260 "="
              LiteralExpr@3260..3264
                True@3260..3264 "true"
          End@3264..3267 "end"
      End@3267..3270 "end"
  DeclStmt@3270..3456
    Local@3270..3275 "local"
    FuncStmt@3275..3456
      Function@3275..3283 "function"
      Ident@3283..3293
        Ident@3283..3293 "enterblock"
      FuncArgs@3293..3312
        LParen@3293..3294 "("
        Ident@3294..3296 "fs"
        Comma@3296..3297 ","
        Ident@3297..3299 "bl"
        Comma@3299..3300 ","
        Ident@3300..3311 "isbreakable"
        RParen@3311..3312 ")"
      StmtList@3312..3453
        AssignStmt@3312..3337
          BinOp@3312..3324
            Ident@3312..3314
              Ident@3312..3314 "bl"
            Dot@3314..3315 "."
            Ident@3315..3324
              Ident@3315..3324 "breaklist"
          Assign@3324..3325 "="
          BinOp@3325..3337
            Ident@3325..3329
              Ident@3325..3329 "luaK"
            Dot@3329..3330 "."
            Ident@3330..3337
              Ident@3330..3337 "NO_JUMP"
        AssignStmt@3337..3363
          BinOp@3337..3351
            Ident@3337..3339
              Ident@3337..3339 "bl"
            Dot@3339..3340 "."
            Ident@3340..3351
              Ident@3340..3351 "isbreakable"
          Assign@3351..3352 "="
          Ident@3352..3363
            Ident@3352..3363 "isbreakable"
        AssignStmt@3363..3384
          BinOp@3363..3373
            Ident@3363..3365
              Ident@3363..3365 "bl"
            Dot@3365..3366 "."
            Ident@3366..3373
              Ident@3366..3373 "nactvar"
          Assign@3373..3374 "="
          BinOp@3374..3384
            Ident@3374..3376
              Ident@3374..3376 "fs"
            Dot@3376..3377 "."
            Ident@3377..3384
              Ident@3377..3384 "nactvar"
        AssignStmt@3384..3398
          BinOp@3384..3392
            Ident@3384..3386
              Ident@3384..3386 "bl"
            Dot@3386..3387 "."
            Ident@3387..3392
              Ident@3387..3392 "upval"
          Assign@3392..3393 "="
          LiteralExpr@3393..3398
            False@3393..3398 "false"
        AssignStmt@3398..3415
          BinOp@3398..3409
            Ident@3398..3400
              Ident@3398..3400 "bl"
            Dot@3400..3401 "."
            Ident@3401..3409
              Ident@3401..3409 "previous"
          Assign@3409..3410 "="
          BinOp@3410..3415
            Ident@3410..3412
              Ident@3410..3412 "fs"
            Dot@3412..3413 "."
            Ident@3413..3415
              Ident@3413..3415 "bl"
        AssignStmt@3415..3423
          BinOp@3415..3420
            Ident@3415..3417
              Ident@3415..3417 "fs"
            Dot@3417..3418 "."
            Ident@3418..3420
              Ident@3418..3420 "bl"
          Assign@3420..3421 "="
          Ident@3421..3423
            Ident@3421..3423 "bl"
        FuncCall@3423..3453
          Ident@3423..3429
            Ident@3423..3429 "assert"
          FuncArgs@3429..3453
            LParen@3429..3430 "("
            BinOp@3430..3452
              BinOp@3430..3440
                Ident@3430..3432
                  Ident@3430..3432 "fs"
                Dot@3432..3433 "."
                Ident@3433..3440
                  Ident@3433..3440 "freereg"
              Eq@3440..3442 "=="
              BinOp@3442..3452
                Ident@3442..3444
                  Ident@3442..3444 "fs"
                Dot@3444..3445 "."
                Ident@3445..3452
                  Ident@3445..3452 "nactvar"
            RParen@3452..3453 ")"
      End@3453..3456 "end"
  DeclStmt@3456..3722
    Local@3456..3461 "local"
    FuncStmt@3461..3722
      Function@3461..3469 "function"
      Ident@3469..3479
        Ident@3469..3479 "leaveblock"
      FuncArgs@3479..3483
        LParen@3479..3480 "("
        Ident@3480..3482 "fs"
        RParen@3482..3483 ")"
      StmtList@3483..3719
        DeclStmt@3483..3496
          Local@3483..3488 "local"
          DeclTarget@3488..3490
            Ident@3488..3490 "bl"
          Assign@3490..3491 "="
          BinOp@3491..3496
            Ident@3491..3493
              Ident@3491..3493 "fs"
            Dot@3493..3494 "."
            Ident@3494..3496
              Ident@3494..3496 "bl"
        AssignStmt@3496..3513
          BinOp@3496..3501
            Ident@3496..3498
              Ident@3496..3498 "fs"
            Dot@3498..3499 "."
            Ident@3499..3501
              Ident@3499..3501 "bl"
          Assign@3501..3502 "="
          BinOp@3502..3513
            Ident@3502..3504
              Ident@3502..3504 "bl"
            Dot@3504..3505 "."
            Ident@3505..3513
              Ident@3505..3513 "previous"
        FuncCall@3513..3538
          Ident@3513..3523
            Ident@3513..3523 "removevars"
          FuncArgs@3523..3538
            LParen@3523..3524 "("
            Ident@3524..3526
              Ident@3524..3526 "fs"
            Comma@3526..3527 ","
            BinOp@3527..3537
              Ident@3527..3529
                Ident@3527..3529 "bl"
              Dot@3529..3530 "."
              Ident@3530..3537
                Ident@3530..3537 "nactvar"
            RParen@3537..3538 ")"
        IfStmt@3538..3597
          If@3538..3540 "if"
          BinOp@3540..3548
            Ident@3540..3542
              Ident@3540..3542 "bl"
            Dot@3542..3543 "."
            Ident@3543..3548
              Ident@3543..3548 "upval"
          Then@3548..3552 "then"
          StmtList@3552..3594
            FuncCall@3552..3594
              BinOp@3552..3564
                Ident@3552..3556
                  Ident@3552..3556 "luaK"
                Colon@3556..3557 ":"
                Ident@3557..3564
                  Ident@3557..3564 "codeABC"
              FuncArgs@3564..3594
                LParen@3564..3565 "("
                Ident@3565..3567
                  Ident@3565..3567 "fs"
                Comma@3567..3568 ","
                LiteralExpr@3568..3578
                  String@3568..3578 "\"OP_CLOSE\""
                Comma@3578..3579 ","
                BinOp@3579..3589
                  Ident@3579..3581
                    Ident@3579..3581 "bl"
                  Dot@3581..3582 "."
                  Ident@3582..3589
                    Ident@3582..3589 "nactvar"
                Comma@3589..3590 ","
                LiteralExpr@3590..3591
                  Int@3590..3591 "0"
                Comma@3591..3592 ","
                LiteralExpr@3592..3593
                  Int@3592..3593 "0"
                RParen@3593..3594 ")"
          End@3594..3597 "end"
        FuncCall@3597..3635
          Ident@3597..3603
            Ident@3597..3603 "assert"
          FuncArgs@3603..3635
            LParen@3603..3604 "("
            BinOp@3604..3634
              PrefixOp@3604..3621
                Not@3604..3607 "not"
                BinOp@3607..3621
                  Ident@3607..3609
                    Ident@3607..3609 "bl"
                  Dot@3609..3610 "."
                  Ident@3610..3621
                    Ident@3610..3621 "isbreakable"
              Or@3621..3623 "or"
              PrefixOp@3623..3634
                Not@3623..3626 "not"
                BinOp@3626..3634
                  Ident@3626..3628
                    Ident@3626..3628 "bl"
                  Dot@3628..3629 "."
                  Ident@3629..3634
                    Ident@3629..3634 "upval"
            RParen@3634..3635 ")"
        FuncCall@3635..3665
          Ident@3635..3641
            Ident@3635..3641 "assert"
          FuncArgs@3641..3665
            LParen@3641..3642 "("
            BinOp@3642..3664
              BinOp@3642..3652
                Ident@3642..3644
                  Ident@3642..3644 "bl"
                Dot@3644..3645 "."
                Ident@3645..3652
                  Ident@3645..3652 "nactvar"
              Eq@3652..3654 "=="
              BinOp@3654..3664
                Ident@3654..3656
                  Ident@3654..3656 "fs"
                Dot@3656..3657 "."
                Ident@3657..3664
                  Ident@3657..3664 "nactvar"
            RParen@3664..3665 ")"
        AssignStmt@3665..3686
          BinOp@3665..3675
            Ident@3665..3667
              Ident@3665..3667 "fs"
            Dot@3667..3668 "."
            Ident@3668..3675
              Ident@3668..3675 "freereg"
          Assign@3675..3676 "="
          BinOp@3676..3686
            Ident@3676..3678
              Ident@3676..3678 "fs"
            Dot@3678..3679 "."
            Ident@3679..3686
              Ident@3679..3686 "nactvar"
        FuncCall@3686..3719
          BinOp@3686..3702
            Ident@3686..3690
              Ident@3686..3690 "luaK"
            Colon@3690..3691 ":"
            Ident@3691..3702
              Ident@3691..3702 "patchtohere"
          FuncArgs@3702..3719
            LParen@3702..3703 "("
            Ident@3703..3705
              Ident@3703..3705 "fs"
            Comma@3705..3706 ","
            BinOp@3706..3718
              Ident@3706..3708
                Ident@3706..3708 "bl"
              Dot@3708..3709 "."
              Ident@3709..3718
                Ident@3709..3718 "breaklist"
            RParen@3718..3719 ")"
      End@3719..3722 "end"
  DeclStmt@3722..3979
    Local@3722..3727 "local"
    FuncStmt@3727..3979
      Function@3727..3735 "function"
      Ident@3735..3742
        Ident@3735..3742 "explist"
      FuncArgs@3742..3763
        LParen@3742..3743 "("
        Ident@3743..3745 "fs"
        Comma@3745..3746 ","
        Ident@3746..3753 "astlist"
        Comma@3753..3754 ","
        Ident@3754..3755 "v"
        Comma@3755..3756 ","
        Ident@3756..3762 "offset"
        RParen@3762..3763 ")"
      StmtList@3763..3976
        AssignStmt@3763..3779
          Ident@3763..3769
            Ident@3763..3769 "offset"
          Assign@3769..3770 "="
          BinOp@3770..3779
            Ident@3770..3776
              Ident@3770..3776 "offset"
            Or@3776..3778 "or"
            LiteralExpr@3778..3779
              Int@3778..3779 "1"
        IfStmt@3779..3847
          If@3779..3781 "if"
          BinOp@3781..3796
            PrefixOp@3781..3789
              Hash@3781..3782 "#"
              Ident@3782..3789
                Ident@3782..3789 "astlist"
            LAngle@3789..3790 "<"
            Ident@3790..3796
              Ident@3790..3796 "offset"
          Then@3796..3800 "then"
          StmtList@3800..3844
            FuncCall@3800..3844
              Ident@3800..3805
                Ident@3800..3805 "error"
              FuncArgs@3805..3844
                LParen@3805..3806 "("
                LiteralExpr@3806..3843
                  String@3806..3843 "\"I don't handle empty ..."
                RParen@3843..3844 ")"
          End@3844..3847 "end"
        FuncCall@3847..3878
          BinOp@3847..3856
            Ident@3847..3851
              Ident@3847..3851 "expr"
            Dot@3851..3852 "."
            Ident@3852..3856
              Ident@3852..3856 "expr"
          FuncArgs@3856..3878
            LParen@3856..3857 "("
            Ident@3857..3859
              Ident@3857..3859 "fs"
            Comma@3859..3860 ","
            Index@3860..3875
              Ident@3860..3867
                Ident@3860..3867 "astlist"
              LBracket@3867..3868 "["
              Ident@3868..3874
                Ident@3868..3874 "offset"
              RBracket@3874..3875 "]"
            Comma@3875..3876 ","
            Ident@3876..3877
              Ident@3876..3877 "v"
            RParen@3877..3878 ")"
        ForNumStmt@3878..3953
          For@3878..3881 "for"
          Ident@3881..3882 "i"
          Assign@3882..3883 "="
          BinOp@3883..3891
            Ident@3883..3889
              Ident@3883..3889 "offset"
            Plus@3889..3890 "+"
            LiteralExpr@3890..3891
              Int@3890..3891 "1"
          Comma@3891..3892 ","
          PrefixOp@3892..3900
            Hash@3892..3893 "#"
            Ident@3893..3900
              Ident@3893..3900 "astlist"
          BlockStmt@3900..3953
            Do@3900..3902 "do"
            StmtList@3902..3950
              FuncCall@3902..3924
                BinOp@3902..3918
                  Ident@3902..3906
                    Ident@3902..3906 "luaK"
                  Colon@3906..3907 ":"
                  Ident@3907..3918
                    Ident@3907..3918 "exp2nextreg"
                FuncArgs@3918..3924
                  LParen@3918..3919 "("
                  Ident@3919..3921
                    Ident@3919..3921 "fs"
                  Comma@3921..3922 ","
                  Ident@3922..3923
                    Ident@3922..3923 "v"
                  RParen@3923..3924 ")"
              FuncCall@3924..3950
                BinOp@3924..3933
                  Ident@3924..3928
                    Ident@3924..3928 "expr"
                  Dot@3928..3929 "."
                  Ident@3929..3933
                    Ident@3929..3933 "expr"
                FuncArgs@3933..3950
                  LParen@3933..3934 "("
                  Ident@3934..3936
                    Ident@3934..3936 "fs"
                  Comma@3936..3937 ","
                  Index@3937..3947
                    Ident@3937..3944
                      Ident@3937..3944 "astlist"
                    LBracket@3944..3945 "["
                    Ident@3945..3946
                      Ident@3945..3946 "i"
                    RBracket@3946..3947 "]"
                  Comma@3947..3948 ","
                  Ident@3948..3949
                    Ident@3948..3949 "v"
                  RParen@3949..3950 ")"
            End@3950..3953 "end"
        ReturnStmt@3953..3976
          Return@3953..3959 "return"
          BinOp@3959..3976
            BinOp@3959..3974
              PrefixOp@3959..3967
                Hash@3959..3960 "#"
                Ident@3960..3967
                  Ident@3960..3967 "astlist"
              Minus@3967..3968 "-"
              Ident@3968..3974
                Ident@3968..3974 "offset"
            Plus@3974..3975 "+"
            LiteralExpr@3975..3976
              Int@3975..3976 "1"
      End@3976..3979 "end"
  DeclStmt@3979..4480
    Local@3979..3984 "local"
    FuncStmt@3984..4480
      Function@3984..3992 "function"
      Ident@3992..4000
        Ident@3992..4000 "funcargs"
      FuncArgs@4000..4019
        LParen@4000..4001 "("
        Ident@4001..4003 "fs"
        Comma@4003..4004 ","
        Ident@4004..4007 "ast"
        Comma@4007..4008 ","
        Ident@4008..4009 "v"
        Comma@4009..4010 ","
        Ident@4010..4018 "idx_from"
        RParen@4018..4019 ")"
      StmtList@4019..4477
        DeclStmt@4019..4031
          Local@4019..4024 "local"
          DeclTarget@4024..4028
            Ident@4024..4028 "args"
          Assign@4028..4029 "="
          TableExpr@4029..4031
            LCurly@4029..4030 "{"
            RCurly@4030..4031 "}"
        DeclStmt@4031..4043
          Local@4031..4036 "local"
          DeclTarget@4036..4043
            Ident@4036..4043 "nparams"
        IfStmt@4043..4136
          If@4043..4045 "if"
          BinOp@4045..4058
            PrefixOp@4045..4049
              Hash@4045..4046 "#"
              Ident@4046..4049
                Ident@4046..4049 "ast"
            LAngle@4049..4050 "<"
            Ident@4050..4058
              Ident@4050..4058 "idx_from"
          Then@4058..4062 "then"
          StmtList@4062..4076
            AssignStmt@4062..4076
              BinOp@4062..4068
                Ident@4062..4066
                  Ident@4062..4066 "args"
                Dot@4066..4067 "."
                Ident@4067..4068
                  Ident@4067..4068 "k"
              Assign@4068..4069 "="
              LiteralExpr@4069..4076
                String@4069..4076 "\"VVOID\""
          ElseChain@4076..4136
            Else@4076..4080 "else"
            StmtList@4080..4133
              FuncCall@4080..4109
                Ident@4080..4087
                  Ident@4080..4087 "explist"
                FuncArgs@4087..4109
                  LParen@4087..4088 "("
                  Ident@4088..4090
                    Ident@4088..4090 "fs"
                  Comma@4090..4091 ","
                  Ident@4091..4094
                    Ident@4091..4094 "ast"
                  Comma@4094..4095 ","
                  Ident@4095..4099
                    Ident@4095..4099 "args"
                  Comma@4099..4100 ","
                  Ident@4100..4108
                    Ident@4100..4108 "idx_from"
                  RParen@4108..4109 ")"
              FuncCall@4109..4133
                BinOp@4109..4124
                  Ident@4109..4113
                    Ident@4109..4113 "luaK"
                  Colon@4113..4114 ":"
                  Ident@4114..4124
                    Ident@4114..4124 "setmultret"
                FuncArgs@4124..4133
                  LParen@4124..4125 "("
                  Ident@4125..4127
                    Ident@4125..4127 "fs"
                  Comma@4127..4128 ","
                  Ident@4128..4132
                    Ident@4128..4132 "args"
                  RParen@4132..4133 ")"
            End@4133..4136 "end"
        FuncCall@4136..4160
          Ident@4136..4142
            Ident@4136..4142 "assert"
          FuncArgs@4142..4160
            LParen@4142..4143 "("
            BinOp@4143..4159
              BinOp@4143..4146
                Ident@4143..4144
                  Ident@4143..4144 "v"
                Dot@4144..4145 "."
                Ident@4145..4146
                  Ident@4145..4146 "k"
              Eq@4146..4148 "=="
              LiteralExpr@4148..4159
                String@4148..4159 "\"VNONRELOC\""
            RParen@4159..4160 ")"
        DeclStmt@4160..4176
          Local@4160..4165 "local"
          DeclTarget@4165..4169
            Ident@4165..4169 "base"
          Assign@4169..4170 "="
          BinOp@4170..4176
            Ident@4170..4171
              Ident@4170..4171 "v"
            Dot@4171..4172 "."
            Ident@4172..4176
              Ident@4172..4176 "info"
        IfStmt@4176..4307
          If@4176..4178 "if"
          FuncCall@4178..4196
            Ident@4178..4188
              Ident@4178..4188 "hasmultret"
            FuncArgs@4188..4196
              LParen@4188..4189 "("
              BinOp@4189..4195
                Ident@4189..4193
                  Ident@4189..4193 "args"
                Dot@4193..4194 "."
                Ident@4194..4195
                  Ident@4194..4195 "k"
              RParen@4195..4196 ")"
          Then@4196..4200 "then"
          StmtList@4200..4224
            AssignStmt@4200..4224
              Ident@4200..4207
                Ident@4200..4207 "nparams"
              Assign@4207..4208 "="
              BinOp@4208..4224
                Ident@4208..4212
                  Ident@4208..4212 "luaK"
                Dot@4212..4213 "."
                Ident@4213..4224
                  Ident@4213..4224 "LUA_MULTRET"
          ElseChain@4224..4307
            Else@4224..4228 "else"
            StmtList@4228..4304
              IfStmt@4228..4277
                If@4228..4230 "if"
                BinOp@4230..4245
                  BinOp@4230..4236
                    Ident@4230..4234
                      Ident@4230..4234 "args"
                    Dot@4234..4235 "."
                    Ident@4235..4236
                      Ident@4235..4236 "k"
                  NotEq@4236..4238 "~="
                  LiteralExpr@4238..4245
                    String@4238..4245 "\"VVOID\""
                Then@4245..4249 "then"
                StmtList@4249..4274
                  FuncCall@4249..4274
                    BinOp@4249..4265
                      Ident@4249..4253
                        Ident@4249..4253 "luaK"
                      Colon@4253..4254 ":"
                      Ident@4254..4265
                        Ident@4254..4265 "exp2nextreg"
                    FuncArgs@4265..4274
                      LParen@4265..4266 "("
                      Ident@4266..4268
                        Ident@4266..4268 "fs"
                      Comma@4268..4269 ","
                      Ident@4269..4273
                        Ident@4269..4273 "args"
                      RParen@4273..4274 ")"
                End@4274..4277 "end"
              AssignStmt@4277..4304
                Ident@4277..4284
                  Ident@4277..4284 "nparams"
                Assign@4284..4285 "="
                BinOp@4285..4304
                  BinOp@4285..4295
                    Ident@4285..4287
                      Ident@4285..4287 "fs"
                    Dot@4287..4288 "."
                    Ident@4288..4295
                      Ident@4288..4295 "freereg"
                  Minus@4295..4296 "-"
                  Expr@4296..4304
                    LParen@4296..4297 "("
                    BinOp@4297..4303
                      Ident@4297..4301
                        Ident@4297..4301 "base"
                      Plus@4301..4302 "+"
                      LiteralExpr@4302..4303
                        Int@4302..4303 "1"
                    RParen@4303..4304 ")"
            End@4304..4307 "end"
        FuncCall@4307..4370
          Ident@4307..4315
            Ident@4307..4315 "init_exp"
          FuncArgs@4315..4370
            LParen@4315..4316 "("
            Ident@4316..4317
              Ident@4316..4317 "v"
            Comma@4317..4318 ","
            LiteralExpr@4318..4325
              String@4318..4325 "\"VCALL\""
            Comma@4325..4326 ","
            FuncCall@4326..4369
              BinOp@4326..4338
                Ident@4326..4330
                  Ident@4326..4330 "luaK"
                Colon@4330..4331 ":"
                Ident@4331..4338
                  Ident@4331..4338 "codeABC"
              FuncArgs@4338..4369
                LParen@4338..4339 "("
                Ident@4339..4341
                  Ident@4339..4341 "fs"
                Comma@4341..4342 ","
                LiteralExpr@4342..4351
                  String@4342..4351 "\"OP_CALL\""
                Comma@4351..4352 ","
                Ident@4352..4356
                  Ident@4352..4356 "base"
                Comma@4356..4357 ","
                BinOp@4357..4366
                  Ident@4357..4364
                    Ident@4357..4364 "nparams"
                  Plus@4364..4365 "+"
                  LiteralExpr@4365..4366
                    Int@4365..4366 "1"
                Comma@4366..4367 ","
                LiteralExpr@4367..4368
                  Int@4367..4368 "2"
                RParen@4368..4369 ")"
            RParen@4369..4370 ")"
        IfStmt@4370..4460
          If@4370..4372 "if"
          BinOp@4372..4384
            Ident@4372..4375
              Ident@4372..4375 "ast"
            Dot@4375..4376 "."
            Ident@4376..4384
              Ident@4376..4384 "lineinfo"
          Then@4384..4388 "then"
          StmtList@4388..4428
            FuncCall@4388..4428
              BinOp@4388..4400
                Ident@4388..4392
                  Ident@4388..4392 "luaK"
                Colon@4392..4393 ":"
                Ident@4393..4400
                  Ident@4393..4400 "fixline"
              FuncArgs@4400..4428
                LParen@4400..4401 "("
                Ident@4401..4403
                  Ident@4401..4403 "fs"
                Comma@4403..4404 ","
                BinOp@4404..4427
                  Ident@4404..4407
                    Ident@4404..4407 "ast"
                  Dot@4407..4408 "."
                  BinOp@4408..4427
                    Ident@4408..4416
                      Ident@4408..4416 "lineinfo"
                    Dot@4416..4417 "."
                    BinOp@4417..4427
                      Ident@4417..4422
                        Ident@4417..4422 "first"
                      Dot@4422..4423 "."
                      Ident@4423..4427
                        Ident@4423..4427 "line"
                RParen@4427..4428 ")"
          ElseChain@4428..4460
            Else@4428..4432 "else"
            StmtList@4432..4457
              FuncCall@4432..4457
                BinOp@4432..4444
                  Ident@4432..4436
                    Ident@4432..4436 "luaK"
                  Colon@4436..4437 ":"
                  Ident@4437..4444
                    Ident@4437..4444 "fixline"
                FuncArgs@4444..4457
                  LParen@4444..4445 "("
                  Ident@4445..4447
                    Ident@4445..4447 "fs"
                  Comma@4447..4448 ","
                  BinOp@4448..4456
                    Ident@4448..4451
                      Ident@4448..4451 "ast"
                    Dot@4451..4452 "."
                    Ident@4452..4456
                      Ident@4452..4456 "line"
                  RParen@4456..4457 ")"
            End@4457..4460 "end"
        AssignStmt@4460..4477
          BinOp@4460..4470
            Ident@4460..4462
              Ident@4460..4462 "fs"
            Dot@4462..4463 "."
            Ident@4463..4470
              Ident@4463..4470 "freereg"
          Assign@4470..4471 "="
          BinOp@4471..4477
            Ident@4471..4475
              Ident@4471..4475 "base"
            Plus@4475..4476 "+"
            LiteralExpr@4476..4477
              Int@4476..4477 "1"
      End@4477..4480 "end"
  DeclStmt@4480..4537
    Local@4480..4485 "local"
    FuncStmt@4485..4537
      Function@4485..4493 "function"
      Ident@4493..4497
        Ident@4493..4497 "log2"
      FuncArgs@4497..4500
        LParen@4497..4498 "("
        Ident@4498..4499 "x"
        RParen@4499..4500 ")"
      StmtList@4500..4534
        DeclStmt@4500..4524
          Local@4500..4505 "local"
          DeclTarget@4505..4507
            Ident@4505..4507 "mn"
          Comma@4507..4508 ","
          DeclTarget@4508..4510
            Ident@4508..4510 "ex"
          Assign@4510..4511 "="
          FuncCall@4511..4524
            BinOp@4511..4521
              Ident@4511..4515
                Ident@4511..4515 "math"
              Dot@4515..4516 "."
              Ident@4516..4521
                Ident@4516..4521 "frexp"
            FuncArgs@4521..4524
              LParen@4521..4522 "("
              Ident@4522..4523
                Ident@4522..4523 "x"
              RParen@4523..4524 ")"
        ReturnStmt@4524..4534
          Return@4524..4530 "return"
          BinOp@4530..4534
            Ident@4530..4532
              Ident@4530..4532 "ex"
            Minus@4532..4533 "-"
            LiteralExpr@4533..4534
              Int@4533..4534 "1"
      End@4534..4537 "end"
  DeclStmt@4537..4651
    Local@4537..4542 "local"
    FuncStmt@4542..4651
      Function@4542..4550 "function"
      Ident@4550..4556
        Ident@4550..4556 "int2fb"
      FuncArgs@4556..4559
        LParen@4556..4557 "("
        Ident@4557..4558 "x"
        RParen@4558..4559 ")"
      StmtList@4559..4648
        DeclStmt@4559..4567
          Local@4559..4564 "local"
          DeclTarget@4564..4565
            Ident@4564..4565 "e"
          Assign@4565..4566 "="
          LiteralExpr@4566..4567
            Int@4566..4567 "0"
        WhileStmt@4567..4608
          While@4567..4572 "while"
          BinOp@4572..4577
            Ident@4572..4573
              Ident@4572..4573 "x"
            GEq@4573..4575 ">="
            LiteralExpr@4575..4577
              Int@4575..4577 "16"
          BlockStmt@4577..4608
            Do@4577..4579 "do"
            StmtList@4579..4605
              AssignStmt@4579..4600
                Ident@4579..4580
                  Ident@4579..4580 "x"
                Assign@4580..4581 "="
                FuncCall@4581..4600
                  BinOp@4581..4591
                    Ident@4581..4585
                      Ident@4581..4585 "math"
                    Dot@4585..4586 "."
                    Ident@4586..4591
                      Ident@4586..4591 "floor"
                  FuncArgs@4591..4600
                    LParen@4591..4592 "("
                    BinOp@4592..4599
                      Expr@4592..4597
                        LParen@4592..4593 "("
                        BinOp@4593..4596
                          Ident@4593..4594
                            Ident@4593..4594 "x"
                          Plus@4594..4595 "+"
                          LiteralExpr@4595..4596
                            Int@4595..4596 "1"
                        RParen@4596..4597 ")"
                      Slash@4597..4598 "/"
                      LiteralExpr@4598..4599
                        Int@4598..4599 "2"
                    RParen@4599..4600 ")"
              AssignStmt@4600..4605
                Ident@4600..4601
                  Ident@4600..4601 "e"
                Assign@4601..4602 "="
                BinOp@4602..4605
                  Ident@4602..4603
                    Ident@4602..4603 "e"
                  Plus@4603..4604 "+"
                  LiteralExpr@4604..4605
                    Int@4604..4605 "1"
            End@4605..4608 "end"
        IfStmt@4608..4648
          If@4608..4610 "if"
          BinOp@4610..4613
            Ident@4610..4611
              Ident@4610..4611 "x"
            LAngle@4611..4612 "<"
            LiteralExpr@4612..4613
              Int@4612..4613 "8"
          Then@4613..4617 "then"
          StmtList@4617..4624
            ReturnStmt@4617..4624
              Return@4617..4623 "return"
              Ident@4623..4624
                Ident@4623..4624 "x"
          ElseChain@4624..4648
            Else@4624..4628 "else"
            StmtList@4628..4645
              ReturnStmt@4628..4645
                Return@4628..4634 "return"
                BinOp@4634..4645
                  BinOp@4634..4643
                    BinOp@4634..4641
                      Expr@4634..4639
                        LParen@4634..4635 "("
                        BinOp@4635..4638
                          Ident@4635..4636
                            Ident@4635..4636 "e"
                          Plus@4636..4637 "+"
                          LiteralExpr@4637..4638
                            Int@4637..4638 "1"
                        RParen@4638..4639 ")"
                      Star@4639..4640 "*"
                      LiteralExpr@4640..4641
                        Int@4640..4641 "8"
                    Plus@4641..4642 "+"
                    Ident@4642..4643
                      Ident@4642..4643 "x"
                  Minus@4643..4644 "-"
                  LiteralExpr@4644..4645
                    Int@4644..4645 "8"
            End@4645..4648 "end"
      End@4648..4651 "end"
  DeclStmt@4651..4985
    Local@4651..4656 "local"
    FuncStmt@4656..4985
      Function@4656..4664 "function"
      Ident@4664..4676
        Ident@4664..4676 "singlevaraux"
      FuncArgs@4676..4691
        LParen@4676..4677 "("
        Ident@4677..4679 "fs"
        Comma@4679..4680 ","
        Ident@4680..4681 "n"
        Comma@4681..4682 ","
        Ident@4682..4685 "var"
        Comma@4685..4686 ","
        Ident@4686..4690 "base"
        RParen@4690..4691 ")"
      StmtList@4691..4982
        IfStmt@4691..4982
          If@4691..4693 "if"
          BinOp@4693..4700
            Ident@4693..4695
              Ident@4693..4695 "fs"
            Eq@4695..4697 "=="
            LiteralExpr@4697..4700
              Nil@4697..4700 "nil"
          Then@4700..4704 "then"
          StmtList@4704..4754
            FuncCall@4704..4739
              Ident@4704..4712
                Ident@4704..4712 "init_exp"
              FuncArgs@4712..4739
                LParen@4712..4713 "("
                Ident@4713..4716
                  Ident@4713..4716 "var"
                Comma@4716..4717 ","
                LiteralExpr@4717..4726
                  String@4717..4726 "\"VGLOBAL\""
                Comma@4726..4727 ","
                BinOp@4727..4738
                  Ident@4727..4731
                    Ident@4727..4731 "luaP"
                  Dot@4731..4732 "."
                  Ident@4732..4738
                    Ident@4732..4738 "NO_REG"
                RParen@4738..4739 ")"
            ReturnStmt@4739..4754
              Return@4739..4745 "return"
              LiteralExpr@4745..4754
                String@4745..4754 "\"VGLOBAL\""
          ElseChain@4754..4982
            Else@4754..4758 "else"
            StmtList@4758..4979
              DeclStmt@4758..4780
                Local@4758..4763 "local"
                DeclTarget@4763..4764
                  Ident@4763..4764 "v"
                Assign@4764..4765 "="
                FuncCall@4765..4780
                  Ident@4765..4774
                    Ident@4765..4774 "searchvar"
                  FuncArgs@4774..4780
                    LParen@4774..4775 "("
                    Ident@4775..4777
                      Ident@4775..4777 "fs"
                    Comma@4777..4778 ","
                    Ident@4778..4779
                      Ident@4778..4779 "n"
                    RParen@4779..4780 ")"
              IfStmt@4780..4979
                If@4780..4782 "if"
                BinOp@4782..4786
                  Ident@4782..4783
                    Ident@4782..4783 "v"
                  GEq@4783..4785 ">="
                  LiteralExpr@4785..4786
                    Int@4785..4786 "0"
                Then@4786..4790 "then"
                StmtList@4790..4845
                  FuncCall@4790..4814
                    Ident@4790..4798
                      Ident@4790..4798 "init_exp"
                    FuncArgs@4798..4814
                      LParen@4798..4799 "("
                      Ident@4799..4802
                        Ident@4799..4802 "var"
                      Comma@4802..4803 ","
                      LiteralExpr@4803..4811
                        String@4803..4811 "\"VLOCAL\""
                      Comma@4811..4812 ","
                      Ident@4812..4813
                        Ident@4812..4813 "v"
                      RParen@4813..4814 ")"
                  IfStmt@4814..4845
                    If@4814..4816 "if"
                    PrefixOp@4816..4823
                      Not@4816..4819 "not"
                      Ident@4819..4823
                        Ident@4819..4823 "base"
                    Then@4823..4827 "then"
                    StmtList@4827..4842
                      FuncCall@4827..4842
                        Ident@4827..4836
                          Ident@4827..4836 "markupval"
                        FuncArgs@4836..4842
                          LParen@4836..4837 "("
                          Ident@4837..4839
                            Ident@4837..4839 "fs"
                          Comma@4839..4840 ","
                          Ident@4840..4841
                            Ident@4840..4841 "v"
                          RParen@4841..4842 ")"
                    End@4842..4845 "end"
                ElseChain@4845..4979
                  Else@4845..4849 "else"
                  StmtList@4849..4976
                    IfStmt@4849..4917
                      If@4849..4851 "if"
                      BinOp@4851..4895
                        FuncCall@4851..4884
                          Ident@4851..4863
                            Ident@4851..4863 "singlevaraux"
                          FuncArgs@4863..4884
                            LParen@4863..4864 "("
                            BinOp@4864..4871
                              Ident@4864..4866
                                Ident@4864..4866 "fs"
                              Dot@4866..4867 "."
                              Ident@4867..4871
                                Ident@4867..4871 "prev"
                            Comma@4871..4872 ","
                            Ident@4872..4873
                              Ident@4872..4873 "n"
                            Comma@4873..4874 ","
                            Ident@4874..4877
                              Ident@4874..4877 "var"
                            Comma@4877..4878 ","
                            LiteralExpr@4878..4883
                              False@4878..4883 "false"
                            RParen@4883..4884 ")"
                        Eq@4884..4886 "=="
                        LiteralExpr@4886..4895
                          String@4886..4895 "\"VGLOBAL\""
                      Then@4895..4899 "then"
                      StmtList@4899..4914
                        ReturnStmt@4899..4914
                          Return@4899..4905 "return"
                          LiteralExpr@4905..4914
                            String@4905..4914 "\"VGLOBAL\""
                      End@4914..4917 "end"
                    AssignStmt@4917..4948
                      BinOp@4917..4925
                        Ident@4917..4920
                          Ident@4917..4920 "var"
                        Dot@4920..4921 "."
                        Ident@4921..4925
                          Ident@4921..4925 "info"
                      Assign@4925..4926 "="
                      FuncCall@4926..4948
                        Ident@4926..4938
                          Ident@4926..4938 "indexupvalue"
                        FuncArgs@4938..4948
                          LParen@4938..4939 "("
                          Ident@4939..4941
                            Ident@4939..4941 "fs"
                          Comma@4941..4942 ","
                          Ident@4942..4943
                            Ident@4942..4943 "n"
                          Comma@4943..4944 ","
                          Ident@4944..4947
                            Ident@4944..4947 "var"
                          RParen@4947..4948 ")"
                    AssignStmt@4948..4962
                      BinOp@4948..4953
                        Ident@4948..4951
                          Ident@4948..4951 "var"
                        Dot@4951..4952 "."
                        Ident@4952..4953
                          Ident@4952..4953 "k"
                      Assign@4953..4954 "="
                      LiteralExpr@4954..4962
                        String@4954..4962 "\"VUPVAL\""
                    ReturnStmt@4962..4976
                      Return@4962..4968 "return"
                      LiteralExpr@4968..4976
                        String@4968..4976 "\"VUPVAL\""
                  End@4976..4979 "end"
            End@4979..4982 "end"
      End@4982..4985 "end"
  DeclStmt@4985..5112
    Local@4985..4990 "local"
    FuncStmt@4990..5112
      Function@4990..4998 "function"
      Ident@4998..5007
        Ident@4998..5007 "singlevar"
      FuncArgs@5007..5023
        LParen@5007..5008 "("
        Ident@5008..5010 "fs"
        Comma@5010..5011 ","
        Ident@5011..5018 "varname"
        Comma@5018..5019 ","
        Ident@5019..5022 "var"
        RParen@5022..5023 ")"
      StmtList@5023..5109
        IfStmt@5023..5109
          If@5023..5025 "if"
          BinOp@5025..5069
            FuncCall@5025..5058
              Ident@5025..5037
                Ident@5025..5037 "singlevaraux"
              FuncArgs@5037..5058
                LParen@5037..5038 "("
                Ident@5038..5040
                  Ident@5038..5040 "fs"
                Comma@5040..5041 ","
                Ident@5041..5048
                  Ident@5041..5048 "varname"
                Comma@5048..5049 ","
                Ident@5049..5052
                  Ident@5049..5052 "var"
                Comma@5052..5053 ","
                LiteralExpr@5053..5057
                  True@5053..5057 "true"
                RParen@5057..5058 ")"
            Eq@5058..5060 "=="
            LiteralExpr@5060..5069
              String@5060..5069 "\"VGLOBAL\""
          Then@5069..5073 "then"
          StmtList@5073..5106
            AssignStmt@5073..5106
              BinOp@5073..5081
                Ident@5073..5076
                  Ident@5073..5076 "var"
                Dot@5076..5077 "."
                Ident@5077..5081
                  Ident@5077..5081 "info"
              Assign@5081..5082 "="
              FuncCall@5082..5106
                BinOp@5082..5094
                  Ident@5082..5086
                    Ident@5082..5086 "luaK"
                  Colon@5086..5087 ":"
                  Ident@5087..5094
                    Ident@5087..5094 "stringK"
                FuncArgs@5094..5106
                  LParen@5094..5095 "("
                  Ident@5095..5097
                    Ident@5095..5097 "fs"
                  Comma@5097..5098 ","
                  Ident@5098..5105
                    Ident@5098..5105 "varname"
                  RParen@5105..5106 ")"
          End@5106..5109 "end"
      End@5109..5112 "end"
  DeclStmt@5112..5287
    Local@5112..5117 "local"
    FuncStmt@5117..5287
      Function@5117..5125 "function"
      Ident@5125..5137
        Ident@5125..5137 "new_localvar"
      FuncArgs@5137..5148
        LParen@5137..5138 "("
        Ident@5138..5140 "fs"
        Comma@5140..5141 ","
        Ident@5141..5145 "name"
        Comma@5145..5146 ","
        Ident@5146..5147 "n"
        RParen@5147..5148 ")"
      StmtList@5148..5284
        FuncCall@5148..5176
          Ident@5148..5154
            Ident@5148..5154 "assert"
          FuncArgs@5154..5176
            LParen@5154..5155 "("
            BinOp@5155..5175
              FuncCall@5155..5165
                Ident@5155..5159
                  Ident@5155..5159 "type"
                FuncArgs@5159..5165
                  LParen@5159..5160 "("
                  Ident@5160..5164
                    Ident@5160..5164 "name"
                  RParen@5164..5165 ")"
              Eq@5165..5167 "=="
              LiteralExpr@5167..5175
                String@5167..5175 "\"string\""
            RParen@5175..5176 ")"
        IfStmt@5176..5235
          If@5176..5178 "if"
          BinOp@5178..5200
            BinOp@5178..5190
              BinOp@5178..5188
                Ident@5178..5180
                  Ident@5178..5180 "fs"
                Dot@5180..5181 "."
                Ident@5181..5188
                  Ident@5181..5188 "nactvar"
              Plus@5188..5189 "+"
              Ident@5189..5190
                Ident@5189..5190 "n"
            RAngle@5190..5191 ">"
            BinOp@5191..5200
              Ident@5191..5192
                Ident@5191..5192 "M"
              Dot@5192..5193 "."
              Ident@5193..5200
                Ident@5193..5200 "MAXVARS"
          Then@5200..5204 "then"
          StmtList@5204..5232
            FuncCall@5204..5232
              Ident@5204..5209
                Ident@5204..5209 "error"
              FuncArgs@5209..5232
                LParen@5209..5210 "("
                LiteralExpr@5210..5231
                  String@5210..5231 "\"too many local vars\""
                RParen@5231..5232 ")"
          End@5232..5235 "end"
        AssignStmt@5235..5284
          Index@5235..5258
            BinOp@5235..5244
              Ident@5235..5237
                Ident@5235..5237 "fs"
              Dot@5237..5238 "."
              Ident@5238..5244
                Ident@5238..5244 "actvar"
            LBracket@5244..5245 "["
            BinOp@5245..5257
              BinOp@5245..5255
                Ident@5245..5247
                  Ident@5245..5247 "fs"
                Dot@5247..5248 "."
                Ident@5248..5255
                  Ident@5248..5255 "nactvar"
              Plus@5255..5256 "+"
              Ident@5256..5257
                Ident@5256..5257 "n"
            RBracket@5257..5258 "]"
          Assign@5258..5259 "="
          FuncCall@5259..5284
            Ident@5259..5275
              Ident@5259..5275 "registerlocalvar"
            FuncArgs@5275..5284
              LParen@5275..5276 "("
              Ident@5276..5278
                Ident@5276..5278 "fs"
              Comma@5278..5279 ","
              Ident@5279..5283
                Ident@5279..5283 "name"
              RParen@5283..5284 ")"
      End@5284..5287 "end"
  DeclStmt@5287..5705
    Local@5287..5292 "local"
    FuncStmt@5292..5705
      Function@5292..5300 "function"
      Ident@5300..5307
        Ident@5300..5307 "parlist"
      FuncArgs@5307..5322
        LParen@5307..5308 "("
        Ident@5308..5310 "fs"
        Comma@5310..5311 ","
        Ident@5311..5321 "ast_params"
        RParen@5321..5322 ")"
      StmtList@5322..5702
        DeclStmt@5322..5385
          Local@5322..5327 "local"
          DeclTarget@5327..5331
            Ident@5327..5331 "dots"
          Assign@5331..5332 "="
          Expr@5332..5385
            LParen@5332..5333 "("
            BinOp@5333..5384
              BinOp@5333..5346
                PrefixOp@5333..5344
                  Hash@5333..5334 "#"
                  Ident@5334..5344
                    Ident@5334..5344 "ast_params"
                RAngle@5344..5345 ">"
                LiteralExpr@5345..5346
                  Int@5345..5346 "0"
              And@5346..5349 "and"
              BinOp@5349..5384
                BinOp@5349..5376
                  Index@5349..5372
                    Ident@5349..5359
                      Ident@5349..5359 "ast_params"
                    LBracket@5359..5360 "["
                    PrefixOp@5360..5371
                      Hash@5360..5361 "#"
                      Ident@5361..5371
                        Ident@5361..5371 "ast_params"
                    RBracket@5371..5372 "]"
                  Dot@5372..5373 "."
                  Ident@5373..5376
                    Ident@5373..5376 "tag"
                Eq@5376..5378 "=="
                LiteralExpr@5378..5384
                  String@5378..5384 "\"Dots\""
            RParen@5384..5385 ")"
        DeclStmt@5385..5431
          Local@5385..5390 "local"
          DeclTarget@5390..5397
            Ident@5390..5397 "nparams"
          Assign@5397..5398 "="
          BinOp@5398..5431
            BinOp@5398..5418
              Ident@5398..5402
                Ident@5398..5402 "dots"
              And@5402..5405 "and"
              BinOp@5405..5418
                PrefixOp@5405..5416
                  Hash@5405..5406 "#"
                  Ident@5406..5416
                    Ident@5406..5416 "ast_params"
                Minus@5416..5417 "-"
                LiteralExpr@5417..5418
                  Int@5417..5418 "1"
            Or@5418..5420 "or"
            PrefixOp@5420..5431
              Hash@5420..5421 "#"
              Ident@5421..5431
                Ident@5421..5431 "ast_params"
        ForNumStmt@5431..5552
          For@5431..5434 "for"
          Ident@5434..5435 "i"
          Assign@5435..5436 "="
          LiteralExpr@5436..5437
            Int@5436..5437 "1"
          Comma@5437..5438 ","
          Ident@5438..5445
            Ident@5438..5445 "nparams"
          BlockStmt@5445..5552
            Do@5445..5447 "do"
            StmtList@5447..5549
              FuncCall@5447..5512
                Ident@5447..5453
                  Ident@5447..5453 "assert"
                FuncArgs@5453..5512
                  LParen@5453..5454 "("
                  BinOp@5454..5477
                    BinOp@5454..5471
                      Index@5454..5467
                        Ident@5454..5464
                          Ident@5454..5464 "ast_params"
                        LBracket@5464..5465 "["
                        Ident@5465..5466
                          Ident@5465..5466 "i"
                        RBracket@5466..5467 "]"
                      Dot@5467..5468 "."
                      Ident@5468..5471
                        Ident@5468..5471 "tag"
                    Eq@5471..5473 "=="
                    LiteralExpr@5473..5477
                      String@5473..5477 "\"Id\""
                  Comma@5477..5478 ","
                  LiteralExpr@5478..5511
                    String@5478..5511 "\"Function parameters  ..."
                  RParen@5511..5512 ")"
              FuncCall@5512..5549
                Ident@5512..5524
                  Ident@5512..5524 "new_localvar"
                FuncArgs@5524..5549
                  LParen@5524..5525 "("
                  Ident@5525..5527
                    Ident@5525..5527 "fs"
                  Comma@5527..5528 ","
                  Index@5528..5544
                    Index@5528..5541
                      Ident@5528..5538
                        Ident@5528..5538 "ast_params"
                      LBracket@5538..5539 "["
                      Ident@5539..5540
                        Ident@5539..5540 "i"
                      RBracket@5540..5541 "]"
                    LBracket@5541..5542 "["
                    LiteralExpr@5542..5543
                      Int@5542..5543 "1"
                    RBracket@5543..5544 "]"
                  Comma@5544..5545 ","
                  BinOp@5545..5548
                    Ident@5545..5546
                      Ident@5545..5546 "i"
                    Minus@5546..5547 "-"
                    LiteralExpr@5547..5548
                      Int@5547..5548 "1"
                  RParen@5548..5549 ")"
            End@5549..5552 "end"
        AssignStmt@5552..5577
          BinOp@5552..5566
            BinOp@5552..5556
              Ident@5552..5554
                Ident@5552..5554 "fs"
              Dot@5554..5555 "."
              Ident@5555..5556
                Ident@5555..5556 "f"
            Dot@5556..5557 "."
            Ident@5557..5566
              Ident@5557..5566 "numparams"
          Assign@5566..5567 "="
          BinOp@5567..5577
            Ident@5567..5569
              Ident@5567..5569 "fs"
            Dot@5569..5570 "."
            Ident@5570..5577
              Ident@5570..5577 "nactvar"
        AssignStmt@5577..5619
          BinOp@5577..5591
            BinOp@5577..5581
              Ident@5577..5579
                Ident@5577..5579 "fs"
              Dot@5579..5580 "."
              Ident@5580..5581
                Ident@5580..5581 "f"
            Dot@5581..5582 "."
            Ident@5582..5591
              Ident@5582..5591 "is_vararg"
          Assign@5591..5592 "="
          BinOp@5592..5619
            BinOp@5592..5616
              Ident@5592..5596
                Ident@5592..5596 "dots"
              And@5596..5599 "and"
              BinOp@5599..5616
                Ident@5599..5600
                  Ident@5599..5600 "M"
                Dot@5600..5601 "."
                Ident@5601..5616
                  Ident@5601..5616 "VARARG_ISVARARG"
            Or@5616..5618 "or"
            LiteralExpr@5618..5619
              Int@5618..5619 "0"
        FuncCall@5619..5646
          Ident@5619..5634
            Ident@5619..5634 "adjustlocalvars"
          FuncArgs@5634..5646
            LParen@5634..5635 "("
            Ident@5635..5637
              Ident@5635..5637 "fs"
            Comma@5637..5638 ","
            Ident@5638..5645
              Ident@5638..5645 "nparams"
            RParen@5645..5646 ")"
        AssignStmt@5646..5671
          BinOp@5646..5660
            BinOp@5646..5650
              Ident@5646..5648
                Ident@5646..5648 "fs"
              Dot@5648..5649 "."
              Ident@5649..5650
                Ident@5649..5650 "f"
            Dot@5650..5651 "."
            Ident@5651..5660
              Ident@5651..5660 "numparams"
          Assign@5660..5661 "="
          BinOp@5661..5671
            Ident@5661..5663
              Ident@5661..5663 "fs"
            Dot@5663..5664 "."
            Ident@5664..5671
              Ident@5664..5671 "nactvar"
        FuncCall@5671..5702
          BinOp@5671..5687
            Ident@5671..5675
              Ident@5671..5675 "luaK"
            Colon@5675..5676 ":"
            Ident@5676..5687
              Ident@5676..5687 "reserveregs"
          FuncArgs@5687..5702
            LParen@5687..5688 "("
            Ident@5688..5690
              Ident@5688..5690 "fs"
            Comma@5690..5691 ","
            BinOp@5691..5701
              Ident@5691..5693
                Ident@5691..5693 "fs"
              Dot@5693..5694 "."
              Ident@5694..5701
                Ident@5694..5701 "nactvar"
            RParen@5701..5702 ")"
      End@5702..5705 "end"
  DeclStmt@5705..6037
    Local@5705..5710 "local"
    FuncStmt@5710..6037
      Function@5710..5718 "function"
      Ident@5718..5731
        Ident@5718..5731 "adjust_assign"
      FuncArgs@5731..5749
        LParen@5731..5732 "("
        Ident@5732..5734 "fs"
        Comma@5734..5735 ","
        Ident@5735..5740 "nvars"
        Comma@5740..5741 ","
        Ident@5741..5746 "nexps"
        Comma@5746..5747 ","
        Ident@5747..5748 "e"
        RParen@5748..5749 ")"
      StmtList@5749..6034
        DeclStmt@5749..5771
          Local@5749..5754 "local"
          DeclTarget@5754..5759
            Ident@5754..5759 "extra"
          Assign@5759..5760 "="
          BinOp@5760..5771
            Ident@5760..5765
              Ident@5760..5765 "nvars"
            Minus@5765..5766 "-"
            Ident@5766..5771
              Ident@5766..5771 "nexps"
        IfStmt@5771..6034
          If@5771..5773 "if"
          FuncCall@5773..5788
            Ident@5773..5783
              Ident@5773..5783 "hasmultret"
            FuncArgs@5783..5788
              LParen@5783..5784 "("
              BinOp@5784..5787
                Ident@5784..5785
                  Ident@5784..5785 "e"
                Dot@5785..5786 "."
                Ident@5786..5787
                  Ident@5786..5787 "k"
              RParen@5787..5788 ")"
          Then@5788..5792 "then"
          StmtList@5792..5900
            AssignStmt@5792..5805
              Ident@5792..5797
                Ident@5792..5797 "extra"
              Assign@5797..5798 "="
              BinOp@5798..5805
                Ident@5798..5803
                  Ident@5798..5803 "extra"
                Plus@5803..5804 "+"
                LiteralExpr@5804..5805
                  Int@5804..5805 "1"
            IfStmt@5805..5829
              If@5805..5807 "if"
              BinOp@5807..5815
                Ident@5807..5812
                  Ident@5807..5812 "extra"
                LEq@5812..5814 "<="
                LiteralExpr@5814..5815
                  Int@5814..5815 "0"
              Then@5815..5819 "then"
              StmtList@5819..5826
                AssignStmt@5819..5826
                  Ident@5819..5824
                    Ident@5819..5824 "extra"
                  Assign@5824..5825 "="
                  LiteralExpr@5825..5826
                    Int@5825..5826 "0"
              End@5826..5829 "end"
            FuncCall@5829..5856
              BinOp@5829..5844
                Ident@5829..5833
                  Ident@5829..5833 "luaK"
                Colon@5833..5834 ":"
                Ident@5834..5844
                  Ident@5834..5844 "setreturns"
              FuncArgs@5844..5856
                LParen@5844..5845 "("
                Ident@5845..5847
                  Ident@5845..5847 "fs"
                Comma@5847..5848 ","
                Ident@5848..5849
                  Ident@5848..5849 "e"
                Comma@5849..5850 ","
                Ident@5850..5855
                  Ident@5850..5855 "extra"
                RParen@5855..5856 ")"
            IfStmt@5856..5900
              If@5856..5858 "if"
              BinOp@5858..5865
                Ident@5858..5863
                  Ident@5858..5863 "extra"
                RAngle@5863..5864 ">"
                LiteralExpr@5864..5865
                  Int@5864..5865 "1"
              Then@5865..5869 "then"
              StmtList@5869..5897
                FuncCall@5869..5897
                  BinOp@5869..5885
                    Ident@5869..5873
                      Ident@5869..5873 "luaK"
                    Colon@5873..5874 ":"
                    Ident@5874..5885
                      Ident@5874..5885 "reserveregs"
                  FuncArgs@5885..5897
                    LParen@5885..5886 "("
                    Ident@5886..5888
                      Ident@5886..5888 "fs"
                    Comma@5888..5889 ","
                    BinOp@5889..5896
                      Ident@5889..5894
                        Ident@5889..5894 "extra"
                      Minus@5894..5895 "-"
                      LiteralExpr@5895..5896
                        Int@5895..5896 "1"
                    RParen@5896..5897 ")"
              End@5897..5900 "end"
          ElseChain@5900..6034
            Else@5900..5904 "else"
            StmtList@5904..6031
              IfStmt@5904..5947
                If@5904..5906 "if"
                BinOp@5906..5918
                  BinOp@5906..5909
                    Ident@5906..5907
                      Ident@5906..5907 "e"
                    Dot@5907..5908 "."
                    Ident@5908..5909
                      Ident@5908..5909 "k"
                  NotEq@5909..5911 "~="
                  LiteralExpr@5911..5918
                    String@5911..5918 "\"VVOID\""
                Then@5918..5922 "then"
                StmtList@5922..5944
                  FuncCall@5922..5944
                    BinOp@5922..5938
                      Ident@5922..5926
                        Ident@5922..5926 "luaK"
                      Colon@5926..5927 ":"
                      Ident@5927..5938
                        Ident@5927..5938 "exp2nextreg"
                    FuncArgs@5938..5944
                      LParen@5938..5939 "("
                      Ident@5939..5941
                        Ident@5939..5941 "fs"
                      Comma@5941..5942 ","
                      Ident@5942..5943
                        Ident@5942..5943 "e"
                      RParen@5943..5944 ")"
                End@5944..5947 "end"
              IfStmt@5947..6031
                If@5947..5949 "if"
                BinOp@5949..5956
                  Ident@5949..5954
                    Ident@5949..5954 "extra"
                  RAngle@5954..5955 ">"
                  LiteralExpr@5955..5956
                    Int@5955..5956 "0"
                Then@5956..5960 "then"
                StmtList@5960..6028
                  DeclStmt@5960..5979
                    Local@5960..5965 "local"
                    DeclTarget@5965..5968
                      Ident@5965..5968 "reg"
                    Assign@5968..5969 "="
                    BinOp@5969..5979
                      Ident@5969..5971
                        Ident@5969..5971 "fs"
                      Dot@5971..5972 "."
                      Ident@5972..5979
                        Ident@5972..5979 "freereg"
                  FuncCall@5979..6005
                    BinOp@5979..5995
                      Ident@5979..5983
                        Ident@5979..5983 "luaK"
                      Colon@5983..5984 ":"
                      Ident@5984..5995
                        Ident@5984..5995 "reserveregs"
                    FuncArgs@5995..6005
                      LParen@5995..5996 "("
                      Ident@5996..5998
                        Ident@5996..5998 "fs"
                      Comma@5998..5999 ","
                      Ident@5999..6004
                        Ident@5999..6004 "extra"
                      RParen@6004..6005 ")"
                  FuncCall@6005..6028
                    BinOp@6005..6014
                      Ident@6005..6009
                        Ident@6005..6009 "luaK"
                      Colon@6009..6010 ":"
                      Ident@6010..6014
                        Ident@6010..6014 "_nil"
                    FuncArgs@6014..6028
                      LParen@6014..6015 "("
                      Ident@6015..6017
                        Ident@6015..6017 "fs"
                      Comma@6017..6018 ","
                      Ident@6018..6021
                        Ident@6018..6021 "reg"
                      Comma@6021..6022 ","
                      Ident@6022..6027
                        Ident@6022..6027 "extra"
                      RParen@6027..6028 ")"
                End@6028..6031 "end"
            End@6031..6034 "end"
      End@6034..6037 "end"
  DeclStmt@6037..6161
    Local@6037..6042 "local"
    FuncStmt@6042..6161
      Function@6042..6050 "function"
      Ident@6050..6060
        Ident@6050..6060 "enterlevel"
      FuncArgs@6060..6064
        LParen@6060..6061 "("
        Ident@6061..6063 "fs"
        RParen@6063..6064 ")"
      StmtList@6064..6158
        AssignStmt@6064..6091
          BinOp@6064..6076
            Ident@6064..6066
              Ident@6064..6066 "fs"
            Dot@6066..6067 "."
            Ident@6067..6076
              Ident@6067..6076 "nestlevel"
          Assign@6076..6077 "="
          BinOp@6077..6091
            BinOp@6077..6089
              Ident@6077..6079
                Ident@6077..6079 "fs"
              Dot@6079..6080 "."
              Ident@6080..6089
                Ident@6080..6089 "nestlevel"
            Plus@6089..6090 "+"
            LiteralExpr@6090..6091
              Int@6090..6091 "1"
        FuncCall@6091..6158
          Ident@6091..6097
            Ident@6091..6097 "assert"
          FuncArgs@6097..6158
            LParen@6097..6098 "("
            BinOp@6098..6132
              BinOp@6098..6110
                Ident@6098..6100
                  Ident@6098..6100 "fs"
                Dot@6100..6101 "."
                Ident@6101..6110
                  Ident@6101..6110 "nestlevel"
              LEq@6110..6112 "<="
              BinOp@6112..6132
                Ident@6112..6113
                  Ident@6112..6113 "M"
                Dot@6113..6114 "."
                Ident@6114..6132
                  Ident@6114..6132 "LUA_MAXPARSERLEVEL"
            Comma@6132..6133 ","
            LiteralExpr@6133..6157
              String@6133..6157 "\"too many syntax levels\""
            RParen@6157..6158 ")"
      End@6158..6161 "end"
  DeclStmt@6161..6218
    Local@6161..6166 "local"
    FuncStmt@6166..6218
      Function@6166..6174 "function"
      Ident@6174..6184
        Ident@6174..6184 "leavelevel"
      FuncArgs@6184..6188
        LParen@6184..6185 "("
        Ident@6185..6187 "fs"
        RParen@6187..6188 ")"
      StmtList@6188..6215
        AssignStmt@6188..6215
          BinOp@6188..6200
            Ident@6188..6190
              Ident@6188..6190 "fs"
            Dot@6190..6191 "."
            Ident@6191..6200
              Ident@6191..6200 "nestlevel"
          Assign@6200..6201 "="
          BinOp@6201..6215
            BinOp@6201..6213
              Ident@6201..6203
                Ident@6201..6203 "fs"
              Dot@6203..6204 "."
              Ident@6204..6213
                Ident@6204..6213 "nestlevel"
            Minus@6213..6214 "-"
            LiteralExpr@6214..6215
              Int@6214..6215 "1"
      End@6215..6218 "end"
  DeclStmt@6218..6334
    Local@6218..6223 "local"
    FuncStmt@6223..6334
      Function@6223..6231 "function"
      Ident@6231..6235
        Ident@6231..6235 "cond"
      FuncArgs@6235..6243
        LParen@6235..6236 "("
        Ident@6236..6238 "fs"
        Comma@6238..6239 ","
        Ident@6239..6242 "ast"
        RParen@6242..6243 ")"
      StmtList@6243..6331
        DeclStmt@6243..6252
          Local@6243..6248 "local"
          DeclTarget@6248..6249
            Ident@6248..6249 "v"
          Assign@6249..6250 "="
          TableExpr@6250..6252
            LCurly@6250..6251 "{"
            RCurly@6251..6252 "}"
        FuncCall@6252..6271
          BinOp@6252..6261
            Ident@6252..6256
              Ident@6252..6256 "expr"
            Dot@6256..6257 "."
            Ident@6257..6261
              Ident@6257..6261 "expr"
          FuncArgs@6261..6271
            LParen@6261..6262 "("
            Ident@6262..6264
              Ident@6262..6264 "fs"
            Comma@6264..6265 ","
            Ident@6265..6268
              Ident@6265..6268 "ast"
            Comma@6268..6269 ","
            Ident@6269..6270
              Ident@6269..6270 "v"
            RParen@6270..6271 ")"
        IfStmt@6271..6303
          If@6271..6273 "if"
          BinOp@6273..6284
            BinOp@6273..6276
              Ident@6273..6274
                Ident@6273..6274 "v"
              Dot@6274..6275 "."
              Ident@6275..6276
                Ident@6275..6276 "k"
            Eq@6276..6278 "=="
            LiteralExpr@6278..6284
              String@6278..6284 "\"VNIL\""
          Then@6284..6288 "then"
          StmtList@6288..6300
            AssignStmt@6288..6300
              BinOp@6288..6291
                Ident@6288..6289
                  Ident@6288..6289 "v"
                Dot@6289..6290 "."
                Ident@6290..6291
                  Ident@6290..6291 "k"
              Assign@6291..6292 "="
              LiteralExpr@6292..6300
                String@6292..6300 "\"VFALSE\""
          End@6300..6303 "end"
        FuncCall@6303..6322
          BinOp@6303..6316
            Ident@6303..6307
              Ident@6303..6307 "luaK"
            Colon@6307..6308 ":"
            Ident@6308..6316
              Ident@6308..6316 "goiftrue"
          FuncArgs@6316..6322
            LParen@6316..6317 "("
            Ident@6317..6319
              Ident@6317..6319 "fs"
            Comma@6319..6320 ","
            Ident@6320..6321
              Ident@6320..6321 "v"
            RParen@6321..6322 ")"
        ReturnStmt@6322..6331
          Return@6322..6328 "return"
          BinOp@6328..6331
            Ident@6328..6329
              Ident@6328..6329 "v"
            Dot@6329..6330 "."
            Ident@6330..6331
              Ident@6330..6331 "f"
      End@6331..6334 "end"
  DeclStmt@6334..6467
    Local@6334..6339 "local"
    FuncStmt@6339..6467
      Function@6339..6347 "function"
      Ident@6347..6352
        Ident@6347..6352 "chunk"
      FuncArgs@6352..6360
        LParen@6352..6353 "("
        Ident@6353..6355 "fs"
        Comma@6355..6356 ","
        Ident@6356..6359 "ast"
        RParen@6359..6360 ")"
      StmtList@6360..6464
        FuncCall@6360..6374
          Ident@6360..6370
            Ident@6360..6370 "enterlevel"
          FuncArgs@6370..6374
            LParen@6370..6371 "("
            Ident@6371..6373
              Ident@6371..6373 "fs"
            RParen@6373..6374 ")"
        FuncCall@6374..6392
          Ident@6374..6380
            Ident@6374..6380 "assert"
          FuncArgs@6380..6392
            LParen@6380..6381 "("
            PrefixOp@6381..6391
              Not@6381..6384 "not"
              BinOp@6384..6391
                Ident@6384..6387
                  Ident@6384..6387 "ast"
                Dot@6387..6388 "."
                Ident@6388..6391
                  Ident@6388..6391 "tag"
            RParen@6391..6392 ")"
        ForNumStmt@6392..6450
          For@6392..6395 "for"
          Ident@6395..6396 "i"
          Assign@6396..6397 "="
          LiteralExpr@6397..6398
            Int@6397..6398 "1"
          Comma@6398..6399 ","
          PrefixOp@6399..6403
            Hash@6399..6400 "#"
            Ident@6400..6403
              Ident@6400..6403 "ast"
          BlockStmt@6403..6450
            Do@6403..6405 "do"
            StmtList@6405..6447
              FuncCall@6405..6425
                BinOp@6405..6414
                  Ident@6405..6409
                    Ident@6405..6409 "stat"
                  Dot@6409..6410 "."
                  Ident@6410..6414
                    Ident@6410..6414 "stat"
                FuncArgs@6414..6425
                  LParen@6414..6415 "("
                  Ident@6415..6417
                    Ident@6415..6417 "fs"
                  Comma@6417..6418 ","
                  Index@6418..6424
                    Ident@6418..6421
                      Ident@6418..6421 "ast"
                    LBracket@6421..6422 "["
                    Ident@6422..6423
                      Ident@6422..6423 "i"
                    RBracket@6423..6424 "]"
                  RParen@6424..6425 ")"
              Semicolon@6425..6426
                Semicolon@6425..6426 ";"
              AssignStmt@6426..6447
                BinOp@6426..6436
                  Ident@6426..6428
                    Ident@6426..6428 "fs"
                  Dot@6428..6429 "."
                  Ident@6429..6436
                    Ident@6429..6436 "freereg"
                Assign@6436..6437 "="
                BinOp@6437..6447
                  Ident@6437..6439
                    Ident@6437..6439 "fs"
                  Dot@6439..6440 "."
                  Ident@6440..6447
                    Ident@6440..6447 "nactvar"
            End@6447..6450 "end"
        FuncCall@6450..6464
          Ident@6450..6460
            Ident@6450..6460 "leavelevel"
          FuncArgs@6460..6464
            LParen@6460..6461 "("
            Ident@6461..6463
              Ident@6461..6463 "fs"
            RParen@6463..6464 ")"
      End@6464..6467 "end"
  DeclStmt@6467..6634
    Local@6467..6472 "local"
    FuncStmt@6472..6634
      Function@6472..6480 "function"
      Ident@6480..6485
        Ident@6480..6485 "block"
      FuncArgs@6485..6493
        LParen@6485..6486 "("
        Ident@6486..6488 "fs"
        Comma@6488..6489 ","
        Ident@6489..6492 "ast"
        RParen@6492..6493 ")"
      StmtList@6493..6631
        DeclStmt@6493..6503
          Local@6493..6498 "local"
          DeclTarget@6498..6500
            Ident@6498..6500 "bl"
          Assign@6500..6501 "="
          TableExpr@6501..6503
            LCurly@6501..6502 "{"
            RCurly@6502..6503 "}"
        FuncCall@6503..6526
          Ident@6503..6513
            Ident@6503..6513 "enterblock"
          FuncArgs@6513..6526
            LParen@6513..6514 "("
            Ident@6514..6516
              Ident@6514..6516 "fs"
            Comma@6516..6517 ","
            Ident@6517..6519
              Ident@6517..6519 "bl"
            Comma@6519..6520 ","
            LiteralExpr@6520..6525
              False@6520..6525 "false"
            RParen@6525..6526 ")"
        ForNumStmt@6526..6583
          For@6526..6529 "for"
          Ident@6529..6530 "i"
          Assign@6530..6531 "="
          LiteralExpr@6531..6532
            Int@6531..6532 "1"
          Comma@6532..6533 ","
          PrefixOp@6533..6537
            Hash@6533..6534 "#"
            Ident@6534..6537
              Ident@6534..6537 "ast"
          BlockStmt@6537..6583
            Do@6537..6539 "do"
            StmtList@6539..6580
              FuncCall@6539..6559
                BinOp@6539..6548
                  Ident@6539..6543
                    Ident@6539..6543 "stat"
                  Dot@6543..6544 "."
                  Ident@6544..6548
                    Ident@6544..6548 "stat"
                FuncArgs@6548..6559
                  LParen@6548..6549 "("
                  Ident@6549..6551
                    Ident@6549..6551 "fs"
                  Comma@6551..6552 ","
                  Index@6552..6558
                    Ident@6552..6555
                      Ident@6552..6555 "ast"
                    LBracket@6555..6556 "["
                    Ident@6556..6557
                      Ident@6556..6557 "i"
                    RBracket@6557..6558 "]"
                  RParen@6558..6559 ")"
              AssignStmt@6559..6580
                BinOp@6559..6569
                  Ident@6559..6561
                    Ident@6559..6561 "fs"
                  Dot@6561..6562 "."
                  Ident@6562..6569
                    Ident@6562..6569 "freereg"
                Assign@6569..6570 "="
                BinOp@6570..6580
                  Ident@6570..6572
                    Ident@6570..6572 "fs"
                  Dot@6572..6573 "."
                  Ident@6573..6580
                    Ident@6573..6580 "nactvar"
            End@6580..6583 "end"
        FuncCall@6583..6617
          Ident@6583..6589
            Ident@6583..6589 "assert"
          FuncArgs@6589..6617
            LParen@6589..6590 "("
            BinOp@6590..6616
              BinOp@6590..6602
                Ident@6590..6592
                  Ident@6590..6592 "bl"
                Dot@6592..6593 "."
                Ident@6593..6602
                  Ident@6593..6602 "breaklist"
              Eq@6602..6604 "=="
              BinOp@6604..6616
                Ident@6604..6608
                  Ident@6604..6608 "luaK"
                Dot@6608..6609 "."
                Ident@6609..6616
                  Ident@6609..6616 "NO_JUMP"
            RParen@6616..6617 ")"
        FuncCall@6617..6631
          Ident@6617..6627
            Ident@6617..6627 "leaveblock"
          FuncArgs@6627..6631
            LParen@6627..6628 "("
            Ident@6628..6630
              Ident@6628..6630 "fs"
            RParen@6630..6631 ")"
      End@6631..6634 "end"
  DeclStmt@6634..7128
    Local@6634..6639 "local"
    FuncStmt@6639..7128
      Function@6639..6647 "function"
      Ident@6647..6654
        Ident@6647..6654 "forbody"
      FuncArgs@6654..6684
        LParen@6654..6655 "("
        Ident@6655..6657 "fs"
        Comma@6657..6658 ","
        Ident@6658..6666 "ast_body"
        Comma@6666..6667 ","
        Ident@6667..6671 "base"
        Comma@6671..6672 ","
        Ident@6672..6677 "nvars"
        Comma@6677..6678 ","
        Ident@6678..6683 "isnum"
        RParen@6683..6684 ")"
      StmtList@6684..7125
        DeclStmt@6684..6694
          Local@6684..6689 "local"
          DeclTarget@6689..6691
            Ident@6689..6691 "bl"
          Assign@6691..6692 "="
          TableExpr@6692..6694
            LCurly@6692..6693 "{"
            RCurly@6693..6694 "}"
        FuncCall@6694..6715
          Ident@6694..6709
            Ident@6694..6709 "adjustlocalvars"
          FuncArgs@6709..6715
            LParen@6709..6710 "("
            Ident@6710..6712
              Ident@6710..6712 "fs"
            Comma@6712..6713 ","
            LiteralExpr@6713..6714
              Int@6713..6714 "3"
            RParen@6714..6715 ")"
        DeclStmt@6715..6796
          Local@6715..6720 "local"
          DeclTarget@6720..6724
            Ident@6720..6724 "prep"
          Assign@6724..6725 "="
          BinOp@6725..6796
            BinOp@6725..6781
              Ident@6725..6730
                Ident@6725..6730 "isnum"
              And@6730..6733 "and"
              FuncCall@6733..6781
                BinOp@6733..6746
                  Ident@6733..6737
                    Ident@6733..6737 "luaK"
                  Colon@6737..6738 ":"
                  Ident@6738..6746
                    Ident@6738..6746 "codeAsBx"
                FuncArgs@6746..6781
                  LParen@6746..6747 "("
                  Ident@6747..6749
                    Ident@6747..6749 "fs"
                  Comma@6749..6750 ","
                  LiteralExpr@6750..6762
                    String@6750..6762 "\"OP_FORPREP\""
                  Comma@6762..6763 ","
                  Ident@6763..6767
                    Ident@6763..6767 "base"
                  Comma@6767..6768 ","
                  BinOp@6768..6780
                    Ident@6768..6772
                      Ident@6768..6772 "luaK"
                    Dot@6772..6773 "."
                    Ident@6773..6780
                      Ident@6773..6780 "NO_JUMP"
                  RParen@6780..6781 ")"
            Or@6781..6783 "or"
            FuncCall@6783..6796
              BinOp@6783..6792
                Ident@6783..6787
                  Ident@6783..6787 "luaK"
                Colon@6787..6788 ":"
                Ident@6788..6792
                  Ident@6788..6792 "jump"
              FuncArgs@6792..6796
                LParen@6792..6793 "("
                Ident@6793..6795
                  Ident@6793..6795 "fs"
                RParen@6795..6796 ")"
        FuncCall@6796..6819
          Ident@6796..6806
            Ident@6796..6806 "enterblock"
          FuncArgs@6806..6819
            LParen@6806..6807 "("
            Ident@6807..6809
              Ident@6807..6809 "fs"
            Comma@6809..6810 ","
            Ident@6810..6812
              Ident@6810..6812 "bl"
            Comma@6812..6813 ","
            LiteralExpr@6813..6818
              False@6813..6818 "false"
            RParen@6818..6819 ")"
        FuncCall@6819..6844
          Ident@6819..6834
            Ident@6819..6834 "adjustlocalvars"
          FuncArgs@6834..6844
            LParen@6834..6835 "("
            Ident@6835..6837
              Ident@6835..6837 "fs"
            Comma@6837..6838 ","
            Ident@6838..6843
              Ident@6838..6843 "nvars"
            RParen@6843..6844 ")"
        FuncCall@6844..6870
          BinOp@6844..6860
            Ident@6844..6848
              Ident@6844..6848 "luaK"
            Colon@6848..6849 ":"
            Ident@6849..6860
              Ident@6849..6860 "reserveregs"
          FuncArgs@6860..6870
            LParen@6860..6861 "("
            Ident@6861..6863
              Ident@6861..6863 "fs"
            Comma@6863..6864 ","
            Ident@6864..6869
              Ident@6864..6869 "nvars"
            RParen@6869..6870 ")"
        FuncCall@6870..6888
          Ident@6870..6875
            Ident@6870..6875 "block"
          FuncArgs@6875..6888
            LParen@6875..6876 "("
            Ident@6876..6878
              Ident@6876..6878 "fs"
            Comma@6878..6879 ","
            Ident@6879..6887
              Ident@6879..6887 "ast_body"
            RParen@6887..6888 ")"
        FuncCall@6888..6902
          Ident@6888..6898
            Ident@6888..6898 "leaveblock"
          FuncArgs@6898..6902
            LParen@6898..6899 "("
            Ident@6899..6901
              Ident@6899..6901 "fs"
            RParen@6901..6902 ")"
        FuncCall@6902..6927
          BinOp@6902..6918
            Ident@6902..6906
              Ident@6902..6906 "luaK"
            Colon@6906..6907 ":"
            Ident@6907..6918
              Ident@6907..6918 "patchtohere"
          FuncArgs@6918..6927
            LParen@6918..6919 "("
            Ident@6919..6921
              Ident@6919..6921 "fs"
            Comma@6921..6922 ","
            Ident@6922..6926
              Ident@6922..6926 "prep"
            RParen@6926..6927 ")"
        DeclStmt@6927..7040
          Local@6927..6932 "local"
          DeclTarget@6932..6938
            Ident@6932..6938 "endfor"
          Assign@6938..6939 "="
          BinOp@6939..7040
            BinOp@6939..6995
              Ident@6939..6944
                Ident@6939..6944 "isnum"
              And@6944..6947 "and"
              FuncCall@6947..6995
                BinOp@6947..6960
                  Ident@6947..6951
                    Ident@6947..6951 "luaK"
                  Colon@6951..6952 ":"
                  Ident@6952..6960
                    Ident@6952..6960 "codeAsBx"
                FuncArgs@6960..6995
                  LParen@6960..6961 "("
                  Ident@6961..6963
                    Ident@6961..6963 "fs"
                  Comma@6963..6964 ","
                  LiteralExpr@6964..6976
                    String@6964..6976 "\"OP_FORLOOP\""
                  Comma@6976..6977 ","
                  Ident@6977..6981
                    Ident@6977..6981 "base"
                  Comma@6981..6982 ","
                  BinOp@6982..6994
                    Ident@6982..6986
                      Ident@6982..6986 "luaK"
                    Dot@6986..6987 "."
                    Ident@6987..6994
                      Ident@6987..6994 "NO_JUMP"
                  RParen@6994..6995 ")"
            Or@6995..6997 "or"
            FuncCall@6997..7040
              BinOp@6997..7009
                Ident@6997..7001
                  Ident@6997..7001 "luaK"
                Colon@7001..7002 ":"
                Ident@7002..7009
                  Ident@7002..7009 "codeABC"
              FuncArgs@7009..7040
                LParen@7009..7010 "("
                Ident@7010..7012
                  Ident@7010..7012 "fs"
                Comma@7012..7013 ","
                LiteralExpr@7013..7026
                  String@7013..7026 "\"OP_TFORLOOP\""
                Comma@7026..7027 ","
                Ident@7027..7031
                  Ident@7027..7031 "base"
                Comma@7031..7032 ","
                LiteralExpr@7032..7033
                  Int@7032..7033 "0"
                Comma@7033..7034 ","
                Ident@7034..7039
                  Ident@7034..7039 "nvars"
                RParen@7039..7040 ")"
        FuncCall@7040..7070
          BinOp@7040..7052
            Ident@7040..7044
              Ident@7040..7044 "luaK"
            Colon@7044..7045 ":"
            Ident@7045..7052
              Ident@7045..7052 "fixline"
          FuncArgs@7052..7070
            LParen@7052..7053 "("
            Ident@7053..7055
              Ident@7053..7055 "fs"
            Comma@7055..7056 ","
            BinOp@7056..7069
              Ident@7056..7064
                Ident@7056..7064 "ast_body"
              Dot@7064..7065 "."
              Ident@7065..7069
                Ident@7065..7069 "line"
            RParen@7069..7070 ")"
        FuncCall@7070..7125
          BinOp@7070..7084
            Ident@7070..7074
              Ident@7070..7074 "luaK"
            Colon@7074..7075 ":"
            Ident@7075..7084
              Ident@7075..7084 "patchlist"
          FuncArgs@7084..7125
            LParen@7084..7085 "("
            Ident@7085..7087
              Ident@7085..7087 "fs"
            Comma@7087..7088 ","
            BinOp@7088..7117
              BinOp@7088..7102
                Ident@7088..7093
                  Ident@7088..7093 "isnum"
                And@7093..7096 "and"
                Ident@7096..7102
                  Ident@7096..7102 "endfor"
              Or@7102..7104 "or"
              FuncCall@7104..7117
                BinOp@7104..7113
                  Ident@7104..7108
                    Ident@7104..7108 "luaK"
                  Colon@7108..7109 ":"
                  Ident@7109..7113
                    Ident@7109..7113 "jump"
                FuncArgs@7113..7117
                  LParen@7113..7114 "("
                  Ident@7114..7116
                    Ident@7114..7116 "fs"
                  RParen@7116..7117 ")"
            Comma@7117..7118 ","
            BinOp@7118..7124
              Ident@7118..7122
                Ident@7118..7122 "prep"
              Plus@7122..7123 "+"
              LiteralExpr@7123..7124
                Int@7123..7124 "1"
            RParen@7124..7125 ")"
      End@7125..7128 "end"
  DeclStmt@7128..7412
    Local@7128..7133 "local"
    FuncStmt@7133..7412
      Function@7133..7141 "function"
      Ident@7141..7149
        Ident@7141..7149 "recfield"
      FuncArgs@7149..7160
        LParen@7149..7150 "("
        Ident@7150..7152 "fs"
        Comma@7152..7153 ","
        Ident@7153..7156 "ast"
        Comma@7156..7157 ","
        Ident@7157..7159 "cc"
        RParen@7159..7160 ")"
      StmtList@7160..7409
        DeclStmt@7160..7179
          Local@7160..7165 "local"
          DeclTarget@7165..7168
            Ident@7165..7168 "reg"
          Assign@7168..7169 "="
          BinOp@7169..7179
            Ident@7169..7171
              Ident@7169..7171 "fs"
            Dot@7171..7172 "."
            Ident@7172..7179
              Ident@7172..7179 "freereg"
        DeclStmt@7179..7197
          Local@7179..7184 "local"
          DeclTarget@7184..7187
            Ident@7184..7187 "key"
          Comma@7187..7188 ","
          DeclTarget@7188..7191
            Ident@7188..7191 "val"
          Assign@7191..7192 "="
          ExprList@7192..7197
            TableExpr@7192..7194
              LCurly@7192..7193 "{"
              RCurly@7193..7194 "}"
            Comma@7194..7195 ","
            TableExpr@7195..7197
              LCurly@7195..7196 "{"
              RCurly@7196..7197 "}"
        AssignStmt@7197..7210
          BinOp@7197..7202
            Ident@7197..7199
              Ident@7197..7199 "cc"
            Dot@7199..7200 "."
            Ident@7200..7202
              Ident@7200..7202 "nh"
          Assign@7202..7203 "="
          BinOp@7203..7210
            BinOp@7203..7208
              Ident@7203..7205
                Ident@7203..7205 "cc"
              Dot@7205..7206 "."
              Ident@7206..7208
                Ident@7206..7208 "nh"
            Plus@7208..7209 "+"
            LiteralExpr@7209..7210
              Int@7209..7210 "1"
        FuncCall@7210..7234
          BinOp@7210..7219
            Ident@7210..7214
              Ident@7210..7214 "expr"
            Dot@7214..7215 "."
            Ident@7215..7219
              Ident@7215..7219 "expr"
          FuncArgs@7219..7234
            LParen@7219..7220 "("
            Ident@7220..7222
              Ident@7220..7222 "fs"
            Comma@7222..7223 ","
            Index@7223..7229
              Ident@7223..7226
                Ident@7223..7226 "ast"
              LBracket@7226..7227 "["
              LiteralExpr@7227..7228
                Int@7227..7228 "1"
              RBracket@7228..7229 "]"
            Comma@7229..7230 ","
            Ident@7230..7233
              Ident@7230..7233 "key"
            RParen@7233..7234 ")"
        Semicolon@7234..7235
          Semicolon@7234..7235 ";"
        FuncCall@7235..7255
          BinOp@7235..7247
            Ident@7235..7239
              Ident@7235..7239 "luaK"
            Colon@7239..7240 ":"
            Ident@7240..7247
              Ident@7240..7247 "exp2val"
          FuncArgs@7247..7255
            LParen@7247..7248 "("
            Ident@7248..7250
              Ident@7248..7250 "fs"
            Comma@7250..7251 ","
            Ident@7251..7254
              Ident@7251..7254 "key"
            RParen@7254..7255 ")"
        DeclStmt@7255..7286
          Local@7255..7260 "local"
          DeclTarget@7260..7266
            Ident@7260..7266 "keyreg"
          Assign@7266..7267 "="
          FuncCall@7267..7286
            BinOp@7267..7278
              Ident@7267..7271
                Ident@7267..7271 "luaK"
              Colon@7271..7272 ":"
              Ident@7272..7278
                Ident@7272..7278 "exp2RK"
            FuncArgs@7278..7286
              LParen@7278..7279 "("
              Ident@7279..7281
                Ident@7279..7281 "fs"
              Comma@7281..7282 ","
              Ident@7282..7285
                Ident@7282..7285 "key"
              RParen@7285..7286 ")"
        FuncCall@7286..7310
          BinOp@7286..7295
            Ident@7286..7290
              Ident@7286..7290 "expr"
            Dot@7290..7291 "."
            Ident@7291..7295
              Ident@7291..7295 "expr"
          FuncArgs@7295..7310
            LParen@7295..7296 "("
            Ident@7296..7298
              Ident@7296..7298 "fs"
            Comma@7298..7299 ","
            Index@7299..7305
              Ident@7299..7302
                Ident@7299..7302 "ast"
              LBracket@7302..7303 "["
              LiteralExpr@7303..7304
                Int@7303..7304 "2"
              RBracket@7304..7305 "]"
            Comma@7305..7306 ","
            Ident@7306..7309
              Ident@7306..7309 "val"
            RParen@7309..7310 ")"
        DeclStmt@7310..7341
          Local@7310..7315 "local"
          DeclTarget@7315..7321
            Ident@7315..7321 "valreg"
          Assign@7321..7322 "="
          FuncCall@7322..7341
            BinOp@7322..7333
              Ident@7322..7326
                Ident@7322..7326 "luaK"
              Colon@7326..7327 ":"
              Ident@7327..7333
                Ident@7327..7333 "exp2RK"
            FuncArgs@7333..7341
              LParen@7333..7334 "("
              Ident@7334..7336
                Ident@7334..7336 "fs"
              Comma@7336..7337 ","
              Ident@7337..7340
                Ident@7337..7340 "val"
              RParen@7340..7341 ")"
        FuncCall@7341..7395
          BinOp@7341..7353
            Ident@7341..7345
              Ident@7341..7345 "luaK"
            Colon@7345..7346 ":"
            Ident@7346..7353
              Ident@7346..7353 "codeABC"
          FuncArgs@7353..7395
            LParen@7353..7354 "("
            Ident@7354..7356
              Ident@7354..7356 "fs"
            Comma@7356..7357 ","
            LiteralExpr@7357..7370
              String@7357..7370 "\"OP_SETTABLE\""
            Comma@7370..7371 ","
            BinOp@7371..7380
              Ident@7371..7373
                Ident@7371..7373 "cc"
              Dot@7373..7374 "."
              BinOp@7374..7380
                Ident@7374..7375
                  Ident@7374..7375 "t"
                Dot@7375..7376 "."
                Ident@7376..7380
                  Ident@7376..7380 "info"
            Comma@7380..7381 ","
            Ident@7381..7387
              Ident@7381..7387 "keyreg"
            Comma@7387..7388 ","
            Ident@7388..7394
              Ident@7388..7394 "valreg"
            RParen@7394..7395 ")"
        AssignStmt@7395..7409
          BinOp@7395..7405
            Ident@7395..7397
              Ident@7395..7397 "fs"
            Dot@7397..7398 "."
            Ident@7398..7405
              Ident@7398..7405 "freereg"
          Assign@7405..7406 "="
          Ident@7406..7409
            Ident@7406..7409 "reg"
      End@7409..7412 "end"
  DeclStmt@7412..7535
    Local@7412..7417 "local"
    FuncStmt@7417..7535
      Function@7417..7425 "function"
      Ident@7425..7434
        Ident@7425..7434 "listfield"
      FuncArgs@7434..7445
        LParen@7434..7435 "("
        Ident@7435..7437 "fs"
        Comma@7437..7438 ","
        Ident@7438..7441 "ast"
        Comma@7441..7442 ","
        Ident@7442..7444 "cc"
        RParen@7444..7445 ")"
      StmtList@7445..7532
        FuncCall@7445..7467
          BinOp@7445..7454
            Ident@7445..7449
              Ident@7445..7449 "expr"
            Dot@7449..7450 "."
            Ident@7450..7454
              Ident@7450..7454 "expr"
          FuncArgs@7454..7467
            LParen@7454..7455 "("
            Ident@7455..7457
              Ident@7455..7457 "fs"
            Comma@7457..7458 ","
            Ident@7458..7461
              Ident@7458..7461 "ast"
            Comma@7461..7462 ","
            BinOp@7462..7466
              Ident@7462..7464
                Ident@7462..7464 "cc"
              Dot@7464..7465 "."
              Ident@7465..7466
                Ident@7465..7466 "v"
            RParen@7466..7467 ")"
        FuncCall@7467..7496
          Ident@7467..7473
            Ident@7467..7473 "assert"
          FuncArgs@7473..7496
            LParen@7473..7474 "("
            BinOp@7474..7495
              BinOp@7474..7479
                Ident@7474..7476
                  Ident@7474..7476 "cc"
                Dot@7476..7477 "."
                Ident@7477..7479
                  Ident@7477..7479 "na"
              LEq@7479..7481 "<="
              BinOp@7481..7495
                Ident@7481..7485
                  Ident@7481..7485 "luaP"
                Dot@7485..7486 "."
                Ident@7486..7495
                  Ident@7486..7495 "MAXARG_Bx"
            RParen@7495..7496 ")"
        AssignStmt@7496..7509
          BinOp@7496..7501
            Ident@7496..7498
              Ident@7496..7498 "cc"
            Dot@7498..7499 "."
            Ident@7499..7501
              Ident@7499..7501 "na"
          Assign@7501..7502 "="
          BinOp@7502..7509
            BinOp@7502..7507
              Ident@7502..7504
                Ident@7502..7504 "cc"
              Dot@7504..7505 "."
              Ident@7505..7507
                Ident@7505..7507 "na"
            Plus@7507..7508 "+"
            LiteralExpr@7508..7509
              Int@7508..7509 "1"
        AssignStmt@7509..7532
          BinOp@7509..7519
            Ident@7509..7511
              Ident@7509..7511 "cc"
            Dot@7511..7512 "."
            Ident@7512..7519
              Ident@7512..7519 "tostore"
          Assign@7519..7520 "="
          BinOp@7520..7532
            BinOp@7520..7530
              Ident@7520..7522
                Ident@7520..7522 "cc"
              Dot@7522..7523 "."
              Ident@7523..7530
                Ident@7523..7530 "tostore"
            Plus@7530..7531 "+"
            LiteralExpr@7531..7532
              Int@7531..7532 "1"
      End@7532..7535 "end"
  DeclStmt@7535..7739
    Local@7535..7540 "local"
    FuncStmt@7540..7739
      Function@7540..7548 "function"
      Ident@7548..7562
        Ident@7548..7562 "closelistfield"
      FuncArgs@7562..7569
        LParen@7562..7563 "("
        Ident@7563..7565 "fs"
        Comma@7565..7566 ","
        Ident@7566..7568 "cc"
        RParen@7568..7569 ")"
      StmtList@7569..7736
        IfStmt@7569..7599
          If@7569..7571 "if"
          BinOp@7571..7586
            BinOp@7571..7577
              Ident@7571..7573
                Ident@7571..7573 "cc"
              Dot@7573..7574 "."
              BinOp@7574..7577
                Ident@7574..7575
                  Ident@7574..7575 "v"
                Dot@7575..7576 "."
                Ident@7576..7577
                  Ident@7576..7577 "k"
            Eq@7577..7579 "=="
            LiteralExpr@7579..7586
              String@7579..7586 "\"VVOID\""
          Then@7586..7590 "then"
          StmtList@7590..7596
            ReturnStmt@7590..7596
              Return@7590..7596 "return"
          End@7596..7599 "end"
        FuncCall@7599..7624
          BinOp@7599..7615
            Ident@7599..7603
              Ident@7599..7603 "luaK"
            Colon@7603..7604 ":"
            Ident@7604..7615
              Ident@7604..7615 "exp2nextreg"
          FuncArgs@7615..7624
            LParen@7615..7616 "("
            Ident@7616..7618
              Ident@7616..7618 "fs"
            Comma@7618..7619 ","
            BinOp@7619..7623
              Ident@7619..7621
                Ident@7619..7621 "cc"
              Dot@7621..7622 "."
              Ident@7622..7623
                Ident@7622..7623 "v"
            RParen@7623..7624 ")"
        AssignStmt@7624..7638
          BinOp@7624..7630
            BinOp@7624..7628
              Ident@7624..7626
                Ident@7624..7626 "cc"
              Dot@7626..7627 "."
              Ident@7627..7628
                Ident@7627..7628 "v"
            Dot@7628..7629 "."
            Ident@7629..7630
              Ident@7629..7630 "k"
          Assign@7630..7631 "="
          LiteralExpr@7631..7638
            String@7631..7638 "\"VVOID\""
        IfStmt@7638..7736
          If@7638..7640 "if"
          BinOp@7640..7674
            BinOp@7640..7650
              Ident@7640..7642
                Ident@7640..7642 "cc"
              Dot@7642..7643 "."
              Ident@7643..7650
                Ident@7643..7650 "tostore"
            Eq@7650..7652 "=="
            BinOp@7652..7674
              Ident@7652..7656
                Ident@7652..7656 "luaP"
              Dot@7656..7657 "."
              Ident@7657..7674
                Ident@7657..7674 "LFIELDS_PER_FLUSH"
          Then@7674..7678 "then"
          StmtList@7678..7733
            FuncCall@7678..7721
              BinOp@7678..7690
                Ident@7678..7682
                  Ident@7678..7682 "luaK"
                Colon@7682..7683 ":"
                Ident@7683..7690
                  Ident@7683..7690 "setlist"
              FuncArgs@7690..7721
                LParen@7690..7691 "("
                Ident@7691..7693
                  Ident@7691..7693 "fs"
                Comma@7693..7694 ","
                BinOp@7694..7703
                  Ident@7694..7696
                    Ident@7694..7696 "cc"
                  Dot@7696..7697 "."
                  BinOp@7697..7703
                    Ident@7697..7698
                      Ident@7697..7698 "t"
                    Dot@7698..7699 "."
                    Ident@7699..7703
                      Ident@7699..7703 "info"
                Comma@7703..7704 ","
                BinOp@7704..7709
                  Ident@7704..7706
                    Ident@7704..7706 "cc"
                  Dot@7706..7707 "."
                  Ident@7707..7709
                    Ident@7707..7709 "na"
                Comma@7709..7710 ","
                BinOp@7710..7720
                  Ident@7710..7712
                    Ident@7710..7712 "cc"
                  Dot@7712..7713 "."
                  Ident@7713..7720
                    Ident@7713..7720 "tostore"
                RParen@7720..7721 ")"
            AssignStmt@7721..7733
              BinOp@7721..7731
                Ident@7721..7723
                  Ident@7721..7723 "cc"
                Dot@7723..7724 "."
                Ident@7724..7731
                  Ident@7724..7731 "tostore"
              Assign@7731..7732 "="
              LiteralExpr@7732..7733
                Int@7732..7733 "0"
          End@7733..7736 "end"
      End@7736..7739 "end"
  DeclStmt@7739..8012
    Local@7739..7744 "local"
    FuncStmt@7744..8012
      Function@7744..7752 "function"
      Ident@7752..7765
        Ident@7752..7765 "lastlistfield"
      FuncArgs@7765..7772
        LParen@7765..7766 "("
        Ident@7766..7768 "fs"
        Comma@7768..7769 ","
        Ident@7769..7771 "cc"
        RParen@7771..7772 ")"
      StmtList@7772..8009
        IfStmt@7772..7800
          If@7772..7774 "if"
          BinOp@7774..7787
            BinOp@7774..7784
              Ident@7774..7776
                Ident@7774..7776 "cc"
              Dot@7776..7777 "."
              Ident@7777..7784
                Ident@7777..7784 "tostore"
            Eq@7784..7786 "=="
            LiteralExpr@7786..7787
              Int@7786..7787 "0"
          Then@7787..7791 "then"
          StmtList@7791..7797
            ReturnStmt@7791..7797
              Return@7791..7797 "return"
          End@7797..7800 "end"
        IfStmt@7800..8009
          If@7800..7802 "if"
          FuncCall@7802..7820
            Ident@7802..7812
              Ident@7802..7812 "hasmultret"
            FuncArgs@7812..7820
              LParen@7812..7813 "("
              BinOp@7813..7819
                Ident@7813..7815
                  Ident@7813..7815 "cc"
                Dot@7815..7816 "."
                BinOp@7816..7819
                  Ident@7816..7817
                    Ident@7816..7817 "v"
                  Dot@7817..7818 "."
                  Ident@7818..7819
                    Ident@7818..7819 "k"
              RParen@7819..7820 ")"
          Then@7820..7824 "then"
          StmtList@7824..7910
            FuncCall@7824..7848
              BinOp@7824..7839
                Ident@7824..7828
                  Ident@7824..7828 "luaK"
                Colon@7828..7829 ":"
                Ident@7829..7839
                  Ident@7829..7839 "setmultret"
              FuncArgs@7839..7848
                LParen@7839..7840 "("
                Ident@7840..7842
                  Ident@7840..7842 "fs"
                Comma@7842..7843 ","
                BinOp@7843..7847
                  Ident@7843..7845
                    Ident@7843..7845 "cc"
                  Dot@7845..7846 "."
                  Ident@7846..7847
                    Ident@7846..7847 "v"
                RParen@7847..7848 ")"
            FuncCall@7848..7897
              BinOp@7848..7860
                Ident@7848..7852
                  Ident@7848..7852 "luaK"
                Colon@7852..7853 ":"
                Ident@7853..7860
                  Ident@7853..7860 "setlist"
              FuncArgs@7860..7897
                LParen@7860..7861 "("
                Ident@7861..7863
                  Ident@7861..7863 "fs"
                Comma@7863..7864 ","
                BinOp@7864..7873
                  Ident@7864..7866
                    Ident@7864..7866 "cc"
                  Dot@7866..7867 "."
                  BinOp@7867..7873
                    Ident@7867..7868
                      Ident@7867..7868 "t"
                    Dot@7868..7869 "."
                    Ident@7869..7873
                      Ident@7869..7873 "info"
                Comma@7873..7874 ","
                BinOp@7874..7879
                  Ident@7874..7876
                    Ident@7874..7876 "cc"
                  Dot@7876..7877 "."
                  Ident@7877..7879
                    Ident@7877..7879 "na"
                Comma@7879..7880 ","
                BinOp@7880..7896
                  Ident@7880..7884
                    Ident@7880..7884 "luaK"
                  Dot@7884..7885 "."
                  Ident@7885..7896
                    Ident@7885..7896 "LUA_MULTRET"
                RParen@7896..7897 ")"
            AssignStmt@7897..7910
              BinOp@7897..7902
                Ident@7897..7899
                  Ident@7897..7899 "cc"
                Dot@7899..7900 "."
                Ident@7900..7902
                  Ident@7900..7902 "na"
              Assign@7902..7903 "="
              BinOp@7903..7910
                BinOp@7903..7908
                  Ident@7903..7905
                    Ident@7903..7905 "cc"
                  Dot@7905..7906 "."
                  Ident@7906..7908
                    Ident@7906..7908 "na"
                Minus@7908..7909 "-"
                LiteralExpr@7909..7910
                  Int@7909..7910 "1"
          ElseChain@7910..8009
            Else@7910..7914 "else"
            StmtList@7914..8006
              IfStmt@7914..7963
                If@7914..7916 "if"
                BinOp@7916..7931
                  BinOp@7916..7922
                    Ident@7916..7918
                      Ident@7916..7918 "cc"
                    Dot@7918..7919 "."
                    BinOp@7919..7922
                      Ident@7919..7920
                        Ident@7919..7920 "v"
                      Dot@7920..7921 "."
                      Ident@7921..7922
                        Ident@7921..7922 "k"
                  NotEq@7922..7924 "~="
                  LiteralExpr@7924..7931
                    String@7924..7931 "\"VVOID\""
                Then@7931..7935 "then"
                StmtList@7935..7960
                  FuncCall@7935..7960
                    BinOp@7935..7951
                      Ident@7935..7939
                        Ident@7935..7939 "luaK"
                      Colon@7939..7940 ":"
                      Ident@7940..7951
                        Ident@7940..7951 "exp2nextreg"
                    FuncArgs@7951..7960
                      LParen@7951..7952 "("
                      Ident@7952..7954
                        Ident@7952..7954 "fs"
                      Comma@7954..7955 ","
                      BinOp@7955..7959
                        Ident@7955..7957
                          Ident@7955..7957 "cc"
                        Dot@7957..7958 "."
                        Ident@7958..7959
                          Ident@7958..7959 "v"
                      RParen@7959..7960 ")"
                End@7960..7963 "end"
              FuncCall@7963..8006
                BinOp@7963..7975
                  Ident@7963..7967
                    Ident@7963..7967 "luaK"
                  Colon@7967..7968 ":"
                  Ident@7968..7975
                    Ident@7968..7975 "setlist"
                FuncArgs@7975..8006
                  LParen@7975..7976 "("
                  Ident@7976..7978
                    Ident@7976..7978 "fs"
                  Comma@7978..7979 ","
                  BinOp@7979..7988
                    Ident@7979..7981
                      Ident@7979..7981 "cc"
                    Dot@7981..7982 "."
                    BinOp@7982..7988
                      Ident@7982..7983
                        Ident@7982..7983 "t"
                      Dot@7983..7984 "."
                      Ident@7984..7988
                        Ident@7984..7988 "info"
                  Comma@7988..7989 ","
                  BinOp@7989..7994
                    Ident@7989..7991
                      Ident@7989..7991 "cc"
                    Dot@7991..7992 "."
                    Ident@7992..7994
                      Ident@7992..7994 "na"
                  Comma@7994..7995 ","
                  BinOp@7995..8005
                    Ident@7995..7997
                      Ident@7995..7997 "cc"
                    Dot@7997..7998 "."
                    Ident@7998..8005
                      Ident@7998..8005 "tostore"
                  RParen@8005..8006 ")"
            End@8006..8009 "end"
      End@8009..8012 "end"
  FuncStmt@8012..8235
    Function@8012..8020 "function"
    BinOp@8020..8029
      Ident@8020..8024
        Ident@8020..8024 "stat"
      Dot@8024..8025 "."
      Ident@8025..8029
        Ident@8025..8029 "stat"
    FuncArgs@8029..8037
      LParen@8029..8030 "("
      Ident@8030..8032 "fs"
      Comma@8032..8033 ","
      Ident@8033..8036 "ast"
      RParen@8036..8037 ")"
    StmtList@8037..8232
      IfStmt@8037..8092
        If@8037..8039 "if"
        BinOp@8039..8051
          Ident@8039..8042
            Ident@8039..8042 "ast"
          Dot@8042..8043 "."
          Ident@8043..8051
            Ident@8043..8051 "lineinfo"
        Then@8051..8055 "then"
        StmtList@8055..8089
          AssignStmt@8055..8089
            BinOp@8055..8066
              Ident@8055..8057
                Ident@8055..8057 "fs"
              Dot@8057..8058 "."
              Ident@8058..8066
                Ident@8058..8066 "lastline"
            Assign@8066..8067 "="
            BinOp@8067..8089
              Ident@8067..8070
                Ident@8067..8070 "ast"
              Dot@8070..8071 "."
              BinOp@8071..8089
                Ident@8071..8079
                  Ident@8071..8079 "lineinfo"
                Dot@8079..8080 "."
                BinOp@8080..8089
                  Ident@8080..8084
                    Ident@8080..8084 "last"
                  Dot@8084..8085 "."
                  Ident@8085..8089
                    Ident@8085..8089 "line"
        End@8089..8092 "end"
      IfStmt@8092..8232
        If@8092..8094 "if"
        PrefixOp@8094..8104
          Not@8094..8097 "not"
          BinOp@8097..8104
            Ident@8097..8100
              Ident@8097..8100 "ast"
            Dot@8100..8101 "."
            Ident@8101..8104
              Ident@8101..8104 "tag"
        Then@8104..8108 "then"
        StmtList@8108..8121
          FuncCall@8108..8121
            Ident@8108..8113
              Ident@8108..8113 "chunk"
            FuncArgs@8113..8121
              LParen@8113..8114 "("
              Ident@8114..8116
                Ident@8114..8116 "fs"
              Comma@8116..8117 ","
              Ident@8117..8120
                Ident@8117..8120 "ast"
              RParen@8120..8121 ")"
        ElseChain@8121..8232
          Else@8121..8125 "else"
          StmtList@8125..8229
            DeclStmt@8125..8150
              Local@8125..8130 "local"
              DeclTarget@8130..8136
                Ident@8130..8136 "parser"
              Assign@8136..8137 "="
              Index@8137..8150
                Ident@8137..8141
                  Ident@8137..8141 "stat"
                LBracket@8141..8142 "["
                BinOp@8142..8149
                  Ident@8142..8145
                    Ident@8142..8145 "ast"
                  Dot@8145..8146 "."
                  Ident@8146..8149
                    Ident@8146..8149 "tag"
                RBracket@8149..8150 "]"
            IfStmt@8150..8215
              If@8150..8152 "if"
              PrefixOp@8152..8161
                Not@8152..8155 "not"
                Ident@8155..8161
                  Ident@8155..8161 "parser"
              Then@8161..8165 "then"
              StmtList@8165..8212
                FuncCall@8165..8212
                  Ident@8165..8170
                    Ident@8165..8170 "error"
                  FuncArgs@8170..8212
                    LParen@8170..8171 "("
                    BinOp@8171..8211
                      LiteralExpr@8171..8202
                        String@8171..8202 "\"A statement cannot h ..."
                      DDot@8202..8204 ".."
                      BinOp@8204..8211
                        Ident@8204..8207
                          Ident@8204..8207 "ast"
                        Dot@8207..8208 "."
                        Ident@8208..8211
                          Ident@8208..8211 "tag"
                    RParen@8211..8212 ")"
              End@8212..8215 "end"
            FuncCall@8215..8229
              Ident@8215..8221
                Ident@8215..8221 "parser"
              FuncArgs@8221..8229
                LParen@8221..8222 "("
                Ident@8222..8224
                  Ident@8222..8224 "fs"
                Comma@8224..8225 ","
                Ident@8225..8228
                  Ident@8225..8228 "ast"
                RParen@8228..8229 ")"
          End@8229..8232 "end"
    End@8232..8235 "end"
  AssignStmt@8235..8248
    BinOp@8235..8242
      Ident@8235..8239
        Ident@8235..8239 "stat"
      Dot@8239..8240 "."
      Ident@8240..8242
        Ident@8240..8242 "Do"
    Assign@8242..8243 "="
    Ident@8243..8248
      Ident@8243..8248 "block"
  FuncStmt@8248..8515
    Function@8248..8256 "function"
    BinOp@8256..8266
      Ident@8256..8260
        Ident@8256..8260 "stat"
      Dot@8260..8261 "."
      Ident@8261..8266
        Ident@8261..8266 "Break"
    FuncArgs@8266..8274
      LParen@8266..8267 "("
      Ident@8267..8269 "fs"
      Comma@8269..8270 ","
      Ident@8270..8273 "ast"
      RParen@8273..8274 ")"
    StmtList@8274..8512
      DeclStmt@8274..8299
        Local@8274..8279 "local"
        DeclTarget@8279..8281
          Ident@8279..8281 "bl"
        Comma@8281..8282 ","
        DeclTarget@8282..8287
          Ident@8282..8287 "upval"
        Assign@8287..8288 "="
        ExprList@8288..8299
          BinOp@8288..8293
            Ident@8288..8290
              Ident@8288..8290 "fs"
            Dot@8290..8291 "."
            Ident@8291..8293
              Ident@8291..8293 "bl"
          Comma@8293..8294 ","
          LiteralExpr@8294..8299
            False@8294..8299 "false"
      WhileStmt@8299..8372
        While@8299..8304 "while"
        BinOp@8304..8326
          Ident@8304..8306
            Ident@8304..8306 "bl"
          And@8306..8309 "and"
          PrefixOp@8309..8326
            Not@8309..8312 "not"
            BinOp@8312..8326
              Ident@8312..8314
                Ident@8312..8314 "bl"
              Dot@8314..8315 "."
              Ident@8315..8326
                Ident@8315..8326 "isbreakable"
        BlockStmt@8326..8372
          Do@8326..8328 "do"
          StmtList@8328..8369
            IfStmt@8328..8355
              If@8328..8330 "if"
              BinOp@8330..8338
                Ident@8330..8332
                  Ident@8330..8332 "bl"
                Dot@8332..8333 "."
                Ident@8333..8338
                  Ident@8333..8338 "upval"
              Then@8338..8342 "then"
              StmtList@8342..8352
                AssignStmt@8342..8352
                  Ident@8342..8347
                    Ident@8342..8347 "upval"
                  Assign@8347..8348 "="
                  LiteralExpr@8348..8352
                    True@8348..8352 "true"
              End@8352..8355 "end"
            AssignStmt@8355..8369
              Ident@8355..8357
                Ident@8355..8357 "bl"
              Assign@8357..8358 "="
              BinOp@8358..8369
                Ident@8358..8360
                  Ident@8358..8360 "bl"
                Dot@8360..8361 "."
                Ident@8361..8369
                  Ident@8361..8369 "previous"
          End@8369..8372 "end"
      FuncCall@8372..8401
        Ident@8372..8378
          Ident@8372..8378 "assert"
        FuncArgs@8378..8401
          LParen@8378..8379 "("
          Ident@8379..8381
            Ident@8379..8381 "bl"
          Comma@8381..8382 ","
          LiteralExpr@8382..8400
            String@8382..8400 "\"no loop to break\""
          RParen@8400..8401 ")"
      IfStmt@8401..8457
        If@8401..8403 "if"
        Ident@8403..8408
          Ident@8403..8408 "upval"
        Then@8408..8412 "then"
        StmtList@8412..8454
          FuncCall@8412..8454
            BinOp@8412..8424
              Ident@8412..8416
                Ident@8412..8416 "luaK"
              Colon@8416..8417 ":"
              Ident@8417..8424
                Ident@8417..8424 "codeABC"
            FuncArgs@8424..8454
              LParen@8424..8425 "("
              Ident@8425..8427
                Ident@8425..8427 "fs"
              Comma@8427..8428 ","
              LiteralExpr@8428..8438
                String@8428..8438 "\"OP_CLOSE\""
              Comma@8438..8439 ","
              BinOp@8439..8449
                Ident@8439..8441
                  Ident@8439..8441 "bl"
                Dot@8441..8442 "."
                Ident@8442..8449
                  Ident@8442..8449 "nactvar"
              Comma@8449..8450 ","
              LiteralExpr@8450..8451
                Int@8450..8451 "0"
              Comma@8451..8452 ","
              LiteralExpr@8452..8453
                Int@8452..8453 "0"
              RParen@8453..8454 ")"
        End@8454..8457 "end"
      AssignStmt@8457..8512
        BinOp@8457..8469
          Ident@8457..8459
            Ident@8457..8459 "bl"
          Dot@8459..8460 "."
          Ident@8460..8469
            Ident@8460..8469 "breaklist"
        Assign@8469..8470 "="
        FuncCall@8470..8512
          BinOp@8470..8481
            Ident@8470..8474
              Ident@8470..8474 "luaK"
            Colon@8474..8475 ":"
            Ident@8475..8481
              Ident@8475..8481 "concat"
          FuncArgs@8481..8512
            LParen@8481..8482 "("
            Ident@8482..8484
              Ident@8482..8484 "fs"
            Comma@8484..8485 ","
            BinOp@8485..8497
              Ident@8485..8487
                Ident@8485..8487 "bl"
              Dot@8487..8488 "."
              Ident@8488..8497
                Ident@8488..8497 "breaklist"
            Comma@8497..8498 ","
            FuncCall@8498..8511
              BinOp@8498..8507
                Ident@8498..8502
                  Ident@8498..8502 "luaK"
                Colon@8502..8503 ":"
                Ident@8503..8507
                  Ident@8503..8507 "jump"
              FuncArgs@8507..8511
                LParen@8507..8508 "("
                Ident@8508..8510
                  Ident@8508..8510 "fs"
                RParen@8510..8511 ")"
            RParen@8511..8512 ")"
    End@8512..8515 "end"
  FuncStmt@8515..8976
    Function@8515..8523 "function"
    BinOp@8523..8534
      Ident@8523..8527
        Ident@8523..8527 "stat"
      Dot@8527..8528 "."
      Ident@8528..8534
        Ident@8528..8534 "Return"
    FuncArgs@8534..8542
      LParen@8534..8535 "("
      Ident@8535..8537 "fs"
      Comma@8537..8538 ","
      Ident@8538..8541 "ast"
      RParen@8541..8542 ")"
    StmtList@8542..8973
      DeclStmt@8542..8551
        Local@8542..8547 "local"
        DeclTarget@8547..8548
          Ident@8547..8548 "e"
        Assign@8548..8549 "="
        TableExpr@8549..8551
          LCurly@8549..8550 "{"
          RCurly@8550..8551 "}"
      DeclStmt@8551..8561
        Local@8551..8556 "local"
        DeclTarget@8556..8561
          Ident@8556..8561 "first"
      DeclStmt@8561..8575
        Local@8561..8566 "local"
        DeclTarget@8566..8570
          Ident@8566..8570 "nret"
        Assign@8570..8571 "="
        PrefixOp@8571..8575
          Hash@8571..8572 "#"
          Ident@8572..8575
            Ident@8572..8575 "ast"
      IfStmt@8575..8950
        If@8575..8577 "if"
        BinOp@8577..8584
          Ident@8577..8581
            Ident@8577..8581 "nret"
          Eq@8581..8583 "=="
          LiteralExpr@8583..8584
            Int@8583..8584 "0"
        Then@8584..8588 "then"
        StmtList@8588..8595
          AssignStmt@8588..8595
            Ident@8588..8593
              Ident@8588..8593 "first"
            Assign@8593..8594 "="
            LiteralExpr@8594..8595
              Int@8594..8595 "0"
        ElseChain@8595..8950
          Else@8595..8599 "else"
          StmtList@8599..8947
            FuncCall@8599..8616
              Ident@8599..8606
                Ident@8599..8606 "explist"
              FuncArgs@8606..8616
                LParen@8606..8607 "("
                Ident@8607..8609
                  Ident@8607..8609 "fs"
                Comma@8609..8610 ","
                Ident@8610..8613
                  Ident@8610..8613 "ast"
                Comma@8613..8614 ","
                Ident@8614..8615
                  Ident@8614..8615 "e"
                RParen@8615..8616 ")"
            IfStmt@8616..8947
              If@8616..8618 "if"
              FuncCall@8618..8633
                Ident@8618..8628
                  Ident@8618..8628 "hasmultret"
                FuncArgs@8628..8633
                  LParen@8628..8629 "("
                  BinOp@8629..8632
                    Ident@8629..8630
                      Ident@8629..8630 "e"
                    Dot@8630..8631 "."
                    Ident@8631..8632
                      Ident@8631..8632 "k"
                  RParen@8632..8633 ")"
              Then@8633..8637 "then"
              StmtList@8637..8828
                FuncCall@8637..8658
                  BinOp@8637..8652
                    Ident@8637..8641
                      Ident@8637..8641 "luaK"
                    Colon@8641..8642 ":"
                    Ident@8642..8652
                      Ident@8642..8652 "setmultret"
                  FuncArgs@8652..8658
                    LParen@8652..8653 "("
                    Ident@8653..8655
                      Ident@8653..8655 "fs"
                    Comma@8655..8656 ","
                    Ident@8656..8657
                      Ident@8656..8657 "e"
                    RParen@8657..8658 ")"
                IfStmt@8658..8791
                  If@8658..8660 "if"
                  BinOp@8660..8682
                    BinOp@8660..8672
                      BinOp@8660..8663
                        Ident@8660..8661
                          Ident@8660..8661 "e"
                        Dot@8661..8662 "."
                        Ident@8662..8663
                          Ident@8662..8663 "k"
                      Eq@8663..8665 "=="
                      LiteralExpr@8665..8672
                        String@8665..8672 "\"VCALL\""
                    And@8672..8675 "and"
                    BinOp@8675..8682
                      Ident@8675..8679
                        Ident@8675..8679 "nret"
                      Eq@8679..8681 "=="
                      LiteralExpr@8681..8682
                        Int@8681..8682 "1"
                  Then@8682..8686 "then"
                  StmtList@8686..8788
                    FuncCall@8686..8735
                      BinOp@8686..8701
                        Ident@8686..8690
                          Ident@8686..8690 "luaP"
                        Colon@8690..8691 ":"
                        Ident@8691..8701
                          Ident@8691..8701 "SET_OPCODE"
                      FuncArgs@8701..8735
                        LParen@8701..8702 "("
                        FuncCall@8702..8720
                          BinOp@8702..8714
                            Ident@8702..8706
                              Ident@8702..8706 "luaK"
                            Colon@8706..8707 ":"
                            Ident@8707..8714
                              Ident@8707..8714 "getcode"
                          FuncArgs@8714..8720
                            LParen@8714..8715 "("
                            Ident@8715..8717
                              Ident@8715..8717 "fs"
                            Comma@8717..8718 ","
                            Ident@8718..8719
                              Ident@8718..8719 "e"
                            RParen@8719..8720 ")"
                        Comma@8720..8721 ","
                        LiteralExpr@8721..8734
                          String@8721..8734 "\"OP_TAILCALL\""
                        RParen@8734..8735 ")"
                    FuncCall@8735..8788
                      Ident@8735..8741
                        Ident@8735..8741 "assert"
                      FuncArgs@8741..8788
                        LParen@8741..8742 "("
                        BinOp@8742..8787
                          FuncCall@8742..8775
                            BinOp@8742..8755
                              Ident@8742..8746
                                Ident@8742..8746 "luaP"
                              Colon@8746..8747 ":"
                              Ident@8747..8755
                                Ident@8747..8755 "GETARG_A"
                            FuncArgs@8755..8775
                              LParen@8755..8756 "("
                              FuncCall@8756..8774
                                BinOp@8756..8768
                                  Ident@8756..8760
                                    Ident@8756..8760 "luaK"
                                  Colon@8760..8761 ":"
                                  Ident@8761..8768
                                    Ident@8761..8768 "getcode"
                                FuncArgs@8768..8774
                                  LParen@8768..8769 "("
                                  Ident@8769..8771
                                    Ident@8769..8771 "fs"
                                  Comma@8771..8772 ","
                                  Ident@8772..8773
                                    Ident@8772..8773 "e"
                                  RParen@8773..8774 ")"
                              RParen@8774..8775 ")"
                          Eq@8775..8777 "=="
                          BinOp@8777..8787
                            Ident@8777..8779
                              Ident@8777..8779 "fs"
                            Dot@8779..8780 "."
                            Ident@8780..8787
                              Ident@8780..8787 "nactvar"
                        RParen@8787..8788 ")"
                  End@8788..8791 "end"
                AssignStmt@8791..8807
                  Ident@8791..8796
                    Ident@8791..8796 "first"
                  Assign@8796..8797 "="
                  BinOp@8797..8807
                    Ident@8797..8799
                      Ident@8797..8799 "fs"
                    Dot@8799..8800 "."
                    Ident@8800..8807
                      Ident@8800..8807 "nactvar"
                AssignStmt@8807..8828
                  Ident@8807..8811
                    Ident@8807..8811 "nret"
                  Assign@8811..8812 "="
                  BinOp@8812..8828
                    Ident@8812..8816
                      Ident@8812..8816 "luaK"
                    Dot@8816..8817 "."
                    Ident@8817..8828
                      Ident@8817..8828 "LUA_MULTRET"
              ElseChain@8828..8947
                IfStmt@8828..8947
                  ElseIf@8828..8834 "elseif"
                  BinOp@8834..8841
                    Ident@8834..8838
                      Ident@8834..8838 "nret"
                    Eq@8838..8840 "=="
                    LiteralExpr@8840..8841
                      Int@8840..8841 "1"
                  Then@8841..8845 "then"
                  StmtList@8845..8872
                    AssignStmt@8845..8872
                      Ident@8845..8850
                        Ident@8845..8850 "first"
                      Assign@8850..8851 "="
                      FuncCall@8851..8872
                        BinOp@8851..8866
                          Ident@8851..8855
                            Ident@8851..8855 "luaK"
                          Colon@8855..8856 ":"
                          Ident@8856..8866
                            Ident@8856..8866 "exp2anyreg"
                        FuncArgs@8866..8872
                          LParen@8866..8867 "("
                          Ident@8867..8869
                            Ident@8867..8869 "fs"
                          Comma@8869..8870 ","
                          Ident@8870..8871
                            Ident@8870..8871 "e"
                          RParen@8871..8872 ")"
                  ElseChain@8872..8947
                    Else@8872..8876 "else"
                    StmtList@8876..8944
                      FuncCall@8876..8898
                        BinOp@8876..8892
                          Ident@8876..8880
                            Ident@8876..8880 "luaK"
                          Colon@8880..8881 ":"
                          Ident@8881..8892
                            Ident@8881..8892 "exp2nextreg"
                        FuncArgs@8892..8898
                          LParen@8892..8893 "("
                          Ident@8893..8895
                            Ident@8893..8895 "fs"
                          Comma@8895..8896 ","
                          Ident@8896..8897
                            Ident@8896..8897 "e"
                          RParen@8897..8898 ")"
                      AssignStmt@8898..8914
                        Ident@8898..8903
                          Ident@8898..8903 "first"
                        Assign@8903..8904 "="
                        BinOp@8904..8914
                          Ident@8904..8906
                            Ident@8904..8906 "fs"
                          Dot@8906..8907 "."
                          Ident@8907..8914
                            Ident@8907..8914 "nactvar"
                      FuncCall@8914..8944
                        Ident@8914..8920
                          Ident@8914..8920 "assert"
                        FuncArgs@8920..8944
                          LParen@8920..8921 "("
                          BinOp@8921..8943
                            Ident@8921..8925
                              Ident@8921..8925 "nret"
                            Eq@8925..8927 "=="
                            BinOp@8927..8943
                              BinOp@8927..8937
                                Ident@8927..8929
                                  Ident@8927..8929 "fs"
                                Dot@8929..8930 "."
                                Ident@8930..8937
                                  Ident@8930..8937 "freereg"
                              Minus@8937..8938 "-"
                              Ident@8938..8943
                                Ident@8938..8943 "first"
                          RParen@8943..8944 ")"
                    End@8944..8947 "end"
          End@8947..8950 "end"
      FuncCall@8950..8973
        BinOp@8950..8958
          Ident@8950..8954
            Ident@8950..8954 "luaK"
          Colon@8954..8955 ":"
          Ident@8955..8958
            Ident@8955..8958 "ret"
        FuncArgs@8958..8973
          LParen@8958..8959 "("
          Ident@8959..8961
            Ident@8959..8961 "fs"
          Comma@8961..8962 ","
          Ident@8962..8967
            Ident@8962..8967 "first"
          Comma@8967..8968 ","
          Ident@8968..8972
            Ident@8968..8972 "nret"
          RParen@8972..8973 ")"
    End@8973..8976 "end"
  FuncStmt@8976..9213
    Function@8976..8984 "function"
    BinOp@8984..8994
      Ident@8984..8988
        Ident@8984..8988 "stat"
      Dot@8988..8989 "."
      Ident@8989..8994
        Ident@8989..8994 "Local"
    FuncArgs@8994..9002
      LParen@8994..8995 "("
      Ident@8995..8997 "fs"
      Comma@8997..8998 ","
      Ident@8998..9001 "ast"
      RParen@9001..9002 ")"
    StmtList@9002..9210
      DeclStmt@9002..9037
        Local@9002..9007 "local"
        DeclTarget@9007..9012
          Ident@9007..9012 "names"
        Comma@9012..9013 ","
        DeclTarget@9013..9019
          Ident@9013..9019 "values"
        Assign@9019..9020 "="
        ExprList@9020..9037
          Index@9020..9026
            Ident@9020..9023
              Ident@9020..9023 "ast"
            LBracket@9023..9024 "["
            LiteralExpr@9024..9025
              Int@9024..9025 "1"
            RBracket@9025..9026 "]"
          Comma@9026..9027 ","
          BinOp@9027..9037
            Index@9027..9033
              Ident@9027..9030
                Ident@9027..9030 "ast"
              LBracket@9030..9031 "["
              LiteralExpr@9031..9032
                Int@9031..9032 "2"
              RBracket@9032..9033 "]"
            Or@9033..9035 "or"
            TableExpr@9035..9037
              LCurly@9035..9036 "{"
              RCurly@9036..9037 "}"
      ForNumStmt@9037..9087
        For@9037..9040 "for"
        Ident@9040..9041 "i"
        Assign@9041..9042 "="
        LiteralExpr@9042..9043
          Int@9042..9043 "1"
        Comma@9043..9044 ","
        PrefixOp@9044..9050
          Hash@9044..9045 "#"
          Ident@9045..9050
            Ident@9045..9050 "names"
        BlockStmt@9050..9087
          Do@9050..9052 "do"
          StmtList@9052..9084
            FuncCall@9052..9084
              Ident@9052..9064
                Ident@9052..9064 "new_localvar"
              FuncArgs@9064..9084
                LParen@9064..9065 "("
                Ident@9065..9067
                  Ident@9065..9067 "fs"
                Comma@9067..9068 ","
                Index@9068..9079
                  Index@9068..9076
                    Ident@9068..9073
                      Ident@9068..9073 "names"
                    LBracket@9073..9074 "["
                    Ident@9074..9075
                      Ident@9074..9075 "i"
                    RBracket@9075..9076 "]"
                  LBracket@9076..9077 "["
                  LiteralExpr@9077..9078
                    Int@9077..9078 "1"
                  RBracket@9078..9079 "]"
                Comma@9079..9080 ","
                BinOp@9080..9083
                  Ident@9080..9081
                    Ident@9080..9081 "i"
                  Minus@9081..9082 "-"
                  LiteralExpr@9082..9083
                    Int@9082..9083 "1"
                RParen@9083..9084 ")"
          End@9084..9087 "end"
      DeclStmt@9087..9096
        Local@9087..9092 "local"
        DeclTarget@9092..9093
          Ident@9092..9093 "e"
        Assign@9093..9094 "="
        TableExpr@9094..9096
          LCurly@9094..9095 "{"
          RCurly@9095..9096 "}"
      IfStmt@9096..9150
        If@9096..9098 "if"
        BinOp@9098..9108
          PrefixOp@9098..9105
            Hash@9098..9099 "#"
            Ident@9099..9105
              Ident@9099..9105 "values"
          Eq@9105..9107 "=="
          LiteralExpr@9107..9108
            Int@9107..9108 "0"
        Then@9108..9112 "then"
        StmtList@9112..9123
          AssignStmt@9112..9123
            BinOp@9112..9115
              Ident@9112..9113
                Ident@9112..9113 "e"
              Dot@9113..9114 "."
              Ident@9114..9115
                Ident@9114..9115 "k"
            Assign@9115..9116 "="
            LiteralExpr@9116..9123
              String@9116..9123 "\"VVOID\""
        ElseChain@9123..9150
          Else@9123..9127 "else"
          StmtList@9127..9147
            FuncCall@9127..9147
              Ident@9127..9134
                Ident@9127..9134 "explist"
              FuncArgs@9134..9147
                LParen@9134..9135 "("
                Ident@9135..9137
                  Ident@9135..9137 "fs"
                Comma@9137..9138 ","
                Ident@9138..9144
                  Ident@9138..9144 "values"
                Comma@9144..9145 ","
                Ident@9145..9146
                  Ident@9145..9146 "e"
                RParen@9146..9147 ")"
          End@9147..9150 "end"
      FuncCall@9150..9184
        Ident@9150..9163
          Ident@9150..9163 "adjust_assign"
        FuncArgs@9163..9184
          LParen@9163..9164 "("
          Ident@9164..9166
            Ident@9164..9166 "fs"
          Comma@9166..9167 ","
          PrefixOp@9167..9173
            Hash@9167..9168 "#"
            Ident@9168..9173
              Ident@9168..9173 "names"
          Comma@9173..9174 ","
          PrefixOp@9174..9181
            Hash@9174..9175 "#"
            Ident@9175..9181
              Ident@9175..9181 "values"
          Comma@9181..9182 ","
          Ident@9182..9183
            Ident@9182..9183 "e"
          RParen@9183..9184 ")"
      FuncCall@9184..9210
        Ident@9184..9199
          Ident@9184..9199 "adjustlocalvars"
        FuncArgs@9199..9210
          LParen@9199..9200 "("
          Ident@9200..9202
            Ident@9200..9202 "fs"
          Comma@9202..9203 ","
          PrefixOp@9203..9209
            Hash@9203..9204 "#"
            Ident@9204..9209
              Ident@9204..9209 "names"
          RParen@9209..9210 ")"
    End@9210..9213 "end"
  FuncStmt@9213..9576
    Function@9213..9221 "function"
    BinOp@9221..9234
      Ident@9221..9225
        Ident@9221..9225 "stat"
      Dot@9225..9226 "."
      Ident@9226..9234
        Ident@9226..9234 "Localrec"
    FuncArgs@9234..9242
      LParen@9234..9235 "("
      Ident@9235..9237 "fs"
      Comma@9237..9238 ","
      Ident@9238..9241 "ast"
      RParen@9241..9242 ")"
    StmtList@9242..9573
      FuncCall@9242..9312
        Ident@9242..9248
          Ident@9242..9248 "assert"
        FuncArgs@9248..9312
          LParen@9248..9249 "("
          BinOp@9249..9272
            BinOp@9249..9259
              PrefixOp@9249..9256
                Hash@9249..9250 "#"
                Index@9250..9256
                  Ident@9250..9253
                    Ident@9250..9253 "ast"
                  LBracket@9253..9254 "["
                  LiteralExpr@9254..9255
                    Int@9254..9255 "1"
                  RBracket@9255..9256 "]"
              Eq@9256..9258 "=="
              LiteralExpr@9258..9259
                Int@9258..9259 "1"
            And@9259..9262 "and"
            BinOp@9262..9272
              PrefixOp@9262..9269
                Hash@9262..9263 "#"
                Index@9263..9269
                  Ident@9263..9266
                    Ident@9263..9266 "ast"
                  LBracket@9266..9267 "["
                  LiteralExpr@9267..9268
                    Int@9267..9268 "2"
                  RBracket@9268..9269 "]"
              Eq@9269..9271 "=="
              LiteralExpr@9271..9272
                Int@9271..9272 "1"
          Comma@9272..9273 ","
          LiteralExpr@9273..9311
            String@9273..9311 "\"Multiple letrecs not ..."
          RParen@9311..9312 ")"
      DeclStmt@9312..9370
        Local@9312..9317 "local"
        DeclTarget@9317..9324
          Ident@9317..9324 "ast_var"
        Comma@9324..9325 ","
        DeclTarget@9325..9332
          Ident@9325..9332 "ast_val"
        Comma@9332..9333 ","
        DeclTarget@9333..9338
          Ident@9333..9338 "e_var"
        Comma@9338..9339 ","
        DeclTarget@9339..9344
          Ident@9339..9344 "e_val"
        Assign@9344..9345 "="
        ExprList@9345..9370
          Index@9345..9354
            Index@9345..9351
              Ident@9345..9348
                Ident@9345..9348 "ast"
              LBracket@9348..9349 "["
              LiteralExpr@9349..9350
                Int@9349..9350 "1"
              RBracket@9350..9351 "]"
            LBracket@9351..9352 "["
            LiteralExpr@9352..9353
              Int@9352..9353 "1"
            RBracket@9353..9354 "]"
          Comma@9354..9355 ","
          Index@9355..9364
            Index@9355..9361
              Ident@9355..9358
                Ident@9355..9358 "ast"
              LBracket@9358..9359 "["
              LiteralExpr@9359..9360
                Int@9359..9360 "2"
              RBracket@9360..9361 "]"
            LBracket@9361..9362 "["
            LiteralExpr@9362..9363
              Int@9362..9363 "1"
            RBracket@9363..9364 "]"
          Comma@9364..9365 ","
          TableExpr@9365..9367
            LCurly@9365..9366 "{"
            RCurly@9366..9367 "}"
          Comma@9367..9368 ","
          TableExpr@9368..9370
            LCurly@9368..9369 "{"
            RCurly@9369..9370 "}"
      FuncCall@9370..9399
        Ident@9370..9382
          Ident@9370..9382 "new_localvar"
        FuncArgs@9382..9399
          LParen@9382..9383 "("
          Ident@9383..9385
            Ident@9383..9385 "fs"
          Comma@9385..9386 ","
          Index@9386..9396
            Ident@9386..9393
              Ident@9386..9393 "ast_var"
            LBracket@9393..9394 "["
            LiteralExpr@9394..9395
              Int@9394..9395 "1"
            RBracket@9395..9396 "]"
          Comma@9396..9397 ","
          LiteralExpr@9397..9398
            Int@9397..9398 "0"
          RParen@9398..9399 ")"
      FuncCall@9399..9434
        Ident@9399..9407
          Ident@9399..9407 "init_exp"
        FuncArgs@9407..9434
          LParen@9407..9408 "("
          Ident@9408..9413
            Ident@9408..9413 "e_var"
          Comma@9413..9414 ","
          LiteralExpr@9414..9422
            String@9414..9422 "\"VLOCAL\""
          Comma@9422..9423 ","
          BinOp@9423..9433
            Ident@9423..9425
              Ident@9423..9425 "fs"
            Dot@9425..9426 "."
            Ident@9426..9433
              Ident@9426..9433 "freereg"
          RParen@9433..9434 ")"
      FuncCall@9434..9456
        BinOp@9434..9450
          Ident@9434..9438
            Ident@9434..9438 "luaK"
          Colon@9438..9439 ":"
          Ident@9439..9450
            Ident@9439..9450 "reserveregs"
        FuncArgs@9450..9456
          LParen@9450..9451 "("
          Ident@9451..9453
            Ident@9451..9453 "fs"
          Comma@9453..9454 ","
          LiteralExpr@9454..9455
            Int@9454..9455 "1"
          RParen@9455..9456 ")"
      FuncCall@9456..9477
        Ident@9456..9471
          Ident@9456..9471 "adjustlocalvars"
        FuncArgs@9471..9477
          LParen@9471..9472 "("
          Ident@9472..9474
            Ident@9472..9474 "fs"
          Comma@9474..9475 ","
          LiteralExpr@9475..9476
            Int@9475..9476 "1"
          RParen@9476..9477 ")"
      FuncCall@9477..9504
        BinOp@9477..9486
          Ident@9477..9481
            Ident@9477..9481 "expr"
          Dot@9481..9482 "."
          Ident@9482..9486
            Ident@9482..9486 "expr"
        FuncArgs@9486..9504
          LParen@9486..9487 "("
          Ident@9487..9489
            Ident@9487..9489 "fs"
          Comma@9489..9490 ","
          Ident@9490..9497
            Ident@9490..9497 "ast_val"
          Comma@9497..9498 ","
          Ident@9498..9503
            Ident@9498..9503 "e_val"
          RParen@9503..9504 ")"
      FuncCall@9504..9533
        BinOp@9504..9517
          Ident@9504..9508
            Ident@9504..9508 "luaK"
          Colon@9508..9509 ":"
          Ident@9509..9517
            Ident@9509..9517 "storevar"
        FuncArgs@9517..9533
          LParen@9517..9518 "("
          Ident@9518..9520
            Ident@9518..9520 "fs"
          Comma@9520..9521 ","
          Ident@9521..9526
            Ident@9521..9526 "e_var"
          Comma@9526..9527 ","
          Ident@9527..9532
            Ident@9527..9532 "e_val"
          RParen@9532..9533 ")"
      AssignStmt@9533..9573
        BinOp@9533..9567
          FuncCall@9533..9559
            Ident@9533..9542
              Ident@9533..9542 "getlocvar"
            FuncArgs@9542..9559
              LParen@9542..9543 "("
              Ident@9543..9545
                Ident@9543..9545 "fs"
              Comma@9545..9546 ","
              BinOp@9546..9558
                BinOp@9546..9556
                  Ident@9546..9548
                    Ident@9546..9548 "fs"
                  Dot@9548..9549 "."
                  Ident@9549..9556
                    Ident@9549..9556 "nactvar"
                Minus@9556..9557 "-"
                LiteralExpr@9557..9558
                  Int@9557..9558 "1"
              RParen@9558..9559 ")"
          Dot@9559..9560 "."
          Ident@9560..9567
            Ident@9560..9567 "startpc"
        Assign@9567..9568 "="
        BinOp@9568..9573
          Ident@9568..9570
            Ident@9568..9570 "fs"
          Dot@9570..9571 "."
          Ident@9571..9573
            Ident@9571..9573 "pc"
    End@9573..9576 "end"
  FuncStmt@9576..10197
    Function@9576..9584 "function"
    BinOp@9584..9591
      Ident@9584..9588
        Ident@9584..9588 "stat"
      Dot@9588..9589 "."
      Ident@9589..9591
        Ident@9589..9591 "If"
    FuncArgs@9591..9599
      LParen@9591..9592 "("
      Ident@9592..9594 "fs"
      Comma@9594..9595 ","
      Ident@9595..9598 "ast"
      RParen@9598..9599 ")"
    StmtList@9599..10194
      DeclStmt@9599..9615
        Local@9599..9604 "local"
        DeclTarget@9604..9610
          Ident@9604..9610 "astlen"
        Assign@9610..9611 "="
        PrefixOp@9611..9615
          Hash@9611..9612 "#"
          Ident@9612..9615
            Ident@9612..9615 "ast"
      IfStmt@9615..9651
        If@9615..9617 "if"
        BinOp@9617..9626
          Ident@9617..9623
            Ident@9617..9623 "astlen"
          Eq@9623..9625 "=="
          LiteralExpr@9625..9626
            Int@9625..9626 "0"
        Then@9626..9630 "then"
        StmtList@9630..9648
          ReturnStmt@9630..9648
            Return@9630..9636 "return"
            FuncCall@9636..9648
              Ident@9636..9641
                Ident@9636..9641 "block"
              FuncArgs@9641..9648
                LParen@9641..9642 "("
                Ident@9642..9644
                  Ident@9642..9644 "fs"
                Comma@9644..9645 ","
                TableExpr@9645..9647
                  LCurly@9645..9646 "{"
                  RCurly@9646..9647 "}"
                RParen@9647..9648 ")"
        End@9648..9651 "end"
      IfStmt@9651..9691
        If@9651..9653 "if"
        BinOp@9653..9662
          Ident@9653..9659
            Ident@9653..9659 "astlen"
          Eq@9659..9661 "=="
          LiteralExpr@9661..9662
            Int@9661..9662 "1"
        Then@9662..9666 "then"
        StmtList@9666..9688
          ReturnStmt@9666..9688
            Return@9666..9672 "return"
            FuncCall@9672..9688
              Ident@9672..9677
                Ident@9672..9677 "block"
              FuncArgs@9677..9688
                LParen@9677..9678 "("
                Ident@9678..9680
                  Ident@9678..9680 "fs"
                Comma@9680..9681 ","
                Index@9681..9687
                  Ident@9681..9684
                    Ident@9681..9684 "ast"
                  LBracket@9684..9685 "["
                  LiteralExpr@9685..9686
                    Int@9685..9686 "1"
                  RBracket@9686..9687 "]"
                RParen@9687..9688 ")"
        End@9688..9691 "end"
      DeclStmt@9691..9792
        Local@9691..9696 "local"
        FuncStmt@9696..9792
          Function@9696..9704 "function"
          Ident@9704..9719
            Ident@9704..9719 "test_then_block"
          FuncArgs@9719..9733
            LParen@9719..9720 "("
            Ident@9720..9722 "fs"
            Comma@9722..9723 ","
            Ident@9723..9727 "test"
            Comma@9727..9728 ","
            Ident@9728..9732 "body"
            RParen@9732..9733 ")"
          StmtList@9733..9789
            DeclStmt@9733..9760
              Local@9733..9738 "local"
              DeclTarget@9738..9746
                Ident@9738..9746 "condexit"
              Assign@9746..9747 "="
              FuncCall@9747..9760
                Ident@9747..9751
                  Ident@9747..9751 "cond"
                FuncArgs@9751..9760
                  LParen@9751..9752 "("
                  Ident@9752..9754
                    Ident@9752..9754 "fs"
                  Comma@9754..9755 ","
                  Ident@9755..9759
                    Ident@9755..9759 "test"
                  RParen@9759..9760 ")"
            Semicolon@9760..9761
              Semicolon@9760..9761 ";"
            FuncCall@9761..9775
              Ident@9761..9766
                Ident@9761..9766 "block"
              FuncArgs@9766..9775
                LParen@9766..9767 "("
                Ident@9767..9769
                  Ident@9767..9769 "fs"
                Comma@9769..9770 ","
                Ident@9770..9774
                  Ident@9770..9774 "body"
                RParen@9774..9775 ")"
            ReturnStmt@9775..9789
              Return@9775..9781 "return"
              Ident@9781..9789
                Ident@9781..9789 "condexit"
          End@9789..9792 "end"
      DeclStmt@9792..9820
        Local@9792..9797 "local"
        DeclTarget@9797..9807
          Ident@9797..9807 "escapelist"
        Assign@9807..9808 "="
        BinOp@9808..9820
          Ident@9808..9812
            Ident@9808..9812 "luaK"
          Dot@9812..9813 "."
          Ident@9813..9820
            Ident@9813..9820 "NO_JUMP"
      DeclStmt@9820..9864
        Local@9820..9825 "local"
        DeclTarget@9825..9830
          Ident@9825..9830 "flist"
        Assign@9830..9831 "="
        FuncCall@9831..9864
          Ident@9831..9846
            Ident@9831..9846 "test_then_block"
          FuncArgs@9846..9864
            LParen@9846..9847 "("
            Ident@9847..9849
              Ident@9847..9849 "fs"
            Comma@9849..9850 ","
            Index@9850..9856
              Ident@9850..9853
                Ident@9850..9853 "ast"
              LBracket@9853..9854 "["
              LiteralExpr@9854..9855
                Int@9854..9855 "1"
              RBracket@9855..9856 "]"
            Comma@9856..9857 ","
            Index@9857..9863
              Ident@9857..9860
                Ident@9857..9860 "ast"
              LBracket@9860..9861 "["
              LiteralExpr@9861..9862
                Int@9861..9862 "2"
              RBracket@9862..9863 "]"
            RParen@9863..9864 ")"
      ForNumStmt@9864..10002
        For@9864..9867 "for"
        Ident@9867..9868 "i"
        Assign@9868..9869 "="
        LiteralExpr@9869..9870
          Int@9869..9870 "3"
        Comma@9870..9871 ","
        BinOp@9871..9877
          PrefixOp@9871..9875
            Hash@9871..9872 "#"
            Ident@9872..9875
              Ident@9872..9875 "ast"
          Minus@9875..9876 "-"
          LiteralExpr@9876..9877
            Int@9876..9877 "1"
        Comma@9877..9878 ","
        LiteralExpr@9878..9879
          Int@9878..9879 "2"
        BlockStmt@9879..10002
          Do@9879..9881 "do"
          StmtList@9881..9999
            AssignStmt@9881..9932
              Ident@9881..9891
                Ident@9881..9891 "escapelist"
              Assign@9891..9892 "="
              FuncCall@9892..9932
                BinOp@9892..9903
                  Ident@9892..9896
                    Ident@9892..9896 "luaK"
                  Colon@9896..9897 ":"
                  Ident@9897..9903
                    Ident@9897..9903 "concat"
                FuncArgs@9903..9932
                  LParen@9903..9904 "("
                  Ident@9904..9906
                    Ident@9904..9906 "fs"
                  Comma@9906..9907 ","
                  Ident@9907..9917
                    Ident@9907..9917 "escapelist"
                  Comma@9917..9918 ","
                  FuncCall@9918..9931
                    BinOp@9918..9927
                      Ident@9918..9922
                        Ident@9918..9922 "luaK"
                      Colon@9922..9923 ":"
                      Ident@9923..9927
                        Ident@9923..9927 "jump"
                    FuncArgs@9927..9931
                      LParen@9927..9928 "("
                      Ident@9928..9930
                        Ident@9928..9930 "fs"
                      RParen@9930..9931 ")"
                  RParen@9931..9932 ")"
            FuncCall@9932..9958
              BinOp@9932..9948
                Ident@9932..9936
                  Ident@9932..9936 "luaK"
                Colon@9936..9937 ":"
                Ident@9937..9948
                  Ident@9937..9948 "patchtohere"
              FuncArgs@9948..9958
                LParen@9948..9949 "("
                Ident@9949..9951
                  Ident@9949..9951 "fs"
                Comma@9951..9952 ","
                Ident@9952..9957
                  Ident@9952..9957 "flist"
                RParen@9957..9958 ")"
            AssignStmt@9958..9999
              Ident@9958..9963
                Ident@9958..9963 "flist"
              Assign@9963..9964 "="
              FuncCall@9964..9999
                Ident@9964..9979
                  Ident@9964..9979 "test_then_block"
                FuncArgs@9979..9999
                  LParen@9979..9980 "("
                  Ident@9980..9982
                    Ident@9980..9982 "fs"
                  Comma@9982..9983 ","
                  Index@9983..9989
                    Ident@9983..9986
                      Ident@9983..9986 "ast"
                    LBracket@9986..9987 "["
                    Ident@9987..9988
                      Ident@9987..9988 "i"
                    RBracket@9988..9989 "]"
                  Comma@9989..9990 ","
                  Index@9990..9998
                    Ident@9990..9993
                      Ident@9990..9993 "ast"
                    LBracket@9993..9994 "["
                    BinOp@9994..9997
                      Ident@9994..9995
                        Ident@9994..9995 "i"
                      Plus@9995..9996 "+"
                      LiteralExpr@9996..9997
                        Int@9996..9997 "1"
                    RBracket@9997..9998 "]"
                  RParen@9998..9999 ")"
          End@9999..10002 "end"
      IfStmt@10002..10163
        If@10002..10004 "if"
        BinOp@10004..10013
          BinOp@10004..10010
            PrefixOp@10004..10008
              Hash@10004..10005 "#"
              Ident@10005..10008
                Ident@10005..10008 "ast"
            Percent@10008..10009 "%"
            LiteralExpr@10009..10010
              Int@10009..10010 "2"
          Eq@10010..10012 "=="
          LiteralExpr@10012..10013
            Int@10012..10013 "1"
        Then@10013..10017 "then"
        StmtList@10017..10113
          AssignStmt@10017..10068
            Ident@10017..10027
              Ident@10017..10027 "escapelist"
            Assign@10027..10028 "="
            FuncCall@10028..10068
              BinOp@10028..10039
                Ident@10028..10032
                  Ident@10028..10032 "luaK"
                Colon@10032..10033 ":"
                Ident@10033..10039
                  Ident@10033..10039 "concat"
              FuncArgs@10039..10068
                LParen@10039..10040 "("
                Ident@10040..10042
                  Ident@10040..10042 "fs"
                Comma@10042..10043 ","
                Ident@10043..10053
                  Ident@10043..10053 "escapelist"
                Comma@10053..10054 ","
                FuncCall@10054..10067
                  BinOp@10054..10063
                    Ident@10054..10058
                      Ident@10054..10058 "luaK"
                    Colon@10058..10059 ":"
                    Ident@10059..10063
                      Ident@10059..10063 "jump"
                  FuncArgs@10063..10067
                    LParen@10063..10064 "("
                    Ident@10064..10066
                      Ident@10064..10066 "fs"
                    RParen@10066..10067 ")"
                RParen@10067..10068 ")"
          FuncCall@10068..10094
            BinOp@10068..10084
              Ident@10068..10072
                Ident@10068..10072 "luaK"
              Colon@10072..10073 ":"
              Ident@10073..10084
                Ident@10073..10084 "patchtohere"
            FuncArgs@10084..10094
              LParen@10084..10085 "("
              Ident@10085..10087
                Ident@10085..10087 "fs"
              Comma@10087..10088 ","
              Ident@10088..10093
                Ident@10088..10093 "flist"
              RParen@10093..10094 ")"
          FuncCall@10094..10113
            Ident@10094..10099
              Ident@10094..10099 "block"
            FuncArgs@10099..10113
              LParen@10099..10100 "("
              Ident@10100..10102
                Ident@10100..10102 "fs"
              Comma@10102..10103 ","
              Index@10103..10112
                Ident@10103..10106
                  Ident@10103..10106 "ast"
                LBracket@10106..10107 "["
                PrefixOp@10107..10111
                  Hash@10107..10108 "#"
                  Ident@10108..10111
                    Ident@10108..10111 "ast"
                RBracket@10111..10112 "]"
              RParen@10112..10113 ")"
        ElseChain@10113..10163
          Else@10113..10117 "else"
          StmtList@10117..10160
            AssignStmt@10117..10160
              Ident@10117..10127
                Ident@10117..10127 "escapelist"
              Assign@10127..10128 "="
              FuncCall@10128..10160
                BinOp@10128..10139
                  Ident@10128..10132
                    Ident@10128..10132 "luaK"
                  Colon@10132..10133 ":"
                  Ident@10133..10139
                    Ident@10133..10139 "concat"
                FuncArgs@10139..10160
                  LParen@10139..10140 "("
                  Ident@10140..10142
                    Ident@10140..10142 "fs"
                  Comma@10142..10143 ","
                  Ident@10143..10153
                    Ident@10143..10153 "escapelist"
                  Comma@10153..10154 ","
                  Ident@10154..10159
                    Ident@10154..10159 "flist"
                  RParen@10159..10160 ")"
          End@10160..10163 "end"
      FuncCall@10163..10194
        BinOp@10163..10179
          Ident@10163..10167
            Ident@10163..10167 "luaK"
          Colon@10167..10168 ":"
          Ident@10168..10179
            Ident@10168..10179 "patchtohere"
        FuncArgs@10179..10194
          LParen@10179..10180 "("
          Ident@10180..10182
            Ident@10180..10182 "fs"
          Comma@10182..10183 ","
          Ident@10183..10193
            Ident@10183..10193 "escapelist"
          RParen@10193..10194 ")"
    End@10194..10197 "end"
  FuncStmt@10197..10586
    Function@10197..10205 "function"
    BinOp@10205..10215
      Ident@10205..10209
        Ident@10205..10209 "stat"
      Dot@10209..10210 "."
      Ident@10210..10215
        Ident@10210..10215 "Forin"
    FuncArgs@10215..10223
      LParen@10215..10216 "("
      Ident@10216..10218 "fs"
      Comma@10218..10219 ","
      Ident@10219..10222 "ast"
      RParen@10222..10223 ")"
    StmtList@10223..10583
      DeclStmt@10223..10263
        Local@10223..10228 "local"
        DeclTarget@10228..10232
          Ident@10228..10232 "vars"
        Comma@10232..10233 ","
        DeclTarget@10233..10237
          Ident@10233..10237 "vals"
        Comma@10237..10238 ","
        DeclTarget@10238..10242
          Ident@10238..10242 "body"
        Assign@10242..10243 "="
        ExprList@10243..10263
          Index@10243..10249
            Ident@10243..10246
              Ident@10243..10246 "ast"
            LBracket@10246..10247 "["
            LiteralExpr@10247..10248
              Int@10247..10248 "1"
            RBracket@10248..10249 "]"
          Comma@10249..10250 ","
          Index@10250..10256
            Ident@10250..10253
              Ident@10250..10253 "ast"
            LBracket@10253..10254 "["
            LiteralExpr@10254..10255
              Int@10254..10255 "2"
            RBracket@10255..10256 "]"
          Comma@10256..10257 ","
          Index@10257..10263
            Ident@10257..10260
              Ident@10257..10260 "ast"
            LBracket@10260..10261 "["
            LiteralExpr@10261..10262
              Int@10261..10262 "3"
            RBracket@10262..10263 "]"
      DeclStmt@10263..10273
        Local@10263..10268 "local"
        DeclTarget@10268..10270
          Ident@10268..10270 "bl"
        Assign@10270..10271 "="
        TableExpr@10271..10273
          LCurly@10271..10272 "{"
          RCurly@10272..10273 "}"
      FuncCall@10273..10295
        Ident@10273..10283
          Ident@10273..10283 "enterblock"
        FuncArgs@10283..10295
          LParen@10283..10284 "("
          Ident@10284..10286
            Ident@10284..10286 "fs"
          Comma@10286..10287 ","
          Ident@10287..10289
            Ident@10287..10289 "bl"
          Comma@10289..10290 ","
          LiteralExpr@10290..10294
            True@10290..10294 "true"
          RParen@10294..10295 ")"
      DeclStmt@10295..10320
        Local@10295..10300 "local"
        DeclTarget@10300..10301
          Ident@10300..10301 "e"
        Comma@10301..10302 ","
        DeclTarget@10302..10306
          Ident@10302..10306 "base"
        Assign@10306..10307 "="
        ExprList@10307..10320
          TableExpr@10307..10309
            LCurly@10307..10308 "{"
            RCurly@10308..10309 "}"
          Comma@10309..10310 ","
          BinOp@10310..10320
            Ident@10310..10312
              Ident@10310..10312 "fs"
            Dot@10312..10313 "."
            Ident@10313..10320
              Ident@10313..10320 "freereg"
      FuncCall@10320..10356
        Ident@10320..10332
          Ident@10320..10332 "new_localvar"
        FuncArgs@10332..10356
          LParen@10332..10333 "("
          Ident@10333..10335
            Ident@10333..10335 "fs"
          Comma@10335..10336 ","
          LiteralExpr@10336..10353
            String@10336..10353 "\"(for generator)\""
          Comma@10353..10354 ","
          LiteralExpr@10354..10355
            Int@10354..10355 "0"
          RParen@10355..10356 ")"
      FuncCall@10356..10388
        Ident@10356..10368
          Ident@10356..10368 "new_localvar"
        FuncArgs@10368..10388
          LParen@10368..10369 "("
          Ident@10369..10371
            Ident@10369..10371 "fs"
          Comma@10371..10372 ","
          LiteralExpr@10372..10385
            String@10372..10385 "\"(for state)\""
          Comma@10385..10386 ","
          LiteralExpr@10386..10387
            Int@10386..10387 "1"
          RParen@10387..10388 ")"
      FuncCall@10388..10422
        Ident@10388..10400
          Ident@10388..10400 "new_localvar"
        FuncArgs@10400..10422
          LParen@10400..10401 "("
          Ident@10401..10403
            Ident@10401..10403 "fs"
          Comma@10403..10404 ","
          LiteralExpr@10404..10419
            String@10404..10419 "\"(for control)\""
          Comma@10419..10420 ","
          LiteralExpr@10420..10421
            Int@10420..10421 "2"
          RParen@10421..10422 ")"
      ForNumStmt@10422..10470
        For@10422..10425 "for"
        Ident@10425..10426 "i"
        Assign@10426..10427 "="
        LiteralExpr@10427..10428
          Int@10427..10428 "1"
        Comma@10428..10429 ","
        PrefixOp@10429..10434
          Hash@10429..10430 "#"
          Ident@10430..10434
            Ident@10430..10434 "vars"
        BlockStmt@10434..10470
          Do@10434..10436 "do"
          StmtList@10436..10467
            FuncCall@10436..10467
              Ident@10436..10448
                Ident@10436..10448 "new_localvar"
              FuncArgs@10448..10467
                LParen@10448..10449 "("
                Ident@10449..10451
                  Ident@10449..10451 "fs"
                Comma@10451..10452 ","
                Index@10452..10462
                  Index@10452..10459
                    Ident@10452..10456
                      Ident@10452..10456 "vars"
                    LBracket@10456..10457 "["
                    Ident@10457..10458
                      Ident@10457..10458 "i"
                    RBracket@10458..10459 "]"
                  LBracket@10459..10460 "["
                  LiteralExpr@10460..10461
                    Int@10460..10461 "1"
                  RBracket@10461..10462 "]"
                Comma@10462..10463 ","
                BinOp@10463..10466
                  Ident@10463..10464
                    Ident@10463..10464 "i"
                  Plus@10464..10465 "+"
                  LiteralExpr@10465..10466
                    Int@10465..10466 "2"
                RParen@10466..10467 ")"
          End@10467..10470 "end"
      FuncCall@10470..10488
        Ident@10470..10477
          Ident@10470..10477 "explist"
        FuncArgs@10477..10488
          LParen@10477..10478 "("
          Ident@10478..10480
            Ident@10478..10480 "fs"
          Comma@10480..10481 ","
          Ident@10481..10485
            Ident@10481..10485 "vals"
          Comma@10485..10486 ","
          Ident@10486..10487
            Ident@10486..10487 "e"
          RParen@10487..10488 ")"
      FuncCall@10488..10515
        Ident@10488..10501
          Ident@10488..10501 "adjust_assign"
        FuncArgs@10501..10515
          LParen@10501..10502 "("
          Ident@10502..10504
            Ident@10502..10504 "fs"
          Comma@10504..10505 ","
          LiteralExpr@10505..10506
            Int@10505..10506 "3"
          Comma@10506..10507 ","
          PrefixOp@10507..10512
            Hash@10507..10508 "#"
            Ident@10508..10512
              Ident@10508..10512 "vals"
          Comma@10512..10513 ","
          Ident@10513..10514
            Ident@10513..10514 "e"
          RParen@10514..10515 ")"
      FuncCall@10515..10536
        BinOp@10515..10530
          Ident@10515..10519
            Ident@10515..10519 "luaK"
          Colon@10519..10520 ":"
          Ident@10520..10530
            Ident@10520..10530 "checkstack"
        FuncArgs@10530..10536
          LParen@10530..10531 "("
          Ident@10531..10533
            Ident@10531..10533 "fs"
          Comma@10533..10534 ","
          LiteralExpr@10534..10535
            Int@10534..10535 "3"
          RParen@10535..10536 ")"
      FuncCall@10536..10569
        Ident@10536..10543
          Ident@10536..10543 "forbody"
        FuncArgs@10543..10569
          LParen@10543..10544 "("
          Ident@10544..10546
            Ident@10544..10546 "fs"
          Comma@10546..10547 ","
          Ident@10547..10551
            Ident@10547..10551 "body"
          Comma@10551..10552 ","
          Ident@10552..10556
            Ident@10552..10556 "base"
          Comma@10556..10557 ","
          PrefixOp@10557..10562
            Hash@10557..10558 "#"
            Ident@10558..10562
              Ident@10558..10562 "vars"
          Comma@10562..10563 ","
          LiteralExpr@10563..10568
            False@10563..10568 "false"
          RParen@10568..10569 ")"
      FuncCall@10569..10583
        Ident@10569..10579
          Ident@10569..10579 "leaveblock"
        FuncArgs@10579..10583
          LParen@10579..10580 "("
          Ident@10580..10582
            Ident@10580..10582 "fs"
          RParen@10582..10583 ")"
    End@10583..10586 "end"
  FuncStmt@10586..11052
    Function@10586..10594 "function"
    BinOp@10594..10605
      Ident@10594..10598
        Ident@10594..10598 "stat"
      Dot@10598..10599 "."
      Ident@10599..10605
        Ident@10599..10605 "Fornum"
    FuncArgs@10605..10613
      LParen@10605..10606 "("
      Ident@10606..10608 "fs"
      Comma@10608..10609 ","
      Ident@10609..10612 "ast"
      RParen@10612..10613 ")"
    StmtList@10613..11049
      DeclStmt@10613..10692
        Local@10613..10618 "local"
        FuncStmt@10618..10692
          Function@10618..10626 "function"
          Ident@10626..10630
            Ident@10626..10630 "exp1"
          FuncArgs@10630..10637
            LParen@10630..10631 "("
            Ident@10631..10636 "ast_e"
            RParen@10636..10637 ")"
          StmtList@10637..10689
            DeclStmt@10637..10646
              Local@10637..10642 "local"
              DeclTarget@10642..10643
                Ident@10642..10643 "e"
              Assign@10643..10644 "="
              TableExpr@10644..10646
                LCurly@10644..10645 "{"
                RCurly@10645..10646 "}"
            FuncCall@10646..10667
              BinOp@10646..10655
                Ident@10646..10650
                  Ident@10646..10650 "expr"
                Dot@10650..10651 "."
                Ident@10651..10655
                  Ident@10651..10655 "expr"
              FuncArgs@10655..10667
                LParen@10655..10656 "("
                Ident@10656..10658
                  Ident@10656..10658 "fs"
                Comma@10658..10659 ","
                Ident@10659..10664
                  Ident@10659..10664 "ast_e"
                Comma@10664..10665 ","
                Ident@10665..10666
                  Ident@10665..10666 "e"
                RParen@10666..10667 ")"
            FuncCall@10667..10689
              BinOp@10667..10683
                Ident@10667..10671
                  Ident@10667..10671 "luaK"
                Colon@10671..10672 ":"
                Ident@10672..10683
                  Ident@10672..10683 "exp2nextreg"
              FuncArgs@10683..10689
                LParen@10683..10684 "("
                Ident@10684..10686
                  Ident@10684..10686 "fs"
                Comma@10686..10687 ","
                Ident@10687..10688
                  Ident@10687..10688 "e"
                RParen@10688..10689 ")"
          End@10689..10692 "end"
      DeclStmt@10692..10702
        Local@10692..10697 "local"
        DeclTarget@10697..10699
          Ident@10697..10699 "bl"
        Assign@10699..10700 "="
        TableExpr@10700..10702
          LCurly@10700..10701 "{"
          RCurly@10701..10702 "}"
      FuncCall@10702..10724
        Ident@10702..10712
          Ident@10702..10712 "enterblock"
        FuncArgs@10712..10724
          LParen@10712..10713 "("
          Ident@10713..10715
            Ident@10713..10715 "fs"
          Comma@10715..10716 ","
          Ident@10716..10718
            Ident@10716..10718 "bl"
          Comma@10718..10719 ","
          LiteralExpr@10719..10723
            True@10719..10723 "true"
          RParen@10723..10724 ")"
      DeclStmt@10724..10744
        Local@10724..10729 "local"
        DeclTarget@10729..10733
          Ident@10729..10733 "base"
        Assign@10733..10734 "="
        BinOp@10734..10744
          Ident@10734..10736
            Ident@10734..10736 "fs"
          Dot@10736..10737 "."
          Ident@10737..10744
            Ident@10737..10744 "freereg"
      FuncCall@10744..10776
        Ident@10744..10756
          Ident@10744..10756 "new_localvar"
        FuncArgs@10756..10776
          LParen@10756..10757 "("
          Ident@10757..10759
            Ident@10757..10759 "fs"
          Comma@10759..10760 ","
          LiteralExpr@10760..10773
            String@10760..10773 "\"(for index)\""
          Comma@10773..10774 ","
          LiteralExpr@10774..10775
            Int@10774..10775 "0"
          RParen@10775..10776 ")"
      FuncCall@10776..10808
        Ident@10776..10788
          Ident@10776..10788 "new_localvar"
        FuncArgs@10788..10808
          LParen@10788..10789 "("
          Ident@10789..10791
            Ident@10789..10791 "fs"
          Comma@10791..10792 ","
          LiteralExpr@10792..10805
            String@10792..10805 "\"(for limit)\""
          Comma@10805..10806 ","
          LiteralExpr@10806..10807
            Int@10806..10807 "1"
          RParen@10807..10808 ")"
      FuncCall@10808..10839
        Ident@10808..10820
          Ident@10808..10820 "new_localvar"
        FuncArgs@10820..10839
          LParen@10820..10821 "("
          Ident@10821..10823
            Ident@10821..10823 "fs"
          Comma@10823..10824 ","
          LiteralExpr@10824..10836
            String@10824..10836 "\"(for step)\""
          Comma@10836..10837 ","
          LiteralExpr@10837..10838
            Int@10837..10838 "2"
          RParen@10838..10839 ")"
      FuncCall@10839..10867
        Ident@10839..10851
          Ident@10839..10851 "new_localvar"
        FuncArgs@10851..10867
          LParen@10851..10852 "("
          Ident@10852..10854
            Ident@10852..10854 "fs"
          Comma@10854..10855 ","
          Index@10855..10864
            Index@10855..10861
              Ident@10855..10858
                Ident@10855..10858 "ast"
              LBracket@10858..10859 "["
              LiteralExpr@10859..10860
                Int@10859..10860 "1"
              RBracket@10860..10861 "]"
            LBracket@10861..10862 "["
            LiteralExpr@10862..10863
              Int@10862..10863 "1"
            RBracket@10863..10864 "]"
          Comma@10864..10865 ","
          LiteralExpr@10865..10866
            Int@10865..10866 "3"
          RParen@10866..10867 ")"
      FuncCall@10867..10879
        Ident@10867..10871
          Ident@10867..10871 "exp1"
        FuncArgs@10871..10879
          LParen@10871..10872 "("
          Index@10872..10878
            Ident@10872..10875
              Ident@10872..10875 "ast"
            LBracket@10875..10876 "["
            LiteralExpr@10876..10877
              Int@10876..10877 "2"
            RBracket@10877..10878 "]"
          RParen@10878..10879 ")"
      FuncCall@10879..10891
        Ident@10879..10883
          Ident@10879..10883 "exp1"
        FuncArgs@10883..10891
          LParen@10883..10884 "("
          Index@10884..10890
            Ident@10884..10887
              Ident@10884..10887 "ast"
            LBracket@10887..10888 "["
            LiteralExpr@10888..10889
              Int@10888..10889 "3"
            RBracket@10889..10890 "]"
          RParen@10890..10891 ")"
      IfStmt@10891..11002
        If@10891..10893 "if"
        BinOp@10893..10900
          PrefixOp@10893..10897
            Hash@10893..10894 "#"
            Ident@10894..10897
              Ident@10894..10897 "ast"
          Eq@10897..10899 "=="
          LiteralExpr@10899..10900
            Int@10899..10900 "5"
        Then@10900..10904 "then"
        StmtList@10904..10916
          FuncCall@10904..10916
            Ident@10904..10908
              Ident@10904..10908 "exp1"
            FuncArgs@10908..10916
              LParen@10908..10909 "("
              Index@10909..10915
                Ident@10909..10912
                  Ident@10909..10912 "ast"
                LBracket@10912..10913 "["
                LiteralExpr@10913..10914
                  Int@10913..10914 "4"
                RBracket@10914..10915 "]"
              RParen@10915..10916 ")"
        ElseChain@10916..11002
          Else@10916..10920 "else"
          StmtList@10920..10999
            FuncCall@10920..10977
              BinOp@10920..10932
                Ident@10920..10924
                  Ident@10920..10924 "luaK"
                Colon@10924..10925 ":"
                Ident@10925..10932
                  Ident@10925..10932 "codeABx"
              FuncArgs@10932..10977
                LParen@10932..10933 "("
                Ident@10933..10935
                  Ident@10933..10935 "fs"
                Comma@10935..10936 ","
                LiteralExpr@10936..10946
                  String@10936..10946 "\"OP_LOADK\""
                Comma@10946..10947 ","
                BinOp@10947..10957
                  Ident@10947..10949
                    Ident@10947..10949 "fs"
                  Dot@10949..10950 "."
                  Ident@10950..10957
                    Ident@10950..10957 "freereg"
                Comma@10957..10958 ","
                FuncCall@10958..10976
                  BinOp@10958..10970
                    Ident@10958..10962
                      Ident@10958..10962 "luaK"
                    Colon@10962..10963 ":"
                    Ident@10963..10970
                      Ident@10963..10970 "numberK"
                  FuncArgs@10970..10976
                    LParen@10970..10971 "("
                    Ident@10971..10973
                      Ident@10971..10973 "fs"
                    Comma@10973..10974 ","
                    LiteralExpr@10974..10975
                      Int@10974..10975 "1"
                    RParen@10975..10976 ")"
                RParen@10976..10977 ")"
            FuncCall@10977..10999
              BinOp@10977..10993
                Ident@10977..10981
                  Ident@10977..10981 "luaK"
                Colon@10981..10982 ":"
                Ident@10982..10993
                  Ident@10982..10993 "reserveregs"
              FuncArgs@10993..10999
                LParen@10993..10994 "("
                Ident@10994..10996
                  Ident@10994..10996 "fs"
                Comma@10996..10997 ","
                LiteralExpr@10997..10998
                  Int@10997..10998 "1"
                RParen@10998..10999 ")"
          End@10999..11002 "end"
      FuncCall@11002..11035
        Ident@11002..11009
          Ident@11002..11009 "forbody"
        FuncArgs@11009..11035
          LParen@11009..11010 "("
          Ident@11010..11012
            Ident@11010..11012 "fs"
          Comma@11012..11013 ","
          Index@11013..11022
            Ident@11013..11016
              Ident@11013..11016 "ast"
            LBracket@11016..11017 "["
            PrefixOp@11017..11021
              Hash@11017..11018 "#"
              Ident@11018..11021
                Ident@11018..11021 "ast"
            RBracket@11021..11022 "]"
          Comma@11022..11023 ","
          Ident@11023..11027
            Ident@11023..11027 "base"
          Comma@11027..11028 ","
          LiteralExpr@11028..11029
            Int@11028..11029 "1"
          Comma@11029..11030 ","
          LiteralExpr@11030..11034
            True@11030..11034 "true"
          RParen@11034..11035 ")"
      FuncCall@11035..11049
        Ident@11035..11045
          Ident@11035..11045 "leaveblock"
        FuncArgs@11045..11049
          LParen@11045..11046 "("
          Ident@11046..11048
            Ident@11046..11048 "fs"
          RParen@11048..11049 ")"
    End@11049..11052 "end"
  FuncStmt@11052..11419
    Function@11052..11060 "function"
    BinOp@11060..11071
      Ident@11060..11064
        Ident@11060..11064 "stat"
      Dot@11064..11065 "."
      Ident@11065..11071
        Ident@11065..11071 "Repeat"
    FuncArgs@11071..11079
      LParen@11071..11072 "("
      Ident@11072..11074 "fs"
      Comma@11074..11075 ","
      Ident@11075..11078 "ast"
      RParen@11078..11079 ")"
    StmtList@11079..11416
      DeclStmt@11079..11113
        Local@11079..11084 "local"
        DeclTarget@11084..11095
          Ident@11084..11095 "repeat_init"
        Assign@11095..11096 "="
        FuncCall@11096..11113
          BinOp@11096..11109
            Ident@11096..11100
              Ident@11096..11100 "luaK"
            Colon@11100..11101 ":"
            Ident@11101..11109
              Ident@11101..11109 "getlabel"
          FuncArgs@11109..11113
            LParen@11109..11110 "("
            Ident@11110..11112
              Ident@11110..11112 "fs"
            RParen@11112..11113 ")"
      DeclStmt@11113..11131
        Local@11113..11118 "local"
        DeclTarget@11118..11121
          Ident@11118..11121 "bl1"
        Comma@11121..11122 ","
        DeclTarget@11122..11125
          Ident@11122..11125 "bl2"
        Assign@11125..11126 "="
        ExprList@11126..11131
          TableExpr@11126..11128
            LCurly@11126..11127 "{"
            RCurly@11127..11128 "}"
          Comma@11128..11129 ","
          TableExpr@11129..11131
            LCurly@11129..11130 "{"
            RCurly@11130..11131 "}"
      FuncCall@11131..11154
        Ident@11131..11141
          Ident@11131..11141 "enterblock"
        FuncArgs@11141..11154
          LParen@11141..11142 "("
          Ident@11142..11144
            Ident@11142..11144 "fs"
          Comma@11144..11145 ","
          Ident@11145..11148
            Ident@11145..11148 "bl1"
          Comma@11148..11149 ","
          LiteralExpr@11149..11153
            True@11149..11153 "true"
          RParen@11153..11154 ")"
      FuncCall@11154..11178
        Ident@11154..11164
          Ident@11154..11164 "enterblock"
        FuncArgs@11164..11178
          LParen@11164..11165 "("
          Ident@11165..11167
            Ident@11165..11167 "fs"
          Comma@11167..11168 ","
          Ident@11168..11171
            Ident@11168..11171 "bl2"
          Comma@11171..11172 ","
          LiteralExpr@11172..11177
            False@11172..11177 "false"
          RParen@11177..11178 ")"
      FuncCall@11178..11194
        Ident@11178..11183
          Ident@11178..11183 "chunk"
        FuncArgs@11183..11194
          LParen@11183..11184 "("
          Ident@11184..11186
            Ident@11184..11186 "fs"
          Comma@11186..11187 ","
          Index@11187..11193
            Ident@11187..11190
              Ident@11187..11190 "ast"
            LBracket@11190..11191 "["
            LiteralExpr@11191..11192
              Int@11191..11192 "1"
            RBracket@11192..11193 "]"
          RParen@11193..11194 ")"
      DeclStmt@11194..11223
        Local@11194..11199 "local"
        DeclTarget@11199..11207
          Ident@11199..11207 "condexit"
        Assign@11207..11208 "="
        FuncCall@11208..11223
          Ident@11208..11212
            Ident@11208..11212 "cond"
          FuncArgs@11212..11223
            LParen@11212..11213 "("
            Ident@11213..11215
              Ident@11213..11215 "fs"
            Comma@11215..11216 ","
            Index@11216..11222
              Ident@11216..11219
                Ident@11216..11219 "ast"
              LBracket@11219..11220 "["
              LiteralExpr@11220..11221
                Int@11220..11221 "2"
              RBracket@11221..11222 "]"
            RParen@11222..11223 ")"
      IfStmt@11223..11402
        If@11223..11225 "if"
        PrefixOp@11225..11237
          Not@11225..11228 "not"
          BinOp@11228..11237
            Ident@11228..11231
              Ident@11228..11231 "bl2"
            Dot@11231..11232 "."
            Ident@11232..11237
              Ident@11232..11237 "upval"
        Then@11237..11241 "then"
        StmtList@11241..11294
          FuncCall@11241..11255
            Ident@11241..11251
              Ident@11241..11251 "leaveblock"
            FuncArgs@11251..11255
              LParen@11251..11252 "("
              Ident@11252..11254
                Ident@11252..11254 "fs"
              RParen@11254..11255 ")"
          FuncCall@11255..11294
            BinOp@11255..11269
              Ident@11255..11259
                Ident@11255..11259 "luaK"
              Colon@11259..11260 ":"
              Ident@11260..11269
                Ident@11260..11269 "patchlist"
            FuncArgs@11269..11294
              LParen@11269..11270 "("
              Ident@11270..11272
                Ident@11270..11272 "fs"
              Comma@11272..11273 ","
              Ident@11273..11281
                Ident@11273..11281 "condexit"
              Comma@11281..11282 ","
              Ident@11282..11293
                Ident@11282..11293 "repeat_init"
              RParen@11293..11294 ")"
        ElseChain@11294..11402
          Else@11294..11298 "else"
          StmtList@11298..11399
            FuncCall@11298..11312
              BinOp@11298..11308
                Ident@11298..11302
                  Ident@11298..11302 "stat"
                Dot@11302..11303 "."
                Ident@11303..11308
                  Ident@11303..11308 "Break"
              FuncArgs@11308..11312
                LParen@11308..11309 "("
                Ident@11309..11311
                  Ident@11309..11311 "fs"
                RParen@11311..11312 ")"
            FuncCall@11312..11341
              BinOp@11312..11328
                Ident@11312..11316
                  Ident@11312..11316 "luaK"
                Colon@11316..11317 ":"
                Ident@11317..11328
                  Ident@11317..11328 "patchtohere"
              FuncArgs@11328..11341
                LParen@11328..11329 "("
                Ident@11329..11331
                  Ident@11329..11331 "fs"
                Comma@11331..11332 ","
                Ident@11332..11340
                  Ident@11332..11340 "condexit"
                RParen@11340..11341 ")"
            FuncCall@11341..11355
              Ident@11341..11351
                Ident@11341..11351 "leaveblock"
              FuncArgs@11351..11355
                LParen@11351..11352 "("
                Ident@11352..11354
                  Ident@11352..11354 "fs"
                RParen@11354..11355 ")"
            FuncCall@11355..11399
              BinOp@11355..11369
                Ident@11355..11359
                  Ident@11355..11359 "luaK"
                Colon@11359..11360 ":"
                Ident@11360..11369
                  Ident@11360..11369 "patchlist"
              FuncArgs@11369..11399
                LParen@11369..11370 "("
                Ident@11370..11372
                  Ident@11370..11372 "fs"
                Comma@11372..11373 ","
                FuncCall@11373..11386
                  BinOp@11373..11382
                    Ident@11373..11377
                      Ident@11373..11377 "luaK"
                    Colon@11377..11378 ":"
                    Ident@11378..11382
                      Ident@11378..11382 "jump"
                  FuncArgs@11382..11386
                    LParen@11382..11383 "("
                    Ident@11383..11385
                      Ident@11383..11385 "fs"
                    RParen@11385..11386 ")"
                Comma@11386..11387 ","
                Ident@11387..11398
                  Ident@11387..11398 "repeat_init"
                RParen@11398..11399 ")"
          End@11399..11402 "end"
      FuncCall@11402..11416
        Ident@11402..11412
          Ident@11402..11412 "leaveblock"
        FuncArgs@11412..11416
          LParen@11412..11413 "("
          Ident@11413..11415
            Ident@11413..11415 "fs"
          RParen@11415..11416 ")"
    End@11416..11419 "end"
  FuncStmt@11419..11643
    Function@11419..11427 "function"
    BinOp@11427..11437
      Ident@11427..11431
        Ident@11427..11431 "stat"
      Dot@11431..11432 "."
      Ident@11432..11437
        Ident@11432..11437 "While"
    FuncArgs@11437..11445
      LParen@11437..11438 "("
      Ident@11438..11440 "fs"
      Comma@11440..11441 ","
      Ident@11441..11444 "ast"
      RParen@11444..11445 ")"
    StmtList@11445..11640
      DeclStmt@11445..11477
        Local@11445..11450 "local"
        DeclTarget@11450..11459
          Ident@11450..11459 "whileinit"
        Assign@11459..11460 "="
        FuncCall@11460..11477
          BinOp@11460..11473
            Ident@11460..11464
              Ident@11460..11464 "luaK"
            Colon@11464..11465 ":"
            Ident@11465..11473
              Ident@11465..11473 "getlabel"
          FuncArgs@11473..11477
            LParen@11473..11474 "("
            Ident@11474..11476
              Ident@11474..11476 "fs"
            RParen@11476..11477 ")"
      DeclStmt@11477..11506
        Local@11477..11482 "local"
        DeclTarget@11482..11490
          Ident@11482..11490 "condexit"
        Assign@11490..11491 "="
        FuncCall@11491..11506
          Ident@11491..11495
            Ident@11491..11495 "cond"
          FuncArgs@11495..11506
            LParen@11495..11496 "("
            Ident@11496..11498
              Ident@11496..11498 "fs"
            Comma@11498..11499 ","
            Index@11499..11505
              Ident@11499..11502
                Ident@11499..11502 "ast"
              LBracket@11502..11503 "["
              LiteralExpr@11503..11504
                Int@11503..11504 "1"
              RBracket@11504..11505 "]"
            RParen@11505..11506 ")"
      DeclStmt@11506..11516
        Local@11506..11511 "local"
        DeclTarget@11511..11513
          Ident@11511..11513 "bl"
        Assign@11513..11514 "="
        TableExpr@11514..11516
          LCurly@11514..11515 "{"
          RCurly@11515..11516 "}"
      FuncCall@11516..11538
        Ident@11516..11526
          Ident@11516..11526 "enterblock"
        FuncArgs@11526..11538
          LParen@11526..11527 "("
          Ident@11527..11529
            Ident@11527..11529 "fs"
          Comma@11529..11530 ","
          Ident@11530..11532
            Ident@11530..11532 "bl"
          Comma@11532..11533 ","
          LiteralExpr@11533..11537
            True@11533..11537 "true"
          RParen@11537..11538 ")"
      FuncCall@11538..11554
        Ident@11538..11543
          Ident@11538..11543 "block"
        FuncArgs@11543..11554
          LParen@11543..11544 "("
          Ident@11544..11546
            Ident@11544..11546 "fs"
          Comma@11546..11547 ","
          Index@11547..11553
            Ident@11547..11550
              Ident@11547..11550 "ast"
            LBracket@11550..11551 "["
            LiteralExpr@11551..11552
              Int@11551..11552 "2"
            RBracket@11552..11553 "]"
          RParen@11553..11554 ")"
      FuncCall@11554..11596
        BinOp@11554..11568
          Ident@11554..11558
            Ident@11554..11558 "luaK"
          Colon@11558..11559 ":"
          Ident@11559..11568
            Ident@11559..11568 "patchlist"
        FuncArgs@11568..11596
          LParen@11568..11569 "("
          Ident@11569..11571
            Ident@11569..11571 "fs"
          Comma@11571..11572 ","
          FuncCall@11572..11585
            BinOp@11572..11581
              Ident@11572..11576
                Ident@11572..11576 "luaK"
              Colon@11576..11577 ":"
              Ident@11577..11581
                Ident@11577..11581 "jump"
            FuncArgs@11581..11585
              LParen@11581..11582 "("
              Ident@11582..11584
                Ident@11582..11584 "fs"
              RParen@11584..11585 ")"
          Comma@11585..11586 ","
          Ident@11586..11595
            Ident@11586..11595 "whileinit"
          RParen@11595..11596 ")"
      FuncCall@11596..11610
        Ident@11596..11606
          Ident@11596..11606 "leaveblock"
        FuncArgs@11606..11610
          LParen@11606..11607 "("
          Ident@11607..11609
            Ident@11607..11609 "fs"
          RParen@11609..11610 ")"
      FuncCall@11610..11639
        BinOp@11610..11626
          Ident@11610..11614
            Ident@11610..11614 "luaK"
          Colon@11614..11615 ":"
          Ident@11615..11626
            Ident@11615..11626 "patchtohere"
        FuncArgs@11626..11639
          LParen@11626..11627 "("
          Ident@11627..11629
            Ident@11627..11629 "fs"
          Comma@11629..11630 ","
          Ident@11630..11638
            Ident@11630..11638 "condexit"
          RParen@11638..11639 ")"
      Semicolon@11639..11640
        Semicolon@11639..11640 ";"
    End@11640..11643 "end"
  FuncStmt@11643..12384
    Function@11643..11651 "function"
    BinOp@11651..11659
      Ident@11651..11655
        Ident@11651..11655 "stat"
      Dot@11655..11656 "."
      Ident@11656..11659
        Ident@11656..11659 "Set"
    FuncArgs@11659..11667
      LParen@11659..11660 "("
      Ident@11660..11662 "fs"
      Comma@11662..11663 ","
      Ident@11663..11666 "ast"
      RParen@11666..11667 ")"
    StmtList@11667..12381
      DeclStmt@11667..11707
        Local@11667..11672 "local"
        DeclTarget@11672..11679
          Ident@11672..11679 "ast_lhs"
        Comma@11679..11680 ","
        DeclTarget@11680..11688
          Ident@11680..11688 "ast_vals"
        Comma@11688..11689 ","
        DeclTarget@11689..11690
          Ident@11689..11690 "e"
        Assign@11690..11691 "="
        ExprList@11691..11707
          Index@11691..11697
            Ident@11691..11694
              Ident@11691..11694 "ast"
            LBracket@11694..11695 "["
            LiteralExpr@11695..11696
              Int@11695..11696 "1"
            RBracket@11696..11697 "]"
          Comma@11697..11698 ","
          Index@11698..11704
            Ident@11698..11701
              Ident@11698..11701 "ast"
            LBracket@11701..11702 "["
            LiteralExpr@11702..11703
              Int@11702..11703 "2"
            RBracket@11703..11704 "]"
          Comma@11704..11705 ","
          TableExpr@11705..11707
            LCurly@11705..11706 "{"
            RCurly@11706..11707 "}"
      DeclStmt@11707..12313
        Local@11707..11712 "local"
        FuncStmt@11712..12313
          Function@11712..11720 "function"
          Ident@11720..11727
            Ident@11720..11727 "let_aux"
          FuncArgs@11727..11738
            LParen@11727..11728 "("
            Ident@11728..11731 "lhs"
            Comma@11731..11732 ","
            Ident@11732..11737 "nvars"
            RParen@11737..11738 ")"
          StmtList@11738..12310
            DeclStmt@11738..11789
              Local@11738..11743 "local"
              DeclTarget@11743..11748
                Ident@11743..11748 "legal"
              Assign@11748..11749 "="
              TableExpr@11749..11789
                LCurly@11749..11750 "{"
                TableMapElem@11750..11758
                  Ident@11750..11756 "VLOCAL"
                  Assign@11756..11757 "="
                  LiteralExpr@11757..11758
                    Int@11757..11758 "1"
                Comma@11758..11759 ","
                TableMapElem@11759..11767
                  Ident@11759..11765 "VUPVAL"
                  Assign@11765..11766 "="
                  LiteralExpr@11766..11767
                    Int@11766..11767 "1"
                Comma@11767..11768 ","
                TableMapElem@11768..11777
                  Ident@11768..11775 "VGLOBAL"
                  Assign@11775..11776 "="
                  LiteralExpr@11776..11777
                    Int@11776..11777 "1"
                Comma@11777..11778 ","
                TableMapElem@11778..11788
                  Ident@11778..11786 "VINDEXED"
                  Assign@11786..11787 "="
                  LiteralExpr@11787..11788
                    Int@11787..11788 "1"
                RCurly@11788..11789 "}"
            IfStmt@11789..11860
              If@11789..11791 "if"
              PrefixOp@11791..11808
                Not@11791..11794 "not"
                Index@11794..11808
                  Ident@11794..11799
                    Ident@11794..11799 "legal"
                  LBracket@11799..11800 "["
                  BinOp@11800..11807
                    Ident@11800..11803
                      Ident@11800..11803 "lhs"
                    Dot@11803..11804 "."
                    BinOp@11804..11807
                      Ident@11804..11805
                        Ident@11804..11805 "v"
                      Dot@11805..11806 "."
                      Ident@11806..11807
                        Ident@11806..11807 "k"
                  RBracket@11807..11808 "]"
              Then@11808..11812 "then"
              StmtList@11812..11857
                FuncCall@11812..11857
                  Ident@11812..11817
                    Ident@11812..11817 "error"
                  FuncArgs@11817..11857
                    LParen@11817..11818 "("
                    BinOp@11818..11856
                      LiteralExpr@11818..11834
                        String@11818..11834 "\"Bad lhs expr: \""
                      DDot@11834..11836 ".."
                      FuncCall@11836..11856
                        BinOp@11836..11847
                          Ident@11836..11838
                            Ident@11836..11838 "pp"
                          Dot@11838..11839 "."
                          Ident@11839..11847
                            Ident@11839..11847 "tostring"
                        FuncArgs@11847..11856
                          LParen@11847..11848 "("
                          Ident@11848..11855
                            Ident@11848..11855 "ast_lhs"
                          RParen@11855..11856 ")"
                    RParen@11856..11857 ")"
              End@11857..11860 "end"
            IfStmt@11860..12249
              If@11860..11862 "if"
              BinOp@11862..11876
                Ident@11862..11867
                  Ident@11862..11867 "nvars"
                LAngle@11867..11868 "<"
                PrefixOp@11868..11876
                  Hash@11868..11869 "#"
                  Ident@11869..11876
                    Ident@11869..11876 "ast_lhs"
              Then@11876..11880 "then"
              StmtList@11880..12009
                DeclStmt@11880..11903
                  Local@11880..11885 "local"
                  DeclTarget@11885..11887
                    Ident@11885..11887 "nv"
                  Assign@11887..11888 "="
                  TableExpr@11888..11903
                    LCurly@11888..11889 "{"
                    TableMapElem@11889..11893
                      Ident@11889..11890 "v"
                      Assign@11890..11891 "="
                      TableExpr@11891..11893
                        LCurly@11891..11892 "{"
                        RCurly@11892..11893 "}"
                    Comma@11893..11894 ","
                    TableMapElem@11894..11902
                      Ident@11894..11898 "prev"
                      Assign@11898..11899 "="
                      Ident@11899..11902
                        Ident@11899..11902 "lhs"
                    RCurly@11902..11903 "}"
                FuncCall@11903..11938
                  BinOp@11903..11912
                    Ident@11903..11907
                      Ident@11903..11907 "expr"
                    Dot@11907..11908 "."
                    Ident@11908..11912
                      Ident@11908..11912 "expr"
                  FuncArgs@11912..11938
                    LParen@11912..11913 "("
                    Ident@11913..11915
                      Ident@11913..11915 "fs"
                    Comma@11915..11916 ","
                    Index@11916..11932
                      Ident@11916..11923
                        Ident@11916..11923 "ast_lhs"
                      LBracket@11923..11924 "["
                      BinOp@11924..11931
                        Ident@11924..11929
                          Ident@11924..11929 "nvars"
                        Plus@11929..11930 "+"
                        LiteralExpr@11930..11931
                          Int@11930..11931 "1"
                      RBracket@11931..11932 "]"
                    Comma@11932..11933 ","
                    BinOp@11933..11937
                      Ident@11933..11935
                        Ident@11933..11935 "nv"
                      Dot@11935..11936 "."
                      Ident@11936..11937
                        Ident@11936..11937 "v"
                    RParen@11937..11938 ")"
                IfStmt@11938..11990
                  If@11938..11940 "if"
                  BinOp@11940..11956
                    BinOp@11940..11946
                      Ident@11940..11942
                        Ident@11940..11942 "nv"
                      Dot@11942..11943 "."
                      BinOp@11943..11946
                        Ident@11943..11944
                          Ident@11943..11944 "v"
                        Dot@11944..11945 "."
                        Ident@11945..11946
                          Ident@11945..11946 "k"
                    Eq@11946..11948 "=="
                    LiteralExpr@11948..11956
                      String@11948..11956 "\"VLOCAL\""
                  Then@11956..11960 "then"
                  StmtList@11960..11987
                    FuncCall@11960..11987
                      Ident@11960..11974
                        Ident@11960..11974 "check_conflict"
                      FuncArgs@11974..11987
                        LParen@11974..11975 "("
                        Ident@11975..11977
                          Ident@11975..11977 "fs"
                        Comma@11977..11978 ","
                        Ident@11978..11981
                          Ident@11978..11981 "lhs"
                        Comma@11981..11982 ","
                        BinOp@11982..11986
                          Ident@11982..11984
                            Ident@11982..11984 "nv"
                          Dot@11984..11985 "."
                          Ident@11985..11986
                            Ident@11985..11986 "v"
                        RParen@11986..11987 ")"
                  End@11987..11990 "end"
                FuncCall@11990..12009
                  Ident@11990..11997
                    Ident@11990..11997 "let_aux"
                  FuncArgs@11997..12009
                    LParen@11997..11998 "("
                    Ident@11998..12000
                      Ident@11998..12000 "nv"
                    Comma@12000..12001 ","
                    BinOp@12001..12008
                      Ident@12001..12006
                        Ident@12001..12006 "nvars"
                      Plus@12006..12007 "+"
                      LiteralExpr@12007..12008
                        Int@12007..12008 "1"
                    RParen@12008..12009 ")"
              ElseChain@12009..12249
                Else@12009..12013 "else"
                StmtList@12013..12246
                  FuncCall@12013..12035
                    Ident@12013..12020
                      Ident@12013..12020 "explist"
                    FuncArgs@12020..12035
                      LParen@12020..12021 "("
                      Ident@12021..12023
                        Ident@12021..12023 "fs"
                      Comma@12023..12024 ","
                      Ident@12024..12032
                        Ident@12024..12032 "ast_vals"
                      Comma@12032..12033 ","
                      Ident@12033..12034
                        Ident@12033..12034 "e"
                      RParen@12034..12035 ")"
                  IfStmt@12035..12246
                    If@12035..12037 "if"
                    BinOp@12037..12052
                      PrefixOp@12037..12046
                        Hash@12037..12038 "#"
                        Ident@12038..12046
                          Ident@12038..12046 "ast_vals"
                      LAngle@12046..12047 "<"
                      Ident@12047..12052
                        Ident@12047..12052 "nvars"
                    Then@12052..12056 "then"
                    StmtList@12056..12091
                      FuncCall@12056..12091
                        Ident@12056..12069
                          Ident@12056..12069 "adjust_assign"
                        FuncArgs@12069..12091
                          LParen@12069..12070 "("
                          Ident@12070..12072
                            Ident@12070..12072 "fs"
                          Comma@12072..12073 ","
                          Ident@12073..12078
                            Ident@12073..12078 "nvars"
                          Comma@12078..12079 ","
                          PrefixOp@12079..12088
                            Hash@12079..12080 "#"
                            Ident@12080..12088
                              Ident@12080..12088 "ast_vals"
                          Comma@12088..12089 ","
                          Ident@12089..12090
                            Ident@12089..12090 "e"
                          RParen@12090..12091 ")"
                    ElseChain@12091..12246
                      IfStmt@12091..12246
                        ElseIf@12091..12097 "elseif"
                        BinOp@12097..12112
                          PrefixOp@12097..12106
                            Hash@12097..12098 "#"
                            Ident@12098..12106
                              Ident@12098..12106 "ast_vals"
                          RAngle@12106..12107 ">"
                          Ident@12107..12112
                            Ident@12107..12112 "nvars"
                        Then@12112..12116 "then"
                        StmtList@12116..12188
                          FuncCall@12116..12151
                            Ident@12116..12129
                              Ident@12116..12129 "adjust_assign"
                            FuncArgs@12129..12151
                              LParen@12129..12130 "("
                              Ident@12130..12132
                                Ident@12130..12132 "fs"
                              Comma@12132..12133 ","
                              Ident@12133..12138
                                Ident@12133..12138 "nvars"
                              Comma@12138..12139 ","
                              PrefixOp@12139..12148
                                Hash@12139..12140 "#"
                                Ident@12140..12148
                                  Ident@12140..12148 "ast_vals"
                              Comma@12148..12149 ","
                              Ident@12149..12150
                                Ident@12149..12150 "e"
                              RParen@12150..12151 ")"
                          AssignStmt@12151..12188
                            BinOp@12151..12161
                              Ident@12151..12153
                                Ident@12151..12153 "fs"
                              Dot@12153..12154 "."
                              Ident@12154..12161
                                Ident@12154..12161 "freereg"
                            Assign@12161..12162 "="
                            BinOp@12162..12188
                              BinOp@12162..12182
                                BinOp@12162..12172
                                  Ident@12162..12164
                                    Ident@12162..12164 "fs"
                                  Dot@12164..12165 "."
                                  Ident@12165..12172
                                    Ident@12165..12172 "freereg"
                                Minus@12172..12173 "-"
                                PrefixOp@12173..12182
                                  Hash@12173..12174 "#"
                                  Ident@12174..12182
                                    Ident@12174..12182 "ast_vals"
                              Plus@12182..12183 "+"
                              Ident@12183..12188
                                Ident@12183..12188 "nvars"
                        ElseChain@12188..12246
                          Else@12188..12192 "else"
                          StmtList@12192..12243
                            FuncCall@12192..12212
                              BinOp@12192..12206
                                Ident@12192..12196
                                  Ident@12192..12196 "luaK"
                                Colon@12196..12197 ":"
                                Ident@12197..12206
                                  Ident@12197..12206 "setoneret"
                              FuncArgs@12206..12212
                                LParen@12206..12207 "("
                                Ident@12207..12209
                                  Ident@12207..12209 "fs"
                                Comma@12209..12210 ","
                                Ident@12210..12211
                                  Ident@12210..12211 "e"
                                RParen@12211..12212 ")"
                            FuncCall@12212..12237
                              BinOp@12212..12225
                                Ident@12212..12216
                                  Ident@12212..12216 "luaK"
                                Colon@12216..12217 ":"
                                Ident@12217..12225
                                  Ident@12217..12225 "storevar"
                              FuncArgs@12225..12237
                                LParen@12225..12226 "("
                                Ident@12226..12228
                                  Ident@12226..12228 "fs"
                                Comma@12228..12229 ","
                                BinOp@12229..12234
                                  Ident@12229..12232
                                    Ident@12229..12232 "lhs"
                                  Dot@12232..12233 "."
                                  Ident@12233..12234
                                    Ident@12233..12234 "v"
                                Comma@12234..12235 ","
                                Ident@12235..12236
                                  Ident@12235..12236 "e"
                                RParen@12236..12237 ")"
                            ReturnStmt@12237..12243
                              Return@12237..12243 "return"
                          End@12243..12246 "end"
                End@12246..12249 "end"
            FuncCall@12249..12285
              Ident@12249..12257
                Ident@12249..12257 "init_exp"
              FuncArgs@12257..12285
                LParen@12257..12258 "("
                Ident@12258..12259
                  Ident@12258..12259 "e"
                Comma@12259..12260 ","
                LiteralExpr@12260..12271
                  String@12260..12271 "\"VNONRELOC\""
                Comma@12271..12272 ","
                BinOp@12272..12284
                  BinOp@12272..12282
                    Ident@12272..12274
                      Ident@12272..12274 "fs"
                    Dot@12274..12275 "."
                    Ident@12275..12282
                      Ident@12275..12282 "freereg"
                  Minus@12282..12283 "-"
                  LiteralExpr@12283..12284
                    Int@12283..12284 "1"
                RParen@12284..12285 ")"
            FuncCall@12285..12310
              BinOp@12285..12298
                Ident@12285..12289
                  Ident@12285..12289 "luaK"
                Colon@12289..12290 ":"
                Ident@12290..12298
                  Ident@12290..12298 "storevar"
              FuncArgs@12298..12310
                LParen@12298..12299 "("
                Ident@12299..12301
                  Ident@12299..12301 "fs"
                Comma@12301..12302 ","
                BinOp@12302..12307
                  Ident@12302..12305
                    Ident@12302..12305 "lhs"
                  Dot@12305..12306 "."
                  Ident@12306..12307
                    Ident@12306..12307 "v"
                Comma@12307..12308 ","
                Ident@12308..12309
                  Ident@12308..12309 "e"
                RParen@12309..12310 ")"
          End@12310..12313 "end"
      DeclStmt@12313..12337
        Local@12313..12318 "local"
        DeclTarget@12318..12321
          Ident@12318..12321 "lhs"
        Assign@12321..12322 "="
        TableExpr@12322..12337
          LCurly@12322..12323 "{"
          TableMapElem@12323..12327
            Ident@12323..12324 "v"
            Assign@12324..12325 "="
            TableExpr@12325..12327
              LCurly@12325..12326 "{"
              RCurly@12326..12327 "}"
          Comma@12327..12328 ","
          TableMapElem@12328..12336
            Ident@12328..12332 "prev"
            Assign@12332..12333 "="
            LiteralExpr@12333..12336
              Nil@12333..12336 "nil"
          RCurly@12336..12337 "}"
      FuncCall@12337..12367
        BinOp@12337..12346
          Ident@12337..12341
            Ident@12337..12341 "expr"
          Dot@12341..12342 "."
          Ident@12342..12346
            Ident@12342..12346 "expr"
        FuncArgs@12346..12367
          LParen@12346..12347 "("
          Ident@12347..12349
            Ident@12347..12349 "fs"
          Comma@12349..12350 ","
          Index@12350..12360
            Ident@12350..12357
              Ident@12350..12357 "ast_lhs"
            LBracket@12357..12358 "["
            LiteralExpr@12358..12359
              Int@12358..12359 "1"
            RBracket@12359..12360 "]"
          Comma@12360..12361 ","
          BinOp@12361..12366
            Ident@12361..12364
              Ident@12361..12364 "lhs"
            Dot@12364..12365 "."
            Ident@12365..12366
              Ident@12365..12366 "v"
          RParen@12366..12367 ")"
      FuncCall@12367..12381
        Ident@12367..12374
          Ident@12367..12374 "let_aux"
        FuncArgs@12374..12381
          LParen@12374..12375 "("
          Ident@12375..12378
            Ident@12375..12378 "lhs"
          Comma@12378..12379 ","
          LiteralExpr@12379..12380
            Int@12379..12380 "1"
          RParen@12380..12381 ")"
    End@12381..12384 "end"
  FuncStmt@12384..12475
    Function@12384..12392 "function"
    BinOp@12392..12401
      Ident@12392..12396
        Ident@12392..12396 "stat"
      Dot@12396..12397 "."
      Ident@12397..12401
        Ident@12397..12401 "Call"
    FuncArgs@12401..12409
      LParen@12401..12402 "("
      Ident@12402..12404 "fs"
      Comma@12404..12405 ","
      Ident@12405..12408 "ast"
      RParen@12408..12409 ")"
    StmtList@12409..12472
      DeclStmt@12409..12418
        Local@12409..12414 "local"
        DeclTarget@12414..12415
          Ident@12414..12415 "v"
        Assign@12415..12416 "="
        TableExpr@12416..12418
          LCurly@12416..12417 "{"
          RCurly@12417..12418 "}"
      FuncCall@12418..12437
        BinOp@12418..12427
          Ident@12418..12422
            Ident@12418..12422 "expr"
          Dot@12422..12423 "."
          Ident@12423..12427
            Ident@12423..12427 "Call"
        FuncArgs@12427..12437
          LParen@12427..12428 "("
          Ident@12428..12430
            Ident@12428..12430 "fs"
          Comma@12430..12431 ","
          Ident@12431..12434
            Ident@12431..12434 "ast"
          Comma@12434..12435 ","
          Ident@12435..12436
            Ident@12435..12436 "v"
          RParen@12436..12437 ")"
      FuncCall@12437..12472
        BinOp@12437..12450
          Ident@12437..12441
            Ident@12437..12441 "luaP"
          Colon@12441..12442 ":"
          Ident@12442..12450
            Ident@12442..12450 "SETARG_C"
        FuncArgs@12450..12472
          LParen@12450..12451 "("
          FuncCall@12451..12469
            BinOp@12451..12463
              Ident@12451..12455
                Ident@12451..12455 "luaK"
              Colon@12455..12456 ":"
              Ident@12456..12463
                Ident@12456..12463 "getcode"
            FuncArgs@12463..12469
              LParen@12463..12464 "("
              Ident@12464..12466
                Ident@12464..12466 "fs"
              Comma@12466..12467 ","
              Ident@12467..12468
                Ident@12467..12468 "v"
              RParen@12468..12469 ")"
          Comma@12469..12470 ","
          LiteralExpr@12470..12471
            Int@12470..12471 "1"
          RParen@12471..12472 ")"
    End@12472..12475 "end"
  FuncStmt@12475..12570
    Function@12475..12483 "function"
    BinOp@12483..12494
      Ident@12483..12487
        Ident@12483..12487 "stat"
      Dot@12487..12488 "."
      Ident@12488..12494
        Ident@12488..12494 "Invoke"
    FuncArgs@12494..12502
      LParen@12494..12495 "("
      Ident@12495..12497 "fs"
      Comma@12497..12498 ","
      Ident@12498..12501 "ast"
      RParen@12501..12502 ")"
    StmtList@12502..12567
      DeclStmt@12502..12511
        Local@12502..12507 "local"
        DeclTarget@12507..12508
          Ident@12507..12508 "v"
        Assign@12508..12509 "="
        TableExpr@12509..12511
          LCurly@12509..12510 "{"
          RCurly@12510..12511 "}"
      FuncCall@12511..12532
        BinOp@12511..12522
          Ident@12511..12515
            Ident@12511..12515 "expr"
          Dot@12515..12516 "."
          Ident@12516..12522
            Ident@12516..12522 "Invoke"
        FuncArgs@12522..12532
          LParen@12522..12523 "("
          Ident@12523..12525
            Ident@12523..12525 "fs"
          Comma@12525..12526 ","
          Ident@12526..12529
            Ident@12526..12529 "ast"
          Comma@12529..12530 ","
          Ident@12530..12531
            Ident@12530..12531 "v"
          RParen@12531..12532 ")"
      FuncCall@12532..12567
        BinOp@12532..12545
          Ident@12532..12536
            Ident@12532..12536 "luaP"
          Colon@12536..12537 ":"
          Ident@12537..12545
            Ident@12537..12545 "SETARG_C"
        FuncArgs@12545..12567
          LParen@12545..12546 "("
          FuncCall@12546..12564
            BinOp@12546..12558
              Ident@12546..12550
                Ident@12546..12550 "luaK"
              Colon@12550..12551 ":"
              Ident@12551..12558
                Ident@12551..12558 "getcode"
            FuncArgs@12558..12564
              LParen@12558..12559 "("
              Ident@12559..12561
                Ident@12559..12561 "fs"
              Comma@12561..12562 ","
              Ident@12562..12563
                Ident@12562..12563 "v"
              RParen@12563..12564 ")"
          Comma@12564..12565 ","
          LiteralExpr@12565..12566
            Int@12565..12566 "1"
          RParen@12566..12567 ")"
    End@12567..12570 "end"
  DeclStmt@12570..12608
    Local@12570..12575 "local"
    FuncStmt@12575..12608
      Function@12575..12583 "function"
      Ident@12583..12593
        Ident@12583..12593 "patch_goto"
      FuncArgs@12593..12605
        LParen@12593..12594 "("
        Ident@12594..12596 "fs"
        Comma@12596..12597 ","
        Ident@12597..12600 "src"
        Comma@12600..12601 ","
        Ident@12601..12604 "dst"
        RParen@12604..12605 ")"
      StmtList@12605..12605
      End@12605..12608 "end"
  FuncStmt@12608..13164
    Function@12608..12616 "function"
    BinOp@12616..12626
      Ident@12616..12620
        Ident@12616..12620 "stat"
      Dot@12620..12621 "."
      Ident@12621..12626
        Ident@12621..12626 "Label"
    FuncArgs@12626..12634
      LParen@12626..12627 "("
      Ident@12627..12629 "fs"
      Comma@12629..12630 ","
      Ident@12630..12633 "ast"
      RParen@12633..12634 ")"
    StmtList@12634..13161
      DeclStmt@12634..12654
        Local@12634..12639 "local"
        DeclTarget@12639..12647
          Ident@12639..12647 "label_id"
        Assign@12647..12648 "="
        Index@12648..12654
          Ident@12648..12651
            Ident@12648..12651 "ast"
          LBracket@12651..12652 "["
          LiteralExpr@12652..12653
            Int@12652..12653 "1"
          RBracket@12653..12654 "]"
      IfStmt@12654..12706
        If@12654..12656 "if"
        BinOp@12656..12679
          FuncCall@12656..12670
            Ident@12656..12660
              Ident@12656..12660 "type"
            FuncArgs@12660..12670
              LParen@12660..12661 "("
              Ident@12661..12669
                Ident@12661..12669 "label_id"
              RParen@12669..12670 ")"
          Eq@12670..12672 "=="
          LiteralExpr@12672..12679
            String@12672..12679 "'table'"
        Then@12679..12683 "then"
        StmtList@12683..12703
          AssignStmt@12683..12703
            Ident@12683..12691
              Ident@12683..12691 "label_id"
            Assign@12691..12692 "="
            Index@12692..12703
              Ident@12692..12700
                Ident@12692..12700 "label_id"
              LBracket@12700..12701 "["
              LiteralExpr@12701..12702
                Int@12701..12702 "1"
              RBracket@12702..12703 "]"
        End@12703..12706 "end"
      IfStmt@12706..12823
        If@12706..12708 "if"
        Index@12708..12727
          BinOp@12708..12717
            Ident@12708..12710
              Ident@12708..12710 "fs"
            Dot@12710..12711 "."
            Ident@12711..12717
              Ident@12711..12717 "labels"
          LBracket@12717..12718 "["
          Ident@12718..12726
            Ident@12718..12726 "label_id"
          RBracket@12726..12727 "]"
        Then@12727..12731 "then"
        StmtList@12731..12767
          FuncCall@12731..12767
            Ident@12731..12736
              Ident@12731..12736 "error"
            FuncArgs@12736..12767
              LParen@12736..12737 "("
              LiteralExpr@12737..12766
                String@12737..12766 "\"Duplicate label in f ..."
              RParen@12766..12767 ")"
        ElseChain@12767..12823
          Else@12767..12771 "else"
          StmtList@12771..12820
            AssignStmt@12771..12820
              Index@12771..12790
                BinOp@12771..12780
                  Ident@12771..12773
                    Ident@12771..12773 "fs"
                  Dot@12773..12774 "."
                  Ident@12774..12780
                    Ident@12774..12780 "labels"
                LBracket@12780..12781 "["
                Ident@12781..12789
                  Ident@12781..12789 "label_id"
                RBracket@12789..12790 "]"
              Assign@12790..12791 "="
              TableExpr@12791..12820
                LCurly@12791..12792 "{"
                TableMapElem@12792..12800
                  Ident@12792..12794 "pc"
                  Assign@12794..12795 "="
                  BinOp@12795..12800
                    Ident@12795..12797
                      Ident@12795..12797 "fs"
                    Dot@12797..12798 "."
                    Ident@12798..12800
                      Ident@12798..12800 "pc"
                Semicolon@12800..12801 ";"
                TableMapElem@12801..12819
                  Ident@12801..12808 "nactvar"
                  Assign@12808..12809 "="
                  BinOp@12809..12819
                    Ident@12809..12811
                      Ident@12809..12811 "fs"
                    Dot@12811..12812 "."
                    Ident@12812..12819
                      Ident@12812..12819 "nactvar"
                RCurly@12819..12820 "}"
          End@12820..12823 "end"
      DeclStmt@12823..12860
        Local@12823..12828 "local"
        DeclTarget@12828..12833
          Ident@12828..12833 "gotos"
        Assign@12833..12834 "="
        Index@12834..12860
          BinOp@12834..12850
            Ident@12834..12836
              Ident@12834..12836 "fs"
            Dot@12836..12837 "."
            Ident@12837..12850
              Ident@12837..12850 "forward_gotos"
          LBracket@12850..12851 "["
          Ident@12851..12859
            Ident@12851..12859 "label_id"
          RBracket@12859..12860 "]"
      IfStmt@12860..13161
        If@12860..12862 "if"
        Ident@12862..12867
          Ident@12862..12867 "gotos"
        Then@12867..12871 "then"
        StmtList@12871..13158
          ForGenStmt@12871..13128
            For@12871..12874 "for"
            Ident@12874..12875 "_"
            Comma@12875..12876 ","
            Ident@12876..12883 "goto_pc"
            In@12883..12885 "in"
            FuncCall@12885..12898
              Ident@12885..12891
                Ident@12885..12891 "ipairs"
              FuncArgs@12891..12898
                LParen@12891..12892 "("
                Ident@12892..12897
                  Ident@12892..12897 "gotos"
                RParen@12897..12898 ")"
            BlockStmt@12898..13128
              Do@12898..12900 "do"
              StmtList@12900..13125
                DeclStmt@12900..12935
                  Local@12900..12905 "local"
                  DeclTarget@12905..12916
                    Ident@12905..12916 "close_instr"
                  Assign@12916..12917 "="
                  Index@12917..12935
                    BinOp@12917..12926
                      Ident@12917..12919
                        Ident@12917..12919 "fs"
                      Dot@12919..12920 "."
                      BinOp@12920..12926
                        Ident@12920..12921
                          Ident@12920..12921 "f"
                        Dot@12921..12922 "."
                        Ident@12922..12926
                          Ident@12922..12926 "code"
                    LBracket@12926..12927 "["
                    Ident@12927..12934
                      Ident@12927..12934 "goto_pc"
                    RBracket@12934..12935 "]"
                DeclStmt@12935..12970
                  Local@12935..12940 "local"
                  DeclTarget@12940..12949
                    Ident@12940..12949 "jmp_instr"
                  Assign@12949..12950 "="
                  Index@12950..12970
                    BinOp@12950..12959
                      Ident@12950..12952
                        Ident@12950..12952 "fs"
                      Dot@12952..12953 "."
                      BinOp@12953..12959
                        Ident@12953..12954
                          Ident@12953..12954 "f"
                        Dot@12954..12955 "."
                        Ident@12955..12959
                          Ident@12955..12959 "code"
                    LBracket@12959..12960 "["
                    BinOp@12960..12969
                      Ident@12960..12967
                        Ident@12960..12967 "goto_pc"
                      Plus@12967..12968 "+"
                      LiteralExpr@12968..12969
                        Int@12968..12969 "1"
                    RBracket@12969..12970 "]"
                DeclStmt@12970..13014
                  Local@12970..12975 "local"
                  DeclTarget@12975..12987
                    Ident@12975..12987 "goto_nactvar"
                  Assign@12987..12988 "="
                  FuncCall@12988..13014
                    BinOp@12988..13001
                      Ident@12988..12992
                        Ident@12988..12992 "luaP"
                      Colon@12992..12993 ":"
                      Ident@12993..13001
                        Ident@12993..13001 "GETARG_A"
                    FuncArgs@13001..13014
                      LParen@13001..13002 "("
                      Ident@13002..13013
                        Ident@13002..13013 "close_instr"
                      RParen@13013..13014 ")"
                IfStmt@13014..13083
                  If@13014..13016 "if"
                  BinOp@13016..13039
                    BinOp@13016..13026
                      Ident@13016..13018
                        Ident@13016..13018 "fs"
                      Dot@13018..13019 "."
                      Ident@13019..13026
                        Ident@13019..13026 "nactvar"
                    LAngle@13026..13027 "<"
                    Ident@13027..13039
                      Ident@13027..13039 "goto_nactvar"
                  Then@13039..13043 "then"
                  StmtList@13043..13080
                    FuncCall@13043..13080
                      BinOp@13043..13056
                        Ident@13043..13047
                          Ident@13043..13047 "luaP"
                        Colon@13047..13048 ":"
                        Ident@13048..13056
                          Ident@13048..13056 "SETARG_A"
                      FuncArgs@13056..13080
                        LParen@13056..13057 "("
                        Ident@13057..13068
                          Ident@13057..13068 "close_instr"
                        Comma@13068..13069 ","
                        BinOp@13069..13079
                          Ident@13069..13071
                            Ident@13069..13071 "fs"
                          Dot@13071..13072 "."
                          Ident@13072..13079
                            Ident@13072..13079 "nactvar"
                        RParen@13079..13080 ")"
                  End@13080..13083 "end"
                FuncCall@13083..13125
                  BinOp@13083..13098
                    Ident@13083..13087
                      Ident@13083..13087 "luaP"
                    Colon@13087..13088 ":"
                    Ident@13088..13098
                      Ident@13088..13098 "SETARG_sBx"
                  FuncArgs@13098..13125
                    LParen@13098..13099 "("
                    Ident@13099..13108
                      Ident@13099..13108 "jmp_instr"
                    Comma@13108..13109 ","
                    BinOp@13109..13124
                      BinOp@13109..13122
                        BinOp@13109..13114
                          Ident@13109..13111
                            Ident@13109..13111 "fs"
                          Dot@13111..13112 "."
                          Ident@13112..13114
                            Ident@13112..13114 "pc"
                        Minus@13114..13115 "-"
                        Ident@13115..13122
                          Ident@13115..13122 "goto_pc"
                      Minus@13122..13123 "-"
                      LiteralExpr@13123..13124
                        Int@13123..13124 "2"
                    RParen@13124..13125 ")"
              End@13125..13128 "end"
          AssignStmt@13128..13158
            Index@13128..13154
              BinOp@13128..13144
                Ident@13128..13130
                  Ident@13128..13130 "fs"
                Dot@13130..13131 "."
                Ident@13131..13144
                  Ident@13131..13144 "forward_gotos"
              LBracket@13144..13145 "["
              Ident@13145..13153
                Ident@13145..13153 "label_id"
              RBracket@13153..13154 "]"
            Assign@13154..13155 "="
            LiteralExpr@13155..13158
              Nil@13155..13158 "nil"
        End@13158..13161 "end"
    End@13161..13164 "end"
  FuncStmt@13164..13649
    Function@13164..13172 "function"
    BinOp@13172..13181
      Ident@13172..13176
        Ident@13172..13176 "stat"
      Dot@13176..13177 "."
      Ident@13177..13181
        Ident@13177..13181 "Goto"
    FuncArgs@13181..13189
      LParen@13181..13182 "("
      Ident@13182..13184 "fs"
      Comma@13184..13185 ","
      Ident@13185..13188 "ast"
      RParen@13188..13189 ")"
    StmtList@13189..13646
      DeclStmt@13189..13209
        Local@13189..13194 "local"
        DeclTarget@13194..13202
          Ident@13194..13202 "label_id"
        Assign@13202..13203 "="
        Index@13203..13209
          Ident@13203..13206
            Ident@13203..13206 "ast"
          LBracket@13206..13207 "["
          LiteralExpr@13207..13208
            Int@13207..13208 "1"
          RBracket@13208..13209 "]"
      IfStmt@13209..13261
        If@13209..13211 "if"
        BinOp@13211..13234
          FuncCall@13211..13225
            Ident@13211..13215
              Ident@13211..13215 "type"
            FuncArgs@13215..13225
              LParen@13215..13216 "("
              Ident@13216..13224
                Ident@13216..13224 "label_id"
              RParen@13224..13225 ")"
          Eq@13225..13227 "=="
          LiteralExpr@13227..13234
            String@13227..13234 "'table'"
        Then@13234..13238 "then"
        StmtList@13238..13258
          AssignStmt@13238..13258
            Ident@13238..13246
              Ident@13238..13246 "label_id"
            Assign@13246..13247 "="
            Index@13247..13258
              Ident@13247..13255
                Ident@13247..13255 "label_id"
              LBracket@13255..13256 "["
              LiteralExpr@13256..13257
                Int@13256..13257 "1"
              RBracket@13257..13258 "]"
        End@13258..13261 "end"
      DeclStmt@13261..13291
        Local@13261..13266 "local"
        DeclTarget@13266..13271
          Ident@13266..13271 "label"
        Assign@13271..13272 "="
        Index@13272..13291
          BinOp@13272..13281
            Ident@13272..13274
              Ident@13272..13274 "fs"
            Dot@13274..13275 "."
            Ident@13275..13281
              Ident@13275..13281 "labels"
          LBracket@13281..13282 "["
          Ident@13282..13290
            Ident@13282..13290 "label_id"
          RBracket@13290..13291 "]"
      IfStmt@13291..13646
        If@13291..13293 "if"
        Ident@13293..13298
          Ident@13293..13298 "label"
        Then@13298..13302 "then"
        StmtList@13302..13443
          IfStmt@13302..13380
            If@13302..13304 "if"
            BinOp@13304..13328
              BinOp@13304..13314
                Ident@13304..13306
                  Ident@13304..13306 "fs"
                Dot@13306..13307 "."
                Ident@13307..13314
                  Ident@13307..13314 "nactvar"
              RAngle@13314..13315 ">"
              BinOp@13315..13328
                Ident@13315..13320
                  Ident@13315..13320 "label"
                Dot@13320..13321 "."
                Ident@13321..13328
                  Ident@13321..13328 "nactvar"
            Then@13328..13332 "then"
            StmtList@13332..13377
              FuncCall@13332..13377
                BinOp@13332..13344
                  Ident@13332..13336
                    Ident@13332..13336 "luaK"
                  Colon@13336..13337 ":"
                  Ident@13337..13344
                    Ident@13337..13344 "codeABC"
                FuncArgs@13344..13377
                  LParen@13344..13345 "("
                  Ident@13345..13347
                    Ident@13345..13347 "fs"
                  Comma@13347..13348 ","
                  LiteralExpr@13348..13358
                    String@13348..13358 "\"OP_CLOSE\""
                  Comma@13358..13359 ","
                  BinOp@13359..13372
                    Ident@13359..13364
                      Ident@13359..13364 "label"
                    Dot@13364..13365 "."
                    Ident@13365..13372
                      Ident@13365..13372 "nactvar"
                  Comma@13372..13373 ","
                  LiteralExpr@13373..13374
                    Int@13373..13374 "0"
                  Comma@13374..13375 ","
                  LiteralExpr@13375..13376
                    Int@13375..13376 "0"
                  RParen@13376..13377 ")"
            End@13377..13380 "end"
          DeclStmt@13380..13408
            Local@13380..13385 "local"
            DeclTarget@13385..13391
              Ident@13385..13391 "offset"
            Assign@13391..13392 "="
            BinOp@13392..13408
              BinOp@13392..13406
                BinOp@13392..13400
                  Ident@13392..13397
                    Ident@13392..13397 "label"
                  Dot@13397..13398 "."
                  Ident@13398..13400
                    Ident@13398..13400 "pc"
                Minus@13400..13401 "-"
                BinOp@13401..13406
                  Ident@13401..13403
                    Ident@13401..13403 "fs"
                  Dot@13403..13404 "."
                  Ident@13404..13406
                    Ident@13404..13406 "pc"
              Minus@13406..13407 "-"
              LiteralExpr@13407..13408
                Int@13407..13408 "1"
          FuncCall@13408..13443
            BinOp@13408..13421
              Ident@13408..13412
                Ident@13408..13412 "luaK"
              Colon@13412..13413 ":"
              Ident@13413..13421
                Ident@13413..13421 "codeAsBx"
            FuncArgs@13421..13443
              LParen@13421..13422 "("
              Ident@13422..13424
                Ident@13422..13424 "fs"
              Comma@13424..13425 ","
              LiteralExpr@13425..13433
                String@13425..13433 "\"OP_JMP\""
              Comma@13433..13434 ","
              LiteralExpr@13434..13435
                Int@13434..13435 "0"
              Comma@13435..13436 ","
              Ident@13436..13442
                Ident@13436..13442 "offset"
              RParen@13442..13443 ")"
        ElseChain@13443..13646
          Else@13443..13447 "else"
          StmtList@13447..13643
            IfStmt@13447..13514
              If@13447..13449 "if"
              PrefixOp@13449..13478
                Not@13449..13452 "not"
                Index@13452..13478
                  BinOp@13452..13468
                    Ident@13452..13454
                      Ident@13452..13454 "fs"
                    Dot@13454..13455 "."
                    Ident@13455..13468
                      Ident@13455..13468 "forward_gotos"
                  LBracket@13468..13469 "["
                  Ident@13469..13477
                    Ident@13469..13477 "label_id"
                  RBracket@13477..13478 "]"
              Then@13478..13482 "then"
              StmtList@13482..13511
                AssignStmt@13482..13511
                  Index@13482..13508
                    BinOp@13482..13498
                      Ident@13482..13484
                        Ident@13482..13484 "fs"
                      Dot@13484..13485 "."
                      Ident@13485..13498
                        Ident@13485..13498 "forward_gotos"
                    LBracket@13498..13499 "["
                    Ident@13499..13507
                      Ident@13499..13507 "label_id"
                    RBracket@13507..13508 "]"
                  Assign@13508..13509 "="
                  TableExpr@13509..13511
                    LCurly@13509..13510 "{"
                    RCurly@13510..13511 "}"
              End@13511..13514 "end"
            FuncCall@13514..13560
              BinOp@13514..13526
                Ident@13514..13519
                  Ident@13514..13519 "table"
                Dot@13519..13520 "."
                Ident@13520..13526
                  Ident@13520..13526 "insert"
              FuncArgs@13526..13560
                LParen@13526..13527 "("
                Index@13527..13553
                  BinOp@13527..13543
                    Ident@13527..13529
                      Ident@13527..13529 "fs"
                    Dot@13529..13530 "."
                    Ident@13530..13543
                      Ident@13530..13543 "forward_gotos"
                  LBracket@13543..13544 "["
                  Ident@13544..13552
                    Ident@13544..13552 "label_id"
                  RBracket@13552..13553 "]"
                Comma@13553..13554 ","
                BinOp@13554..13559
                  Ident@13554..13556
                    Ident@13554..13556 "fs"
                  Dot@13556..13557 "."
                  Ident@13557..13559
                    Ident@13557..13559 "pc"
                RParen@13559..13560 ")"
            FuncCall@13560..13602
              BinOp@13560..13572
                Ident@13560..13564
                  Ident@13560..13564 "luaK"
                Colon@13564..13565 ":"
                Ident@13565..13572
                  Ident@13565..13572 "codeABC"
              FuncArgs@13572..13602
                LParen@13572..13573 "("
                Ident@13573..13575
                  Ident@13573..13575 "fs"
                Comma@13575..13576 ","
                LiteralExpr@13576..13586
                  String@13576..13586 "\"OP_CLOSE\""
                Comma@13586..13587 ","
                BinOp@13587..13597
                  Ident@13587..13589
                    Ident@13587..13589 "fs"
                  Dot@13589..13590 "."
                  Ident@13590..13597
                    Ident@13590..13597 "nactvar"
                Comma@13597..13598 ","
                LiteralExpr@13598..13599
                  Int@13598..13599 "0"
                Comma@13599..13600 ","
                LiteralExpr@13600..13601
                  Int@13600..13601 "0"
                RParen@13601..13602 ")"
            FuncCall@13602..13643
              BinOp@13602..13615
                Ident@13602..13606
                  Ident@13602..13606 "luaK"
                Colon@13606..13607 ":"
                Ident@13607..13615
                  Ident@13607..13615 "codeAsBx"
              FuncArgs@13615..13643
                LParen@13615..13616 "("
                Ident@13616..13618
                  Ident@13616..13618 "fs"
                Comma@13618..13619 ","
                LiteralExpr@13619..13627
                  String@13619..13627 "\"OP_JMP\""
                Comma@13627..13628 ","
                LiteralExpr@13628..13629
                  Int@13628..13629 "0"
                Comma@13629..13630 ","
                BinOp@13630..13642
                  Ident@13630..13634
                    Ident@13630..13634 "luaK"
                  Dot@13634..13635 "."
                  Ident@13635..13642
                    Ident@13635..13642 "NO_JUMP"
                RParen@13642..13643 ")"
          End@13643..13646 "end"
    End@13646..13649 "end"
  FuncStmt@13649..14017
    Function@13649..13657 "function"
    BinOp@13657..13666
      Ident@13657..13661
        Ident@13657..13661 "expr"
      Dot@13661..13662 "."
      Ident@13662..13666
        Ident@13662..13666 "expr"
    FuncArgs@13666..13676
      LParen@13666..13667 "("
      Ident@13667..13669 "fs"
      Comma@13669..13670 ","
      Ident@13670..13673 "ast"
      Comma@13673..13674 ","
      Ident@13674..13675 "v"
      RParen@13675..13676 ")"
    StmtList@13676..14014
      IfStmt@13676..13753
        If@13676..13678 "if"
        BinOp@13678..13696
          FuncCall@13678..13687
            Ident@13678..13682
              Ident@13678..13682 "type"
            FuncArgs@13682..13687
              LParen@13682..13683 "("
              Ident@13683..13686
                Ident@13683..13686 "ast"
              RParen@13686..13687 ")"
          NotEq@13687..13689 "~="
          LiteralExpr@13689..13696
            String@13689..13696 "\"table\""
        Then@13696..13700 "then"
        StmtList@13700..13750
          FuncCall@13700..13750
            Ident@13700..13705
              Ident@13700..13705 "error"
            FuncArgs@13705..13750
              LParen@13705..13706 "("
              BinOp@13706..13749
                LiteralExpr@13706..13731
                  String@13706..13731 "\"Expr AST expected, g ..."
                DDot@13731..13733 ".."
                FuncCall@13733..13749
                  BinOp@13733..13744
                    Ident@13733..13735
                      Ident@13733..13735 "pp"
                    Dot@13735..13736 "."
                    Ident@13736..13744
                      Ident@13736..13744 "tostring"
                  FuncArgs@13744..13749
                    LParen@13744..13745 "("
                    Ident@13745..13748
                      Ident@13745..13748 "ast"
                    RParen@13748..13749 ")"
              RParen@13749..13750 ")"
        End@13750..13753 "end"
      IfStmt@13753..13808
        If@13753..13755 "if"
        BinOp@13755..13767
          Ident@13755..13758
            Ident@13755..13758 "ast"
          Dot@13758..13759 "."
          Ident@13759..13767
            Ident@13759..13767 "lineinfo"
        Then@13767..13771 "then"
        StmtList@13771..13805
          AssignStmt@13771..13805
            BinOp@13771..13782
              Ident@13771..13773
                Ident@13771..13773 "fs"
              Dot@13773..13774 "."
              Ident@13774..13782
                Ident@13774..13782 "lastline"
            Assign@13782..13783 "="
            BinOp@13783..13805
              Ident@13783..13786
                Ident@13783..13786 "ast"
              Dot@13786..13787 "."
              BinOp@13787..13805
                Ident@13787..13795
                  Ident@13787..13795 "lineinfo"
                Dot@13795..13796 "."
                BinOp@13796..13805
                  Ident@13796..13800
                    Ident@13796..13800 "last"
                  Dot@13800..13801 "."
                  Ident@13801..13805
                    Ident@13801..13805 "line"
        End@13805..13808 "end"
      DeclStmt@13808..13833
        Local@13808..13813 "local"
        DeclTarget@13813..13819
          Ident@13813..13819 "parser"
        Assign@13819..13820 "="
        Index@13820..13833
          Ident@13820..13824
            Ident@13820..13824 "expr"
          LBracket@13824..13825 "["
          BinOp@13825..13832
            Ident@13825..13828
              Ident@13825..13828 "ast"
            Dot@13828..13829 "."
            Ident@13829..13832
              Ident@13829..13832 "tag"
          RBracket@13832..13833 "]"
      IfStmt@13833..14014
        If@13833..13835 "if"
        Ident@13835..13841
          Ident@13835..13841 "parser"
        Then@13841..13845 "then"
        StmtList@13845..13861
          FuncCall@13845..13861
            Ident@13845..13851
              Ident@13845..13851 "parser"
            FuncArgs@13851..13861
              LParen@13851..13852 "("
              Ident@13852..13854
                Ident@13852..13854 "fs"
              Comma@13854..13855 ","
              Ident@13855..13858
                Ident@13855..13858 "ast"
              Comma@13858..13859 ","
              Ident@13859..13860
                Ident@13859..13860 "v"
              RParen@13860..13861 ")"
        ElseChain@13861..14014
          IfStmt@13861..14014
            ElseIf@13861..13867 "elseif"
            PrefixOp@13867..13877
              Not@13867..13870 "not"
              BinOp@13870..13877
                Ident@13870..13873
                  Ident@13870..13873 "ast"
                Dot@13873..13874 "."
                Ident@13874..13877
                  Ident@13874..13877 "tag"
            Then@13877..13881 "then"
            StmtList@13881..13969
              FuncCall@13881..13969
                Ident@13881..13886
                  Ident@13881..13886 "error"
                FuncArgs@13886..13969
                  LParen@13886..13887 "("
                  BinOp@13887..13968
                    LiteralExpr@13887..13910
                      String@13887..13910 "\"No tag in expression \""
                    DDot@13910..13912 ".."
                    FuncCall@13912..13968
                      BinOp@13912..13923
                        Ident@13912..13914
                          Ident@13912..13914 "pp"
                        Dot@13914..13915 "."
                        Ident@13915..13923
                          Ident@13915..13923 "tostring"
                      FuncArgs@13923..13968
                        LParen@13923..13924 "("
                        Ident@13924..13927
                          Ident@13924..13927 "ast"
                        Comma@13927..13928 ","
                        TableExpr@13928..13967
                          LCurly@13928..13929 "{"
                          TableMapElem@13929..13940
                            Ident@13929..13937 "line_max"
                            Assign@13937..13938 "="
                            LiteralExpr@13938..13940
                              Int@13938..13940 "80"
                          Comma@13940..13941 ","
                          TableMapElem@13941..13952
                            Ident@13941..13950 "hide_hash"
                            Assign@13950..13951 "="
                            LiteralExpr@13951..13952
                              Int@13951..13952 "1"
                          Comma@13952..13953 ","
                          TableMapElem@13953..13966
                            Ident@13953..13964 "metalua_tag"
                            Assign@13964..13965 "="
                            LiteralExpr@13965..13966
                              Int@13965..13966 "1"
                          RCurly@13966..13967 "}"
                        RParen@13967..13968 ")"
                  RParen@13968..13969 ")"
            ElseChain@13969..14014
              Else@13969..13973 "else"
              StmtList@13973..14011
                FuncCall@13973..14011
                  Ident@13973..13978
                    Ident@13973..13978 "error"
                  FuncArgs@13978..14011
                    LParen@13978..13979 "("
                    BinOp@13979..14010
                      LiteralExpr@13979..14001
                        String@13979..14001 "\"No parser for node `\""
                      DDot@14001..14003 ".."
                      BinOp@14003..14010
                        Ident@14003..14006
                          Ident@14003..14006 "ast"
                        Dot@14006..14007 "."
                        Ident@14007..14010
                          Ident@14007..14010 "tag"
                    RParen@14010..14011 ")"
              End@14011..14014 "end"
    End@14014..14017 "end"
  FuncStmt@14017..14066
    Function@14017..14025 "function"
    BinOp@14025..14033
      Ident@14025..14029
        Ident@14025..14029 "expr"
      Dot@14029..14030 "."
      Ident@14030..14033
        Ident@14030..14033 "Nil"
    FuncArgs@14033..14043
      LParen@14033..14034 "("
      Ident@14034..14036 "fs"
      Comma@14036..14037 ","
      Ident@14037..14040 "ast"
      Comma@14040..14041 ","
      Ident@14041..14042 "v"
      RParen@14042..14043 ")"
    StmtList@14043..14063
      FuncCall@14043..14063
        Ident@14043..14051
          Ident@14043..14051 "init_exp"
        FuncArgs@14051..14063
          LParen@14051..14052 "("
          Ident@14052..14053
            Ident@14052..14053 "v"
          Comma@14053..14054 ","
          LiteralExpr@14054..14060
            String@14054..14060 "\"VNIL\""
          Comma@14060..14061 ","
          LiteralExpr@14061..14062
            Int@14061..14062 "0"
          RParen@14062..14063 ")"
    End@14063..14066 "end"
  FuncStmt@14066..14117
    Function@14066..14074 "function"
    BinOp@14074..14083
      Ident@14074..14078
        Ident@14074..14078 "expr"
      Dot@14078..14079 "."
      Ident@14079..14083
        Ident@14079..14083 "True"
    FuncArgs@14083..14093
      LParen@14083..14084 "("
      Ident@14084..14086 "fs"
      Comma@14086..14087 ","
      Ident@14087..14090 "ast"
      Comma@14090..14091 ","
      Ident@14091..14092 "v"
      RParen@14092..14093 ")"
    StmtList@14093..14114
      FuncCall@14093..14114
        Ident@14093..14101
          Ident@14093..14101 "init_exp"
        FuncArgs@14101..14114
          LParen@14101..14102 "("
          Ident@14102..14103
            Ident@14102..14103 "v"
          Comma@14103..14104 ","
          LiteralExpr@14104..14111
            String@14104..14111 "\"VTRUE\""
          Comma@14111..14112 ","
          LiteralExpr@14112..14113
            Int@14112..14113 "0"
          RParen@14113..14114 ")"
    End@14114..14117 "end"
  FuncStmt@14117..14170
    Function@14117..14125 "function"
    BinOp@14125..14135
      Ident@14125..14129
        Ident@14125..14129 "expr"
      Dot@14129..14130 "."
      Ident@14130..14135
        Ident@14130..14135 "False"
    FuncArgs@14135..14145
      LParen@14135..14136 "("
      Ident@14136..14138 "fs"
      Comma@14138..14139 ","
      Ident@14139..14142 "ast"
      Comma@14142..14143 ","
      Ident@14143..14144 "v"
      RParen@14144..14145 ")"
    StmtList@14145..14167
      FuncCall@14145..14167
        Ident@14145..14153
          Ident@14145..14153 "init_exp"
        FuncArgs@14153..14167
          LParen@14153..14154 "("
          Ident@14154..14155
            Ident@14154..14155 "v"
          Comma@14155..14156 ","
          LiteralExpr@14156..14164
            String@14156..14164 "\"VFALSE\""
          Comma@14164..14165 ","
          LiteralExpr@14165..14166
            Int@14165..14166 "0"
          RParen@14166..14167 ")"
    End@14167..14170 "end"
  FuncStmt@14170..14225
    Function@14170..14178 "function"
    BinOp@14178..14189
      Ident@14178..14182
        Ident@14178..14182 "expr"
      Dot@14182..14183 "."
      Ident@14183..14189
        Ident@14183..14189 "String"
    FuncArgs@14189..14199
      LParen@14189..14190 "("
      Ident@14190..14192 "fs"
      Comma@14192..14193 ","
      Ident@14193..14196 "ast"
      Comma@14196..14197 ","
      Ident@14197..14198 "v"
      RParen@14198..14199 ")"
    StmtList@14199..14222
      FuncCall@14199..14222
        Ident@14199..14209
          Ident@14199..14209 "codestring"
        FuncArgs@14209..14222
          LParen@14209..14210 "("
          Ident@14210..14212
            Ident@14210..14212 "fs"
          Comma@14212..14213 ","
          Ident@14213..14214
            Ident@14213..14214 "v"
          Comma@14214..14215 ","
          Index@14215..14221
            Ident@14215..14218
              Ident@14215..14218 "ast"
            LBracket@14218..14219 "["
            LiteralExpr@14219..14220
              Int@14219..14220 "1"
            RBracket@14220..14221 "]"
          RParen@14221..14222 ")"
    End@14222..14225 "end"
  FuncStmt@14225..14291
    Function@14225..14233 "function"
    BinOp@14233..14244
      Ident@14233..14237
        Ident@14233..14237 "expr"
      Dot@14237..14238 "."
      Ident@14238..14244
        Ident@14238..14244 "Number"
    FuncArgs@14244..14254
      LParen@14244..14245 "("
      Ident@14245..14247 "fs"
      Comma@14247..14248 ","
      Ident@14248..14251 "ast"
      Comma@14251..14252 ","
      Ident@14252..14253 "v"
      RParen@14253..14254 ")"
    StmtList@14254..14288
      FuncCall@14254..14275
        Ident@14254..14262
          Ident@14254..14262 "init_exp"
        FuncArgs@14262..14275
          LParen@14262..14263 "("
          Ident@14263..14264
            Ident@14263..14264 "v"
          Comma@14264..14265 ","
          LiteralExpr@14265..14272
            String@14265..14272 "\"VKNUM\""
          Comma@14272..14273 ","
          LiteralExpr@14273..14274
            Int@14273..14274 "0"
          RParen@14274..14275 ")"
      AssignStmt@14275..14288
        BinOp@14275..14281
          Ident@14275..14276
            Ident@14275..14276 "v"
          Dot@14276..14277 "."
          Ident@14277..14281
            Ident@14277..14281 "nval"
        Assign@14281..14282 "="
        Index@14282..14288
          Ident@14282..14285
            Ident@14282..14285 "ast"
          LBracket@14285..14286 "["
          LiteralExpr@14286..14287
            Int@14286..14287 "1"
          RBracket@14287..14288 "]"
    End@14288..14291 "end"
  FuncStmt@14291..14364
    Function@14291..14299 "function"
    BinOp@14299..14309
      Ident@14299..14303
        Ident@14299..14303 "expr"
      Dot@14303..14304 "."
      Ident@14304..14309
        Ident@14304..14309 "Paren"
    FuncArgs@14309..14319
      LParen@14309..14310 "("
      Ident@14310..14312 "fs"
      Comma@14312..14313 ","
      Ident@14313..14316 "ast"
      Comma@14316..14317 ","
      Ident@14317..14318 "v"
      RParen@14318..14319 ")"
    StmtList@14319..14361
      FuncCall@14319..14341
        BinOp@14319..14328
          Ident@14319..14323
            Ident@14319..14323 "expr"
          Dot@14323..14324 "."
          Ident@14324..14328
            Ident@14324..14328 "expr"
        FuncArgs@14328..14341
          LParen@14328..14329 "("
          Ident@14329..14331
            Ident@14329..14331 "fs"
          Comma@14331..14332 ","
          Index@14332..14338
            Ident@14332..14335
              Ident@14332..14335 "ast"
            LBracket@14335..14336 "["
            LiteralExpr@14336..14337
              Int@14336..14337 "1"
            RBracket@14337..14338 "]"
          Comma@14338..14339 ","
          Ident@14339..14340
            Ident@14339..14340 "v"
          RParen@14340..14341 ")"
      FuncCall@14341..14361
        BinOp@14341..14355
          Ident@14341..14345
            Ident@14341..14345 "luaK"
          Colon@14345..14346 ":"
          Ident@14346..14355
            Ident@14346..14355 "setoneret"
        FuncArgs@14355..14361
          LParen@14355..14356 "("
          Ident@14356..14358
            Ident@14356..14358 "fs"
          Comma@14358..14359 ","
          Ident@14359..14360
            Ident@14359..14360 "v"
          RParen@14360..14361 ")"
    End@14361..14364 "end"
  FuncStmt@14364..14591
    Function@14364..14372 "function"
    BinOp@14372..14381
      Ident@14372..14376
        Ident@14372..14376 "expr"
      Dot@14376..14377 "."
      Ident@14377..14381
        Ident@14377..14381 "Dots"
    FuncArgs@14381..14391
      LParen@14381..14382 "("
      Ident@14382..14384 "fs"
      Comma@14384..14385 ","
      Ident@14385..14388 "ast"
      Comma@14388..14389 ","
      Ident@14389..14390 "v"
      RParen@14390..14391 ")"
    StmtList@14391..14588
      FuncCall@14391..14445
        Ident@14391..14397
          Ident@14391..14397 "assert"
        FuncArgs@14397..14445
          LParen@14397..14398 "("
          BinOp@14398..14415
            BinOp@14398..14412
              Ident@14398..14400
                Ident@14398..14400 "fs"
              Dot@14400..14401 "."
              BinOp@14401..14412
                Ident@14401..14402
                  Ident@14401..14402 "f"
                Dot@14402..14403 "."
                Ident@14403..14412
                  Ident@14403..14412 "is_vararg"
            NotEq@14412..14414 "~="
            LiteralExpr@14414..14415
              Int@14414..14415 "0"
          Comma@14415..14416 ","
          LiteralExpr@14416..14444
            String@14416..14444 "\"No vararg in this fu ..."
          RParen@14444..14445 ")"
      IfStmt@14445..14532
        If@14445..14447 "if"
        BinOp@14447..14479
          BinOp@14447..14461
            Ident@14447..14449
              Ident@14447..14449 "fs"
            Dot@14449..14450 "."
            BinOp@14450..14461
              Ident@14450..14451
                Ident@14450..14451 "f"
              Dot@14451..14452 "."
              Ident@14452..14461
                Ident@14452..14461 "is_vararg"
          LAngle@14461..14462 "<"
          BinOp@14462..14479
            Ident@14462..14463
              Ident@14462..14463 "M"
            Dot@14463..14464 "."
            Ident@14464..14479
              Ident@14464..14479 "VARARG_NEEDSARG"
        Then@14479..14483 "then"
        StmtList@14483..14529
          AssignStmt@14483..14529
            BinOp@14483..14496
              BinOp@14483..14487
                Ident@14483..14485
                  Ident@14483..14485 "fs"
                Dot@14485..14486 "."
                Ident@14486..14487
                  Ident@14486..14487 "f"
              Dot@14487..14488 "."
              Ident@14488..14496
                Ident@14488..14496 "is_varag"
            Assign@14496..14497 "="
            BinOp@14497..14529
              BinOp@14497..14511
                Ident@14497..14499
                  Ident@14497..14499 "fs"
                Dot@14499..14500 "."
                BinOp@14500..14511
                  Ident@14500..14501
                    Ident@14500..14501 "f"
                  Dot@14501..14502 "."
                  Ident@14502..14511
                    Ident@14502..14511 "is_vararg"
              Minus@14511..14512 "-"
              BinOp@14512..14529
                Ident@14512..14513
                  Ident@14512..14513 "M"
                Dot@14513..14514 "."
                Ident@14514..14529
                  Ident@14514..14529 "VARARG_NEEDSARG"
        End@14529..14532 "end"
      FuncCall@14532..14588
        Ident@14532..14540
          Ident@14532..14540 "init_exp"
        FuncArgs@14540..14588
          LParen@14540..14541 "("
          Ident@14541..14542
            Ident@14541..14542 "v"
          Comma@14542..14543 ","
          LiteralExpr@14543..14552
            String@14543..14552 "\"VVARARG\""
          Comma@14552..14553 ","
          FuncCall@14553..14587
            BinOp@14553..14565
              Ident@14553..14557
                Ident@14553..14557 "luaK"
              Colon@14557..14558 ":"
              Ident@14558..14565
                Ident@14558..14565 "codeABC"
            FuncArgs@14565..14587
              LParen@14565..14566 "("
              Ident@14566..14568
                Ident@14566..14568 "fs"
              Comma@14568..14569 ","
              LiteralExpr@14569..14580
                String@14569..14580 "\"OP_VARARG\""
              Comma@14580..14581 ","
              LiteralExpr@14581..14582
                Int@14581..14582 "0"
              Comma@14582..14583 ","
              LiteralExpr@14583..14584
                Int@14583..14584 "1"
              Comma@14584..14585 ","
              LiteralExpr@14585..14586
                Int@14585..14586 "0"
              RParen@14586..14587 ")"
          RParen@14587..14588 ")"
    End@14588..14591 "end"
  FuncStmt@14591..15012
    Function@14591..14599 "function"
    BinOp@14599..14609
      Ident@14599..14603
        Ident@14599..14603 "expr"
      Dot@14603..14604 "."
      Ident@14604..14609
        Ident@14604..14609 "Table"
    FuncArgs@14609..14619
      LParen@14609..14610 "("
      Ident@14610..14612 "fs"
      Comma@14612..14613 ","
      Ident@14613..14616 "ast"
      Comma@14616..14617 ","
      Ident@14617..14618 "v"
      RParen@14618..14619 ")"
    StmtList@14619..15009
      DeclStmt@14619..14663
        Local@14619..14624 "local"
        DeclTarget@14624..14626
          Ident@14624..14626 "pc"
        Assign@14626..14627 "="
        FuncCall@14627..14663
          BinOp@14627..14639
            Ident@14627..14631
              Ident@14627..14631 "luaK"
            Colon@14631..14632 ":"
            Ident@14632..14639
              Ident@14632..14639 "codeABC"
          FuncArgs@14639..14663
            LParen@14639..14640 "("
            Ident@14640..14642
              Ident@14640..14642 "fs"
            Comma@14642..14643 ","
            LiteralExpr@14643..14656
              String@14643..14656 "\"OP_NEWTABLE\""
            Comma@14656..14657 ","
            LiteralExpr@14657..14658
              Int@14657..14658 "0"
            Comma@14658..14659 ","
            LiteralExpr@14659..14660
              Int@14659..14660 "0"
            Comma@14660..14661 ","
            LiteralExpr@14661..14662
              Int@14661..14662 "0"
            RParen@14662..14663 ")"
      DeclStmt@14663..14701
        Local@14663..14668 "local"
        DeclTarget@14668..14670
          Ident@14668..14670 "cc"
        Assign@14670..14671 "="
        TableExpr@14671..14701
          LCurly@14671..14672 "{"
          TableMapElem@14672..14676
            Ident@14672..14673 "v"
            Assign@14673..14674 "="
            TableExpr@14674..14676
              LCurly@14674..14675 "{"
              RCurly@14675..14676 "}"
          Comma@14676..14677 ","
          TableMapElem@14677..14681
            Ident@14677..14679 "na"
            Assign@14679..14680 "="
            LiteralExpr@14680..14681
              Int@14680..14681 "0"
          Comma@14681..14682 ","
          TableMapElem@14682..14686
            Ident@14682..14684 "nh"
            Assign@14684..14685 "="
            LiteralExpr@14685..14686
              Int@14685..14686 "0"
          Comma@14686..14687 ","
          TableMapElem@14687..14696
            Ident@14687..14694 "tostore"
            Assign@14694..14695 "="
            LiteralExpr@14695..14696
              Int@14695..14696 "0"
          Comma@14696..14697 ","
          TableMapElem@14697..14700
            Ident@14697..14698 "t"
            Assign@14698..14699 "="
            Ident@14699..14700
              Ident@14699..14700 "v"
          RCurly@14700..14701 "}"
      FuncCall@14701..14728
        Ident@14701..14709
          Ident@14701..14709 "init_exp"
        FuncArgs@14709..14728
          LParen@14709..14710 "("
          Ident@14710..14711
            Ident@14710..14711 "v"
          Comma@14711..14712 ","
          LiteralExpr@14712..14724
            String@14712..14724 "\"VRELOCABLE\""
          Comma@14724..14725 ","
          Ident@14725..14727
            Ident@14725..14727 "pc"
          RParen@14727..14728 ")"
      FuncCall@14728..14752
        Ident@14728..14736
          Ident@14728..14736 "init_exp"
        FuncArgs@14736..14752
          LParen@14736..14737 "("
          BinOp@14737..14741
            Ident@14737..14739
              Ident@14737..14739 "cc"
            Dot@14739..14740 "."
            Ident@14740..14741
              Ident@14740..14741 "v"
          Comma@14741..14742 ","
          LiteralExpr@14742..14749
            String@14742..14749 "\"VVOID\""
          Comma@14749..14750 ","
          LiteralExpr@14750..14751
            Int@14750..14751 "0"
          RParen@14751..14752 ")"
      FuncCall@14752..14774
        BinOp@14752..14768
          Ident@14752..14756
            Ident@14752..14756 "luaK"
          Colon@14756..14757 ":"
          Ident@14757..14768
            Ident@14757..14768 "exp2nextreg"
        FuncArgs@14768..14774
          LParen@14768..14769 "("
          Ident@14769..14771
            Ident@14769..14771 "fs"
          Comma@14771..14772 ","
          Ident@14772..14773
            Ident@14772..14773 "v"
          RParen@14773..14774 ")"
      ForNumStmt@14774..14905
        For@14774..14777 "for"
        Ident@14777..14778 "i"
        Assign@14778..14779 "="
        LiteralExpr@14779..14780
          Int@14779..14780 "1"
        Comma@14780..14781 ","
        PrefixOp@14781..14785
          Hash@14781..14782 "#"
          Ident@14782..14785
            Ident@14782..14785 "ast"
        BlockStmt@14785..14905
          Do@14785..14787 "do"
          StmtList@14787..14902
            FuncCall@14787..14824
              Ident@14787..14793
                Ident@14787..14793 "assert"
              FuncArgs@14793..14824
                LParen@14793..14794 "("
                BinOp@14794..14823
                  BinOp@14794..14809
                    BinOp@14794..14800
                      Ident@14794..14796
                        Ident@14794..14796 "cc"
                      Dot@14796..14797 "."
                      BinOp@14797..14800
                        Ident@14797..14798
                          Ident@14797..14798 "v"
                        Dot@14798..14799 "."
                        Ident@14799..14800
                          Ident@14799..14800 "k"
                    Eq@14800..14802 "=="
                    LiteralExpr@14802..14809
                      String@14802..14809 "\"VVOID\""
                  Or@14809..14811 "or"
                  BinOp@14811..14823
                    BinOp@14811..14821
                      Ident@14811..14813
                        Ident@14811..14813 "cc"
                      Dot@14813..14814 "."
                      Ident@14814..14821
                        Ident@14814..14821 "tostore"
                    RAngle@14821..14822 ">"
                    LiteralExpr@14822..14823
                      Int@14822..14823 "0"
                RParen@14823..14824 ")"
            FuncCall@14824..14845
              Ident@14824..14838
                Ident@14824..14838 "closelistfield"
              FuncArgs@14838..14845
                LParen@14838..14839 "("
                Ident@14839..14841
                  Ident@14839..14841 "fs"
                Comma@14841..14842 ","
                Ident@14842..14844
                  Ident@14842..14844 "cc"
                RParen@14844..14845 ")"
            Semicolon@14845..14846
              Semicolon@14845..14846 ";"
            SimpleExpr@14846..14902
              FuncCall@14846..14902
                Expr@14846..14888
                  LParen@14846..14847 "("
                  BinOp@14847..14887
                    BinOp@14847..14876
                      BinOp@14847..14865
                        BinOp@14847..14857
                          Index@14847..14853
                            Ident@14847..14850
                              Ident@14847..14850 "ast"
                            LBracket@14850..14851 "["
                            Ident@14851..14852
                              Ident@14851..14852 "i"
                            RBracket@14852..14853 "]"
                          Dot@14853..14854 "."
                          Ident@14854..14857
                            Ident@14854..14857 "tag"
                        Eq@14857..14859 "=="
                        LiteralExpr@14859..14865
                          String@14859..14865 "\"Pair\""
                      And@14865..14868 "and"
                      Ident@14868..14876
                        Ident@14868..14876 "recfield"
                    Or@14876..14878 "or"
                    Ident@14878..14887
                      Ident@14878..14887 "listfield"
                  RParen@14887..14888 ")"
                FuncArgs@14888..14902
                  LParen@14888..14889 "("
                  Ident@14889..14891
                    Ident@14889..14891 "fs"
                  Comma@14891..14892 ","
                  Index@14892..14898
                    Ident@14892..14895
                      Ident@14892..14895 "ast"
                    LBracket@14895..14896 "["
                    Ident@14896..14897
                      Ident@14896..14897 "i"
                    RBracket@14897..14898 "]"
                  Comma@14898..14899 ","
                  Ident@14899..14901
                    Ident@14899..14901 "cc"
                  RParen@14901..14902 ")"
          End@14902..14905 "end"
      FuncCall@14905..14925
        Ident@14905..14918
          Ident@14905..14918 "lastlistfield"
        FuncArgs@14918..14925
          LParen@14918..14919 "("
          Ident@14919..14921
            Ident@14919..14921 "fs"
          Comma@14921..14922 ","
          Ident@14922..14924
            Ident@14922..14924 "cc"
          RParen@14924..14925 ")"
      FuncCall@14925..14967
        BinOp@14925..14938
          Ident@14925..14929
            Ident@14925..14929 "luaP"
          Colon@14929..14930 ":"
          Ident@14930..14938
            Ident@14930..14938 "SETARG_B"
        FuncArgs@14938..14967
          LParen@14938..14939 "("
          Index@14939..14952
            BinOp@14939..14948
              Ident@14939..14941
                Ident@14939..14941 "fs"
              Dot@14941..14942 "."
              BinOp@14942..14948
                Ident@14942..14943
                  Ident@14942..14943 "f"
                Dot@14943..14944 "."
                Ident@14944..14948
                  Ident@14944..14948 "code"
            LBracket@14948..14949 "["
            Ident@14949..14951
              Ident@14949..14951 "pc"
            RBracket@14951..14952 "]"
          Comma@14952..14953 ","
          FuncCall@14953..14966
            Ident@14953..14959
              Ident@14953..14959 "int2fb"
            FuncArgs@14959..14966
              LParen@14959..14960 "("
              BinOp@14960..14965
                Ident@14960..14962
                  Ident@14960..14962 "cc"
                Dot@14962..14963 "."
                Ident@14963..14965
                  Ident@14963..14965 "na"
              RParen@14965..14966 ")"
          RParen@14966..14967 ")"
      FuncCall@14967..15009
        BinOp@14967..14980
          Ident@14967..14971
            Ident@14967..14971 "luaP"
          Colon@14971..14972 ":"
          Ident@14972..14980
            Ident@14972..14980 "SETARG_C"
        FuncArgs@14980..15009
          LParen@14980..14981 "("
          Index@14981..14994
            BinOp@14981..14990
              Ident@14981..14983
                Ident@14981..14983 "fs"
              Dot@14983..14984 "."
              BinOp@14984..14990
                Ident@14984..14985
                  Ident@14984..14985 "f"
                Dot@14985..14986 "."
                Ident@14986..14990
                  Ident@14986..14990 "code"
            LBracket@14990..14991 "["
            Ident@14991..14993
              Ident@14991..14993 "pc"
            RBracket@14993..14994 "]"
          Comma@14994..14995 ","
          FuncCall@14995..15008
            Ident@14995..15001
              Ident@14995..15001 "int2fb"
            FuncArgs@15001..15008
              LParen@15001..15002 "("
              BinOp@15002..15007
                Ident@15002..15004
                  Ident@15002..15004 "cc"
                Dot@15004..15005 "."
                Ident@15005..15007
                  Ident@15005..15007 "nh"
              RParen@15007..15008 ")"
          RParen@15008..15009 ")"
    End@15009..15012 "end"
  FuncStmt@15012..15323
    Function@15012..15020 "function"
    BinOp@15020..15033
      Ident@15020..15024
        Ident@15020..15024 "expr"
      Dot@15024..15025 "."
      Ident@15025..15033
        Ident@15025..15033 "Function"
    FuncArgs@15033..15043
      LParen@15033..15034 "("
      Ident@15034..15036 "fs"
      Comma@15036..15037 ","
      Ident@15037..15040 "ast"
      Comma@15040..15041 ","
      Ident@15041..15042 "v"
      RParen@15042..15043 ")"
    StmtList@15043..15320
      IfStmt@15043..15098
        If@15043..15045 "if"
        BinOp@15045..15057
          Ident@15045..15048
            Ident@15045..15048 "ast"
          Dot@15048..15049 "."
          Ident@15049..15057
            Ident@15049..15057 "lineinfo"
        Then@15057..15061 "then"
        StmtList@15061..15095
          AssignStmt@15061..15095
            BinOp@15061..15072
              Ident@15061..15063
                Ident@15061..15063 "fs"
              Dot@15063..15064 "."
              Ident@15064..15072
                Ident@15064..15072 "lastline"
            Assign@15072..15073 "="
            BinOp@15073..15095
              Ident@15073..15076
                Ident@15073..15076 "ast"
              Dot@15076..15077 "."
              BinOp@15077..15095
                Ident@15077..15085
                  Ident@15077..15085 "lineinfo"
                Dot@15085..15086 "."
                BinOp@15086..15095
                  Ident@15086..15090
                    Ident@15086..15090 "last"
                  Dot@15090..15091 "."
                  Ident@15091..15095
                    Ident@15091..15095 "line"
        End@15095..15098 "end"
      DeclStmt@15098..15123
        Local@15098..15103 "local"
        DeclTarget@15103..15109
          Ident@15103..15109 "new_fs"
        Assign@15109..15110 "="
        FuncCall@15110..15123
          Ident@15110..15119
            Ident@15110..15119 "open_func"
          FuncArgs@15119..15123
            LParen@15119..15120 "("
            Ident@15120..15122
              Ident@15120..15122 "fs"
            RParen@15122..15123 ")"
      IfStmt@15123..15236
        If@15123..15125 "if"
        BinOp@15125..15137
          Ident@15125..15128
            Ident@15125..15128 "ast"
          Dot@15128..15129 "."
          Ident@15129..15137
            Ident@15129..15137 "lineinfo"
        Then@15137..15141 "then"
        StmtList@15141..15233
          AssignStmt@15141..15233
            BinOp@15141..15161
              BinOp@15141..15149
                Ident@15141..15147
                  Ident@15141..15147 "new_fs"
                Dot@15147..15148 "."
                Ident@15148..15149
                  Ident@15148..15149 "f"
              Dot@15149..15150 "."
              Ident@15150..15161
                Ident@15150..15161 "lineDefined"
            Comma@15161..15162 ","
            BinOp@15162..15186
              BinOp@15162..15170
                Ident@15162..15168
                  Ident@15162..15168 "new_fs"
                Dot@15168..15169 "."
                Ident@15169..15170
                  Ident@15169..15170 "f"
              Dot@15170..15171 "."
              Ident@15171..15186
                Ident@15171..15186 "lastLineDefined"
            Assign@15186..15187 "="
            ExprList@15187..15233
              BinOp@15187..15210
                Ident@15187..15190
                  Ident@15187..15190 "ast"
                Dot@15190..15191 "."
                BinOp@15191..15210
                  Ident@15191..15199
                    Ident@15191..15199 "lineinfo"
                  Dot@15199..15200 "."
                  BinOp@15200..15210
                    Ident@15200..15205
                      Ident@15200..15205 "first"
                    Dot@15205..15206 "."
                    Ident@15206..15210
                      Ident@15206..15210 "line"
              Comma@15210..15211 ","
              BinOp@15211..15233
                Ident@15211..15214
                  Ident@15211..15214 "ast"
                Dot@15214..15215 "."
                BinOp@15215..15233
                  Ident@15215..15223
                    Ident@15215..15223 "lineinfo"
                  Dot@15223..15224 "."
                  BinOp@15224..15233
                    Ident@15224..15228
                      Ident@15224..15228 "last"
                    Dot@15228..15229 "."
                    Ident@15229..15233
                      Ident@15229..15233 "line"
        End@15233..15236 "end"
      FuncCall@15236..15258
        Ident@15236..15243
          Ident@15236..15243 "parlist"
        FuncArgs@15243..15258
          LParen@15243..15244 "("
          Ident@15244..15250
            Ident@15244..15250 "new_fs"
          Comma@15250..15251 ","
          Index@15251..15257
            Ident@15251..15254
              Ident@15251..15254 "ast"
            LBracket@15254..15255 "["
            LiteralExpr@15255..15256
              Int@15255..15256 "1"
            RBracket@15256..15257 "]"
          RParen@15257..15258 ")"
      FuncCall@15258..15278
        Ident@15258..15263
          Ident@15258..15263 "chunk"
        FuncArgs@15263..15278
          LParen@15263..15264 "("
          Ident@15264..15270
            Ident@15264..15270 "new_fs"
          Comma@15270..15271 ","
          Index@15271..15277
            Ident@15271..15274
              Ident@15271..15274 "ast"
            LBracket@15274..15275 "["
            LiteralExpr@15275..15276
              Int@15275..15276 "2"
            RBracket@15276..15277 "]"
          RParen@15277..15278 ")"
      FuncCall@15278..15296
        Ident@15278..15288
          Ident@15278..15288 "close_func"
        FuncArgs@15288..15296
          LParen@15288..15289 "("
          Ident@15289..15295
            Ident@15289..15295 "new_fs"
          RParen@15295..15296 ")"
      FuncCall@15296..15320
        Ident@15296..15307
          Ident@15296..15307 "pushclosure"
        FuncArgs@15307..15320
          LParen@15307..15308 "("
          Ident@15308..15310
            Ident@15308..15310 "fs"
          Comma@15310..15311 ","
          Ident@15311..15317
            Ident@15311..15317 "new_fs"
          Comma@15317..15318 ","
          Ident@15318..15319
            Ident@15318..15319 "v"
          RParen@15319..15320 ")"
    End@15320..15323 "end"
  FuncStmt@15323..15621
    Function@15323..15331 "function"
    BinOp@15331..15338
      Ident@15331..15335
        Ident@15331..15335 "expr"
      Dot@15335..15336 "."
      Ident@15336..15338
        Ident@15336..15338 "Op"
    FuncArgs@15338..15348
      LParen@15338..15339 "("
      Ident@15339..15341 "fs"
      Comma@15341..15342 ","
      Ident@15342..15345 "ast"
      Comma@15345..15346 ","
      Ident@15346..15347 "v"
      RParen@15347..15348 ")"
    StmtList@15348..15618
      IfStmt@15348..15403
        If@15348..15350 "if"
        BinOp@15350..15362
          Ident@15350..15353
            Ident@15350..15353 "ast"
          Dot@15353..15354 "."
          Ident@15354..15362
            Ident@15354..15362 "lineinfo"
        Then@15362..15366 "then"
        StmtList@15366..15400
          AssignStmt@15366..15400
            BinOp@15366..15377
              Ident@15366..15368
                Ident@15366..15368 "fs"
              Dot@15368..15369 "."
              Ident@15369..15377
                Ident@15369..15377 "lastline"
            Assign@15377..15378 "="
            BinOp@15378..15400
              Ident@15378..15381
                Ident@15378..15381 "ast"
              Dot@15381..15382 "."
              BinOp@15382..15400
                Ident@15382..15390
                  Ident@15382..15390 "lineinfo"
                Dot@15390..15391 "."
                BinOp@15391..15400
                  Ident@15391..15395
                    Ident@15391..15395 "last"
                  Dot@15395..15396 "."
                  Ident@15396..15400
                    Ident@15396..15400 "line"
        End@15400..15403 "end"
      DeclStmt@15403..15417
        Local@15403..15408 "local"
        DeclTarget@15408..15410
          Ident@15408..15410 "op"
        Assign@15410..15411 "="
        Index@15411..15417
          Ident@15411..15414
            Ident@15411..15414 "ast"
          LBracket@15414..15415 "["
          LiteralExpr@15415..15416
            Int@15415..15416 "1"
          RBracket@15416..15417 "]"
      IfStmt@15417..15618
        If@15417..15419 "if"
        BinOp@15419..15426
          PrefixOp@15419..15423
            Hash@15419..15420 "#"
            Ident@15420..15423
              Ident@15420..15423 "ast"
          Eq@15423..15425 "=="
          LiteralExpr@15425..15426
            Int@15425..15426 "2"
        Then@15426..15430 "then"
        StmtList@15430..15472
          FuncCall@15430..15452
            BinOp@15430..15439
              Ident@15430..15434
                Ident@15430..15434 "expr"
              Dot@15434..15435 "."
              Ident@15435..15439
                Ident@15435..15439 "expr"
            FuncArgs@15439..15452
              LParen@15439..15440 "("
              Ident@15440..15442
                Ident@15440..15442 "fs"
              Comma@15442..15443 ","
              Index@15443..15449
                Ident@15443..15446
                  Ident@15443..15446 "ast"
                LBracket@15446..15447 "["
                LiteralExpr@15447..15448
                  Int@15447..15448 "2"
                RBracket@15448..15449 "]"
              Comma@15449..15450 ","
              Ident@15450..15451
                Ident@15450..15451 "v"
              RParen@15451..15452 ")"
          FuncCall@15452..15472
            BinOp@15452..15463
              Ident@15452..15456
                Ident@15452..15456 "luaK"
              Colon@15456..15457 ":"
              Ident@15457..15463
                Ident@15457..15463 "prefix"
            FuncArgs@15463..15472
              LParen@15463..15464 "("
              Ident@15464..15466
                Ident@15464..15466 "fs"
              Comma@15466..15467 ","
              Ident@15467..15469
                Ident@15467..15469 "op"
              Comma@15469..15470 ","
              Ident@15470..15471
                Ident@15470..15471 "v"
              RParen@15471..15472 ")"
        ElseChain@15472..15618
          IfStmt@15472..15618
            ElseIf@15472..15478 "elseif"
            BinOp@15478..15485
              PrefixOp@15478..15482
                Hash@15478..15479 "#"
                Ident@15479..15482
                  Ident@15479..15482 "ast"
              Eq@15482..15484 "=="
              LiteralExpr@15484..15485
                Int@15484..15485 "3"
            Then@15485..15489 "then"
            StmtList@15489..15586
              DeclStmt@15489..15499
                Local@15489..15494 "local"
                DeclTarget@15494..15496
                  Ident@15494..15496 "v2"
                Assign@15496..15497 "="
                TableExpr@15497..15499
                  LCurly@15497..15498 "{"
                  RCurly@15498..15499 "}"
              FuncCall@15499..15521
                BinOp@15499..15508
                  Ident@15499..15503
                    Ident@15499..15503 "expr"
                  Dot@15503..15504 "."
                  Ident@15504..15508
                    Ident@15504..15508 "expr"
                FuncArgs@15508..15521
                  LParen@15508..15509 "("
                  Ident@15509..15511
                    Ident@15509..15511 "fs"
                  Comma@15511..15512 ","
                  Index@15512..15518
                    Ident@15512..15515
                      Ident@15512..15515 "ast"
                    LBracket@15515..15516 "["
                    LiteralExpr@15516..15517
                      Int@15516..15517 "2"
                    RBracket@15517..15518 "]"
                  Comma@15518..15519 ","
                  Ident@15519..15520
                    Ident@15519..15520 "v"
                  RParen@15520..15521 ")"
              FuncCall@15521..15540
                BinOp@15521..15531
                  Ident@15521..15525
                    Ident@15521..15525 "luaK"
                  Colon@15525..15526 ":"
                  Ident@15526..15531
                    Ident@15526..15531 "infix"
                FuncArgs@15531..15540
                  LParen@15531..15532 "("
                  Ident@15532..15534
                    Ident@15532..15534 "fs"
                  Comma@15534..15535 ","
                  Ident@15535..15537
                    Ident@15535..15537 "op"
                  Comma@15537..15538 ","
                  Ident@15538..15539
                    Ident@15538..15539 "v"
                  RParen@15539..15540 ")"
              FuncCall@15540..15563
                BinOp@15540..15549
                  Ident@15540..15544
                    Ident@15540..15544 "expr"
                  Dot@15544..15545 "."
                  Ident@15545..15549
                    Ident@15545..15549 "expr"
                FuncArgs@15549..15563
                  LParen@15549..15550 "("
                  Ident@15550..15552
                    Ident@15550..15552 "fs"
                  Comma@15552..15553 ","
                  Index@15553..15559
                    Ident@15553..15556
                      Ident@15553..15556 "ast"
                    LBracket@15556..15557 "["
                    LiteralExpr@15557..15558
                      Int@15557..15558 "3"
                    RBracket@15558..15559 "]"
                  Comma@15559..15560 ","
                  Ident@15560..15562
                    Ident@15560..15562 "v2"
                  RParen@15562..15563 ")"
              FuncCall@15563..15586
                BinOp@15563..15574
                  Ident@15563..15567
                    Ident@15563..15567 "luaK"
                  Colon@15567..15568 ":"
                  Ident@15568..15574
                    Ident@15568..15574 "posfix"
                FuncArgs@15574..15586
                  LParen@15574..15575 "("
                  Ident@15575..15577
                    Ident@15575..15577 "fs"
                  Comma@15577..15578 ","
                  Ident@15578..15580
                    Ident@15578..15580 "op"
                  Comma@15580..15581 ","
                  Ident@15581..15582
                    Ident@15581..15582 "v"
                  Comma@15582..15583 ","
                  Ident@15583..15585
                    Ident@15583..15585 "v2"
                  RParen@15585..15586 ")"
            ElseChain@15586..15618
              Else@15586..15590 "else"
              StmtList@15590..15615
                FuncCall@15590..15615
                  Ident@15590..15595
                    Ident@15590..15595 "error"
                  FuncArgs@15595..15615
                    LParen@15595..15596 "("
                    LiteralExpr@15596..15614
                      String@15596..15614 "\"Wrong arg number\""
                    RParen@15614..15615 ")"
              End@15615..15618 "end"
    End@15618..15621 "end"
  FuncStmt@15621..15715
    Function@15621..15629 "function"
    BinOp@15629..15638
      Ident@15629..15633
        Ident@15629..15633 "expr"
      Dot@15633..15634 "."
      Ident@15634..15638
        Ident@15634..15638 "Call"
    FuncArgs@15638..15648
      LParen@15638..15639 "("
      Ident@15639..15641 "fs"
      Comma@15641..15642 ","
      Ident@15642..15645 "ast"
      Comma@15645..15646 ","
      Ident@15646..15647 "v"
      RParen@15647..15648 ")"
    StmtList@15648..15712
      FuncCall@15648..15670
        BinOp@15648..15657
          Ident@15648..15652
            Ident@15648..15652 "expr"
          Dot@15652..15653 "."
          Ident@15653..15657
            Ident@15653..15657 "expr"
        FuncArgs@15657..15670
          LParen@15657..15658 "("
          Ident@15658..15660
            Ident@15658..15660 "fs"
          Comma@15660..15661 ","
          Index@15661..15667
            Ident@15661..15664
              Ident@15661..15664 "ast"
            LBracket@15664..15665 "["
            LiteralExpr@15665..15666
              Int@15665..15666 "1"
            RBracket@15666..15667 "]"
          Comma@15667..15668 ","
          Ident@15668..15669
            Ident@15668..15669 "v"
          RParen@15669..15670 ")"
      FuncCall@15670..15692
        BinOp@15670..15686
          Ident@15670..15674
            Ident@15670..15674 "luaK"
          Colon@15674..15675 ":"
          Ident@15675..15686
            Ident@15675..15686 "exp2nextreg"
        FuncArgs@15686..15692
          LParen@15686..15687 "("
          Ident@15687..15689
            Ident@15687..15689 "fs"
          Comma@15689..15690 ","
          Ident@15690..15691
            Ident@15690..15691 "v"
          RParen@15691..15692 ")"
      FuncCall@15692..15712
        Ident@15692..15700
          Ident@15692..15700 "funcargs"
        FuncArgs@15700..15712
          LParen@15700..15701 "("
          Ident@15701..15703
            Ident@15701..15703 "fs"
          Comma@15703..15704 ","
          Ident@15704..15707
            Ident@15704..15707 "ast"
          Comma@15707..15708 ","
          Ident@15708..15709
            Ident@15708..15709 "v"
          Comma@15709..15710 ","
          LiteralExpr@15710..15711
            Int@15710..15711 "2"
          RParen@15711..15712 ")"
    End@15712..15715 "end"
  FuncStmt@15715..15872
    Function@15715..15723 "function"
    BinOp@15723..15734
      Ident@15723..15727
        Ident@15723..15727 "expr"
      Dot@15727..15728 "."
      Ident@15728..15734
        Ident@15728..15734 "Invoke"
    FuncArgs@15734..15744
      LParen@15734..15735 "("
      Ident@15735..15737 "fs"
      Comma@15737..15738 ","
      Ident@15738..15741 "ast"
      Comma@15741..15742 ","
      Ident@15742..15743 "v"
      RParen@15743..15744 ")"
    StmtList@15744..15869
      FuncCall@15744..15766
        BinOp@15744..15753
          Ident@15744..15748
            Ident@15744..15748 "expr"
          Dot@15748..15749 "."
          Ident@15749..15753
            Ident@15749..15753 "expr"
        FuncArgs@15753..15766
          LParen@15753..15754 "("
          Ident@15754..15756
            Ident@15754..15756 "fs"
          Comma@15756..15757 ","
          Index@15757..15763
            Ident@15757..15760
              Ident@15757..15760 "ast"
            LBracket@15760..15761 "["
            LiteralExpr@15761..15762
              Int@15761..15762 "1"
            RBracket@15762..15763 "]"
          Comma@15763..15764 ","
          Ident@15764..15765
            Ident@15764..15765 "v"
          RParen@15765..15766 ")"
      FuncCall@15766..15790
        BinOp@15766..15784
          Ident@15766..15770
            Ident@15766..15770 "luaK"
          Colon@15770..15771 ":"
          Ident@15771..15784
            Ident@15771..15784 "dischargevars"
        FuncArgs@15784..15790
          LParen@15784..15785 "("
          Ident@15785..15787
            Ident@15785..15787 "fs"
          Comma@15787..15788 ","
          Ident@15788..15789
            Ident@15788..15789 "v"
          RParen@15789..15790 ")"
      DeclStmt@15790..15801
        Local@15790..15795 "local"
        DeclTarget@15795..15798
          Ident@15795..15798 "key"
        Assign@15798..15799 "="
        TableExpr@15799..15801
          LCurly@15799..15800 "{"
          RCurly@15800..15801 "}"
      FuncCall@15801..15829
        Ident@15801..15811
          Ident@15801..15811 "codestring"
        FuncArgs@15811..15829
          LParen@15811..15812 "("
          Ident@15812..15814
            Ident@15812..15814 "fs"
          Comma@15814..15815 ","
          Ident@15815..15818
            Ident@15815..15818 "key"
          Comma@15818..15819 ","
          Index@15819..15828
            Index@15819..15825
              Ident@15819..15822
                Ident@15819..15822 "ast"
              LBracket@15822..15823 "["
              LiteralExpr@15823..15824
                Int@15823..15824 "2"
              RBracket@15824..15825 "]"
            LBracket@15825..15826 "["
            LiteralExpr@15826..15827
              Int@15826..15827 "1"
            RBracket@15827..15828 "]"
          RParen@15828..15829 ")"
      FuncCall@15829..15849
        BinOp@15829..15839
          Ident@15829..15833
            Ident@15829..15833 "luaK"
          Colon@15833..15834 ":"
          Ident@15834..15839
            Ident@15834..15839 "_self"
        FuncArgs@15839..15849
          LParen@15839..15840 "("
          Ident@15840..15842
            Ident@15840..15842 "fs"
          Comma@15842..15843 ","
          Ident@15843..15844
            Ident@15843..15844 "v"
          Comma@15844..15845 ","
          Ident@15845..15848
            Ident@15845..15848 "key"
          RParen@15848..15849 ")"
      FuncCall@15849..15869
        Ident@15849..15857
          Ident@15849..15857 "funcargs"
        FuncArgs@15857..15869
          LParen@15857..15858 "("
          Ident@15858..15860
            Ident@15858..15860 "fs"
          Comma@15860..15861 ","
          Ident@15861..15864
            Ident@15861..15864 "ast"
          Comma@15864..15865 ","
          Ident@15865..15866
            Ident@15865..15866 "v"
          Comma@15866..15867 ","
          LiteralExpr@15867..15868
            Int@15867..15868 "3"
          RParen@15868..15869 ")"
    End@15869..15872 "end"
  FuncStmt@15872..16170
    Function@15872..15880 "function"
    BinOp@15880..15890
      Ident@15880..15884
        Ident@15880..15884 "expr"
      Dot@15884..15885 "."
      Ident@15885..15890
        Ident@15885..15890 "Index"
    FuncArgs@15890..15900
      LParen@15890..15891 "("
      Ident@15891..15893 "fs"
      Comma@15893..15894 ","
      Ident@15894..15897 "ast"
      Comma@15897..15898 ","
      Ident@15898..15899 "v"
      RParen@15899..15900 ")"
    StmtList@15900..16167
      IfStmt@15900..16000
        If@15900..15902 "if"
        BinOp@15902..15909
          PrefixOp@15902..15906
            Hash@15902..15903 "#"
            Ident@15903..15906
              Ident@15903..15906 "ast"
          NotEq@15906..15908 "~="
          LiteralExpr@15908..15909
            Int@15908..15909 "2"
        Then@15909..15913 "then"
        StmtList@15913..15997
          FuncCall@15913..15940
            Ident@15913..15918
              Ident@15913..15918 "print"
            FuncArgs@15918..15940
              LParen@15918..15919 "("
              LiteralExpr@15919..15939
                String@15919..15939 "\"\\n\\nBAD INDEX AST:\""
              RParen@15939..15940 ")"
          FuncCall@15940..15953
            BinOp@15940..15948
              Ident@15940..15942
                Ident@15940..15942 "pp"
              Dot@15942..15943 "."
              Ident@15943..15948
                Ident@15943..15948 "print"
            FuncArgs@15948..15953
              LParen@15948..15949 "("
              Ident@15949..15952
                Ident@15949..15952 "ast"
              RParen@15952..15953 ")"
          FuncCall@15953..15997
            Ident@15953..15958
              Ident@15953..15958 "error"
            FuncArgs@15958..15997
              LParen@15958..15959 "("
              LiteralExpr@15959..15996
                String@15959..15996 "\"generalized indexes  ..."
              RParen@15996..15997 ")"
        End@15997..16000 "end"
      IfStmt@16000..16055
        If@16000..16002 "if"
        BinOp@16002..16014
          Ident@16002..16005
            Ident@16002..16005 "ast"
          Dot@16005..16006 "."
          Ident@16006..16014
            Ident@16006..16014 "lineinfo"
        Then@16014..16018 "then"
        StmtList@16018..16052
          AssignStmt@16018..16052
            BinOp@16018..16029
              Ident@16018..16020
                Ident@16018..16020 "fs"
              Dot@16020..16021 "."
              Ident@16021..16029
                Ident@16021..16029 "lastline"
            Assign@16029..16030 "="
            BinOp@16030..16052
              Ident@16030..16033
                Ident@16030..16033 "ast"
              Dot@16033..16034 "."
              BinOp@16034..16052
                Ident@16034..16042
                  Ident@16034..16042 "lineinfo"
                Dot@16042..16043 "."
                BinOp@16043..16052
                  Ident@16043..16047
                    Ident@16043..16047 "last"
                  Dot@16047..16048 "."
                  Ident@16048..16052
                    Ident@16048..16052 "line"
        End@16052..16055 "end"
      FuncCall@16055..16077
        BinOp@16055..16064
          Ident@16055..16059
            Ident@16055..16059 "expr"
          Dot@16059..16060 "."
          Ident@16060..16064
            Ident@16060..16064 "expr"
        FuncArgs@16064..16077
          LParen@16064..16065 "("
          Ident@16065..16067
            Ident@16065..16067 "fs"
          Comma@16067..16068 ","
          Index@16068..16074
            Ident@16068..16071
              Ident@16068..16071 "ast"
            LBracket@16071..16072 "["
            LiteralExpr@16072..16073
              Int@16072..16073 "1"
            RBracket@16073..16074 "]"
          Comma@16074..16075 ","
          Ident@16075..16076
            Ident@16075..16076 "v"
          RParen@16076..16077 ")"
      FuncCall@16077..16098
        BinOp@16077..16092
          Ident@16077..16081
            Ident@16077..16081 "luaK"
          Colon@16081..16082 ":"
          Ident@16082..16092
            Ident@16082..16092 "exp2anyreg"
        FuncArgs@16092..16098
          LParen@16092..16093 "("
          Ident@16093..16095
            Ident@16093..16095 "fs"
          Comma@16095..16096 ","
          Ident@16096..16097
            Ident@16096..16097 "v"
          RParen@16097..16098 ")"
      DeclStmt@16098..16107
        Local@16098..16103 "local"
        DeclTarget@16103..16104
          Ident@16103..16104 "k"
        Assign@16104..16105 "="
        TableExpr@16105..16107
          LCurly@16105..16106 "{"
          RCurly@16106..16107 "}"
      FuncCall@16107..16129
        BinOp@16107..16116
          Ident@16107..16111
            Ident@16107..16111 "expr"
          Dot@16111..16112 "."
          Ident@16112..16116
            Ident@16112..16116 "expr"
        FuncArgs@16116..16129
          LParen@16116..16117 "("
          Ident@16117..16119
            Ident@16117..16119 "fs"
          Comma@16119..16120 ","
          Index@16120..16126
            Ident@16120..16123
              Ident@16120..16123 "ast"
            LBracket@16123..16124 "["
            LiteralExpr@16124..16125
              Int@16124..16125 "2"
            RBracket@16125..16126 "]"
          Comma@16126..16127 ","
          Ident@16127..16128
            Ident@16127..16128 "k"
          RParen@16128..16129 ")"
      FuncCall@16129..16147
        BinOp@16129..16141
          Ident@16129..16133
            Ident@16129..16133 "luaK"
          Colon@16133..16134 ":"
          Ident@16134..16141
            Ident@16134..16141 "exp2val"
        FuncArgs@16141..16147
          LParen@16141..16142 "("
          Ident@16142..16144
            Ident@16142..16144 "fs"
          Comma@16144..16145 ","
          Ident@16145..16146
            Ident@16145..16146 "k"
          RParen@16146..16147 ")"
      FuncCall@16147..16167
        BinOp@16147..16159
          Ident@16147..16151
            Ident@16147..16151 "luaK"
          Colon@16151..16152 ":"
          Ident@16152..16159
            Ident@16152..16159 "indexed"
        FuncArgs@16159..16167
          LParen@16159..16160 "("
          Ident@16160..16162
            Ident@16160..16162 "fs"
          Comma@16162..16163 ","
          Ident@16163..16164
            Ident@16163..16164 "v"
          Comma@16164..16165 ","
          Ident@16165..16166
            Ident@16165..16166 "k"
          RParen@16166..16167 ")"
    End@16167..16170 "end"
  FuncStmt@16170..16241
    Function@16170..16178 "function"
    BinOp@16178..16185
      Ident@16178..16182
        Ident@16178..16182 "expr"
      Dot@16182..16183 "."
      Ident@16183..16185
        Ident@16183..16185 "Id"
    FuncArgs@16185..16195
      LParen@16185..16186 "("
      Ident@16186..16188 "fs"
      Comma@16188..16189 ","
      Ident@16189..16192 "ast"
      Comma@16192..16193 ","
      Ident@16193..16194 "v"
      RParen@16194..16195 ")"
    StmtList@16195..16238
      FuncCall@16195..16216
        Ident@16195..16201
          Ident@16195..16201 "assert"
        FuncArgs@16201..16216
          LParen@16201..16202 "("
          BinOp@16202..16215
            BinOp@16202..16209
              Ident@16202..16205
                Ident@16202..16205 "ast"
              Dot@16205..16206 "."
              Ident@16206..16209
                Ident@16206..16209 "tag"
            Eq@16209..16211 "=="
            LiteralExpr@16211..16215
              String@16211..16215 "\"Id\""
          RParen@16215..16216 ")"
      FuncCall@16216..16238
        Ident@16216..16225
          Ident@16216..16225 "singlevar"
        FuncArgs@16225..16238
          LParen@16225..16226 "("
          Ident@16226..16228
            Ident@16226..16228 "fs"
          Comma@16228..16229 ","
          Index@16229..16235
            Ident@16229..16232
              Ident@16229..16232 "ast"
            LBracket@16232..16233 "["
            LiteralExpr@16233..16234
              Int@16233..16234 "1"
            RBracket@16234..16235 "]"
          Comma@16235..16236 ","
          Ident@16236..16237
            Ident@16236..16237 "v"
          RParen@16237..16238 ")"
    End@16238..16241 "end"
  FuncStmt@16241..16670
    Function@16241..16249 "function"
    BinOp@16249..16258
      Ident@16249..16253
        Ident@16249..16253 "expr"
      Dot@16253..16254 "."
      Ident@16254..16258
        Ident@16254..16258 "Stat"
    FuncArgs@16258..16268
      LParen@16258..16259 "("
      Ident@16259..16261 "fs"
      Comma@16261..16262 ","
      Ident@16262..16265 "ast"
      Comma@16265..16266 ","
      Ident@16266..16267 "v"
      RParen@16267..16268 ")"
    StmtList@16268..16667
      DeclStmt@16268..16296
        Local@16268..16273 "local"
        DeclTarget@16273..16285
          Ident@16273..16285 "save_nactvar"
        Assign@16285..16286 "="
        BinOp@16286..16296
          Ident@16286..16288
            Ident@16286..16288 "fs"
          Dot@16288..16289 "."
          Ident@16289..16296
            Ident@16289..16296 "nactvar"
      DeclStmt@16296..16320
        Local@16296..16301 "local"
        DeclTarget@16301..16309
          Ident@16301..16309 "dest_reg"
        Assign@16309..16310 "="
        BinOp@16310..16320
          Ident@16310..16312
            Ident@16310..16312 "fs"
          Dot@16312..16313 "."
          Ident@16313..16320
            Ident@16313..16320 "freereg"
      DeclStmt@16320..16339
        Local@16320..16325 "local"
        DeclTarget@16325..16336
          Ident@16325..16336 "save_actvar"
        Assign@16336..16337 "="
        TableExpr@16337..16339
          LCurly@16337..16338 "{"
          RCurly@16338..16339 "}"
      BlockStmt@16339..16433
        Do@16339..16341 "do"
        StmtList@16341..16430
          DeclStmt@16341..16358
            Local@16341..16346 "local"
            DeclTarget@16346..16347
              Ident@16346..16347 "i"
            Assign@16347..16348 "="
            BinOp@16348..16358
              Ident@16348..16350
                Ident@16348..16350 "fs"
              Dot@16350..16351 "."
              Ident@16351..16358
                Ident@16351..16358 "nactvar"
          WhileStmt@16358..16430
            While@16358..16363 "while"
            LiteralExpr@16363..16367
              True@16363..16367 "true"
            BlockStmt@16367..16430
              Do@16367..16369 "do"
              StmtList@16369..16427
                DeclStmt@16369..16388
                  Local@16369..16374 "local"
                  DeclTarget@16374..16375
                    Ident@16374..16375 "v"
                  Assign@16375..16376 "="
                  Index@16376..16388
                    BinOp@16376..16385
                      Ident@16376..16378
                        Ident@16376..16378 "fs"
                      Dot@16378..16379 "."
                      Ident@16379..16385
                        Ident@16379..16385 "actvar"
                    LBracket@16385..16386 "["
                    Ident@16386..16387
                      Ident@16386..16387 "i"
                    RBracket@16387..16388 "]"
                IfStmt@16388..16406
                  If@16388..16390 "if"
                  PrefixOp@16390..16394
                    Not@16390..16393 "not"
                    Ident@16393..16394
                      Ident@16393..16394 "v"
                  Then@16394..16398 "then"
                  StmtList@16398..16403
                    BreakStmt@16398..16403
                      Break@16398..16403 "break"
                  End@16403..16406 "end"
                AssignStmt@16406..16422
                  Index@16406..16420
                    Ident@16406..16417
                      Ident@16406..16417 "save_actvar"
                    LBracket@16417..16418 "["
                    Ident@16418..16419
                      Ident@16418..16419 "i"
                    RBracket@16419..16420 "]"
                  Assign@16420..16421 "="
                  Ident@16421..16422
                    Ident@16421..16422 "v"
                AssignStmt@16422..16427
                  Ident@16422..16423
                    Ident@16422..16423 "i"
                  Assign@16423..16424 "="
                  BinOp@16424..16427
                    Ident@16424..16425
                      Ident@16424..16425 "i"
                    Plus@16425..16426 "+"
                    LiteralExpr@16426..16427
                      Int@16426..16427 "1"
              End@16427..16430 "end"
        End@16430..16433 "end"
      AssignStmt@16433..16454
        BinOp@16433..16443
          Ident@16433..16435
            Ident@16433..16435 "fs"
          Dot@16435..16436 "."
          Ident@16436..16443
            Ident@16436..16443 "nactvar"
        Assign@16443..16444 "="
        BinOp@16444..16454
          Ident@16444..16446
            Ident@16444..16446 "fs"
          Dot@16446..16447 "."
          Ident@16447..16454
            Ident@16447..16454 "freereg"
      FuncCall@16454..16477
        Ident@16454..16464
          Ident@16454..16464 "enterblock"
        FuncArgs@16464..16477
          LParen@16464..16465 "("
          Ident@16465..16467
            Ident@16465..16467 "fs"
          Comma@16467..16468 ","
          TableExpr@16468..16470
            LCurly@16468..16469 "{"
            RCurly@16469..16470 "}"
          Comma@16470..16471 ","
          LiteralExpr@16471..16476
            False@16471..16476 "false"
          RParen@16476..16477 ")"
      FuncCall@16477..16493
        Ident@16477..16482
          Ident@16477..16482 "chunk"
        FuncArgs@16482..16493
          LParen@16482..16483 "("
          Ident@16483..16485
            Ident@16483..16485 "fs"
          Comma@16485..16486 ","
          Index@16486..16492
            Ident@16486..16489
              Ident@16486..16489 "ast"
            LBracket@16489..16490 "["
            LiteralExpr@16490..16491
              Int@16490..16491 "1"
            RBracket@16491..16492 "]"
          RParen@16492..16493 ")"
      FuncCall@16493..16515
        BinOp@16493..16502
          Ident@16493..16497
            Ident@16493..16497 "expr"
          Dot@16497..16498 "."
          Ident@16498..16502
            Ident@16498..16502 "expr"
        FuncArgs@16502..16515
          LParen@16502..16503 "("
          Ident@16503..16505
            Ident@16503..16505 "fs"
          Comma@16505..16506 ","
          Index@16506..16512
            Ident@16506..16509
              Ident@16506..16509 "ast"
            LBracket@16509..16510 "["
            LiteralExpr@16510..16511
              Int@16510..16511 "2"
            RBracket@16511..16512 "]"
          Comma@16512..16513 ","
          Ident@16513..16514
            Ident@16513..16514 "v"
          RParen@16514..16515 ")"
      FuncCall@16515..16537
        BinOp@16515..16531
          Ident@16515..16519
            Ident@16515..16519 "luaK"
          Colon@16519..16520 ":"
          Ident@16520..16531
            Ident@16520..16531 "exp2nextreg"
        FuncArgs@16531..16537
          LParen@16531..16532 "("
          Ident@16532..16534
            Ident@16532..16534 "fs"
          Comma@16534..16535 ","
          Ident@16535..16536
            Ident@16535..16536 "v"
          RParen@16536..16537 ")"
      FuncCall@16537..16551
        Ident@16537..16547
          Ident@16537..16547 "leaveblock"
        FuncArgs@16547..16551
          LParen@16547..16548 "("
          Ident@16548..16550
            Ident@16548..16550 "fs"
          RParen@16550..16551 ")"
      FuncCall@16551..16578
        BinOp@16551..16563
          Ident@16551..16555
            Ident@16551..16555 "luaK"
          Colon@16555..16556 ":"
          Ident@16556..16563
            Ident@16556..16563 "exp2reg"
        FuncArgs@16563..16578
          LParen@16563..16564 "("
          Ident@16564..16566
            Ident@16564..16566 "fs"
          Comma@16566..16567 ","
          Ident@16567..16568
            Ident@16567..16568 "v"
          Comma@16568..16569 ","
          Ident@16569..16577
            Ident@16569..16577 "dest_reg"
          RParen@16577..16578 ")"
      AssignStmt@16578..16599
        BinOp@16578..16588
          Ident@16578..16580
            Ident@16578..16580 "fs"
          Dot@16580..16581 "."
          Ident@16581..16588
            Ident@16581..16588 "freereg"
        Assign@16588..16589 "="
        BinOp@16589..16599
          Ident@16589..16597
            Ident@16589..16597 "dest_reg"
          Plus@16597..16598 "+"
          LiteralExpr@16598..16599
            Int@16598..16599 "1"
      AssignStmt@16599..16622
        BinOp@16599..16609
          Ident@16599..16601
            Ident@16599..16601 "fs"
          Dot@16601..16602 "."
          Ident@16602..16609
            Ident@16602..16609 "nactvar"
        Assign@16609..16610 "="
        Ident@16610..16622
          Ident@16610..16622 "save_nactvar"
      ForGenStmt@16622..16667
        For@16622..16625 "for"
        Ident@16625..16626 "i"
        Comma@16626..16627 ","
        Ident@16627..16628 "j"
        In@16628..16630 "in"
        FuncCall@16630..16648
          Ident@16630..16635
            Ident@16630..16635 "pairs"
          FuncArgs@16635..16648
            LParen@16635..16636 "("
            Ident@16636..16647
              Ident@16636..16647 "save_actvar"
            RParen@16647..16648 ")"
        BlockStmt@16648..16667
          Do@16648..16650 "do"
          StmtList@16650..16664
            AssignStmt@16650..16664
              Index@16650..16662
                BinOp@16650..16659
                  Ident@16650..16652
                    Ident@16650..16652 "fs"
                  Dot@16652..16653 "."
                  Ident@16653..16659
                    Ident@16653..16659 "actvar"
                LBracket@16659..16660 "["
                Ident@16660..16661
                  Ident@16660..16661 "i"
                RBracket@16661..16662 "]"
              Assign@16662..16663 "="
              Ident@16663..16664
                Ident@16663..16664 "j"
          End@16664..16667 "end"
    End@16667..16670 "end"
  FuncStmt@16670..16901
    Function@16670..16678 "function"
    BinOp@16678..16692
      Ident@16678..16679
        Ident@16678..16679 "M"
      Dot@16679..16680 "."
      Ident@16680..16692
        Ident@16680..16692 "ast_to_proto"
    FuncArgs@16692..16704
      LParen@16692..16693 "("
      Ident@16693..16696 "ast"
      Comma@16696..16697 ","
      Ident@16697..16703 "source"
      RParen@16703..16704 ")"
    StmtList@16704..16898
      DeclStmt@16704..16726
        Local@16704..16709 "local"
        DeclTarget@16709..16711
          Ident@16709..16711 "fs"
        Assign@16711..16712 "="
        FuncCall@16712..16726
          Ident@16712..16721
            Ident@16712..16721 "open_func"
          FuncArgs@16721..16726
            LParen@16721..16722 "("
            LiteralExpr@16722..16725
              Nil@16722..16725 "nil"
            RParen@16725..16726 ")"
      AssignStmt@16726..16758
        BinOp@16726..16740
          BinOp@16726..16730
            Ident@16726..16728
              Ident@16726..16728 "fs"
            Dot@16728..16729 "."
            Ident@16729..16730
              Ident@16729..16730 "f"
          Dot@16730..16731 "."
          Ident@16731..16740
            Ident@16731..16740 "is_vararg"
        Assign@16740..16741 "="
        BinOp@16741..16758
          Ident@16741..16742
            Ident@16741..16742 "M"
          Dot@16742..16743 "."
          Ident@16743..16758
            Ident@16743..16758 "VARARG_ISVARARG"
      FuncCall@16758..16771
        Ident@16758..16763
          Ident@16758..16763 "chunk"
        FuncArgs@16763..16771
          LParen@16763..16764 "("
          Ident@16764..16766
            Ident@16764..16766 "fs"
          Comma@16766..16767 ","
          Ident@16767..16770
            Ident@16767..16770 "ast"
          RParen@16770..16771 ")"
      FuncCall@16771..16785
        Ident@16771..16781
          Ident@16771..16781 "close_func"
        FuncArgs@16781..16785
          LParen@16781..16782 "("
          Ident@16782..16784
            Ident@16782..16784 "fs"
          RParen@16784..16785 ")"
      FuncCall@16785..16805
        Ident@16785..16791
          Ident@16785..16791 "assert"
        FuncArgs@16791..16805
          LParen@16791..16792 "("
          BinOp@16792..16804
            BinOp@16792..16799
              Ident@16792..16794
                Ident@16792..16794 "fs"
              Dot@16794..16795 "."
              Ident@16795..16799
                Ident@16795..16799 "prev"
            Eq@16799..16801 "=="
            LiteralExpr@16801..16804
              Nil@16801..16804 "nil"
          RParen@16804..16805 ")"
      FuncCall@16805..16825
        Ident@16805..16811
          Ident@16805..16811 "assert"
        FuncArgs@16811..16825
          LParen@16811..16812 "("
          BinOp@16812..16824
            BinOp@16812..16821
              Ident@16812..16814
                Ident@16812..16814 "fs"
              Dot@16814..16815 "."
              BinOp@16815..16821
                Ident@16815..16816
                  Ident@16815..16816 "f"
                Dot@16816..16817 "."
                Ident@16817..16821
                  Ident@16817..16821 "nups"
            Eq@16821..16823 "=="
            LiteralExpr@16823..16824
              Int@16823..16824 "0"
          RParen@16824..16825 ")"
      FuncCall@16825..16848
        Ident@16825..16831
          Ident@16825..16831 "assert"
        FuncArgs@16831..16848
          LParen@16831..16832 "("
          BinOp@16832..16847
            BinOp@16832..16844
              Ident@16832..16834
                Ident@16832..16834 "fs"
              Dot@16834..16835 "."
              Ident@16835..16844
                Ident@16835..16844 "nestlevel"
            Eq@16844..16846 "=="
            LiteralExpr@16846..16847
              Int@16846..16847 "0"
          RParen@16847..16848 ")"
      IfStmt@16848..16881
        If@16848..16850 "if"
        Ident@16850..16856
          Ident@16850..16856 "source"
        Then@16856..16860 "then"
        StmtList@16860..16878
          AssignStmt@16860..16878
            BinOp@16860..16871
              BinOp@16860..16864
                Ident@16860..16862
                  Ident@16860..16862 "fs"
                Dot@16862..16863 "."
                Ident@16863..16864
                  Ident@16863..16864 "f"
              Dot@16864..16865 "."
              Ident@16865..16871
                Ident@16865..16871 "source"
            Assign@16871..16872 "="
            Ident@16872..16878
              Ident@16872..16878 "source"
        End@16878..16881 "end"
      ReturnStmt@16881..16898
        Return@16881..16887 "return"
        ExprList@16887..16898
          BinOp@16887..16891
            Ident@16887..16889
              Ident@16887..16889 "fs"
            Dot@16889..16890 "."
            Ident@16890..16891
              Ident@16890..16891 "f"
          Comma@16891..16892 ","
          Ident@16892..16898
            Ident@16892..16898 "source"
    End@16898..16901 "end"
  ReturnStmt@16901..16908
    Return@16901..16907 "return"
    Ident@16907..16908
      Ident@16907..16908 "M"

